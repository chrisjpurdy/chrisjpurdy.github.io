<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="default.xsl"?>
<fr:tree
toc="true"
numbered="true"
show-heading="true"
show-metadata="true"
expanded="true"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>1448</fr:anchor><fr:addr
type="user">zwartmarsden2022</fr:addr><fr:route>zwartmarsden2022.xml</fr:route><fr:title
text="No-Go Theorems for Distributive Laws">No-Go Theorems for Distributive Laws</fr:title><fr:taxon>Reference</fr:taxon><fr:date><fr:year>2022</fr:year></fr:date><fr:authors><fr:author>Maaike Zwart</fr:author><fr:author>Dan Marsden</fr:author></fr:authors><fr:meta
name="bibtex"><![CDATA[  @article{
    Zwart_Marsden_2022,
    title={No-Go Theorems for Distributive Laws}, 
    volume={Volume 18, Issue 1}, 
    rights={https://creativecommons.org/licenses/by/4.0}, 
    ISSN={1860-5974}, 
    DOI={10.46298/lmcs-18(1:13)2022}, 
    journal={Logical Methods in Computer Science}, 
    author={Zwart, Maaike and Marsden, Dan}, 
    year={2022}, 
    month=jan, 
    pages={6253}, 
    language={en} 
  }]]></fr:meta></fr:frontmatter><fr:mainmatter /><fr:backmatter><fr:tree
toc="false"
numbered="false"
show-heading="true"
show-metadata="false"
expanded="true"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:title
text="Backlinks">Backlinks</fr:title><fr:authors /></fr:frontmatter><fr:mainmatter><fr:tree
toc="true"
numbered="false"
show-heading="true"
show-metadata="true"
expanded="false"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>1451</fr:anchor><fr:addr
type="user">lsd-0037</fr:addr><fr:route>lsd-0037.xml</fr:route><fr:title
text="Multiple zeros">Multiple zeros</fr:title><fr:date><fr:year>2025</fr:year><fr:month>1</fr:month><fr:day>23</fr:day></fr:date><fr:authors><fr:author><fr:link
type="local"
href="chrisjpurdy.xml"
addr="chrisjpurdy"
title="Chris Purdy">Chris Purdy</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:p>Let <fr:tex
display="inline"><![CDATA[(S \triangleleft  P, \iota ^S, \sigma ^S, \text {pr}^S)]]></fr:tex> and <fr:tex
display="inline"><![CDATA[(T \triangleleft  Q, \iota ^T, \sigma ^T, \text {pr}^T)]]></fr:tex> be <fr:link
type="local"
href="lsd-0002.xml"
addr="lsd-0002"
title="Monad container">monad containers</fr:link>, where <fr:tex
display="inline"><![CDATA[S \triangleleft  P]]></fr:tex> satisfies S3 (for <fr:tex
display="inline"><![CDATA[s]]></fr:tex>, <fr:tex
display="inline"><![CDATA[f]]></fr:tex>) and the singleton <fr:link
type="local"
href="not-0009.xml"
addr="not-0009"
title="Possible extra conditions for monad containers">properties</fr:link>, and <fr:tex
display="inline"><![CDATA[T \triangleleft  Q]]></fr:tex> has a constant <fr:tex
display="inline"><![CDATA[t_0]]></fr:tex>.</fr:p><fr:p>We start by assuming a <fr:link
type="local"
href="lsd-0008.xml"
addr="lsd-0008"
title="Monad container distributive law">monad container distributive law</fr:link> of type <fr:tex
display="inline"><![CDATA[S \triangleleft  P \circ  T \triangleleft  Q \Rightarrow  T \triangleleft  Q \circ  S \triangleleft  P]]></fr:tex> .</fr:p><fr:p>In the following we use the notion <fr:tex
display="inline"><![CDATA[t^p]]></fr:tex> for a shape <fr:tex
display="inline"><![CDATA[t]]></fr:tex> and some position <fr:tex
display="inline"><![CDATA[p]]></fr:tex>, defined as:
  <fr:tex
display="block"><![CDATA[     t^p := \lambda  y . \begin {cases}       t     & \text {if } y = p\\       \iota  & \text {otherwise}     \end {cases}   ]]></fr:tex>
  the types of the shapes and position will be clear from their context.</fr:p><fr:tree
toc="true"
numbered="true"
show-heading="true"
show-metadata="false"
expanded="true"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>432</fr:anchor><fr:addr
type="machine">#267</fr:addr><fr:route>unstable-267.xml</fr:route><fr:title
text="Composite zero">Composite zero</fr:title><fr:taxon>Lemma</fr:taxon><fr:date><fr:year>2025</fr:year><fr:month>1</fr:month><fr:day>23</fr:day></fr:date><fr:authors><fr:author><fr:link
type="local"
href="chrisjpurdy.xml"
addr="chrisjpurdy"
title="Chris Purdy">Chris Purdy</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:p>For a shape <fr:tex
display="inline"><![CDATA[s : S]]></fr:tex> and function <fr:tex
display="inline"><![CDATA[f : P\ s \to  S]]></fr:tex> that satisfy S3, and a constant <fr:tex
display="inline"><![CDATA[t_0 : T]]></fr:tex>, we have for any <fr:tex
display="inline"><![CDATA[p : P\ s]]></fr:tex> the equality:
    <fr:tex
display="block"><![CDATA[       u_1\ s\ t_0^p = t_0     ]]></fr:tex></fr:p>
 
   
   <fr:tree
toc="false"
numbered="true"
show-heading="true"
show-metadata="false"
expanded="true"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>434</fr:anchor><fr:addr
type="machine">#268</fr:addr><fr:route>unstable-268.xml</fr:route><fr:taxon>Proof</fr:taxon><fr:date><fr:year>2025</fr:year><fr:month>1</fr:month><fr:day>23</fr:day></fr:date><fr:authors><fr:author><fr:link
type="local"
href="chrisjpurdy.xml"
addr="chrisjpurdy"
title="Chris Purdy">Chris Purdy</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter>
    By the chain of equalities: 
    
  <fr:tex
display="block"><![CDATA[     \begin {align*}              &u_1\ s\ t_0^p\\       &= u_1\ s\ (\lambda  p' . \begin {cases}         u_1\ \iota ^S\ (\lambda  \_ . t_0) & \text {if } p' = p\\         u_1\ (f\ p')\ (\lambda  \_ . \iota ^T) & \text {otherwise}       \end {cases})\\       &= u_1\ s\ (\lambda  p' . u_1\ (\begin {cases}         \iota ^S & \text {if } p' = p\\         f\ p' & \text {otherwise}       \end {cases})\ (\lambda  \_ . \begin {cases}         t_0 & \text {if } p' = p\\         \iota ^T & \text {otherwise}       \end {cases}))\\       &= u_1\ (\sigma ^S\ s\ (\lambda  p' . \begin {cases}         \iota ^S & \text {if } p' = p\\         f\ p' & \text {otherwise}       \end {cases}))\ (\lambda  p'' . \begin {cases}         t_0 & \text {if } \text {pr}^S_1\ p'' = p\\         \iota ^T & \text {otherwise}       \end {cases})\\       &\overset {(S3)}{=} u_1\ \iota ^S\ (\lambda  \_ . \begin {cases}         t_0 & \text {if } * = *\\         \iota ^T & \text {otherwise}       \end {cases})\\       &= t_0          \end {align*}   ]]></fr:tex>

  </fr:mainmatter><fr:backmatter /></fr:tree>
 
</fr:mainmatter><fr:backmatter /></fr:tree><fr:tree
toc="true"
numbered="true"
show-heading="true"
show-metadata="false"
expanded="true"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>436</fr:anchor><fr:addr
type="machine">#269</fr:addr><fr:route>unstable-269.xml</fr:route><fr:title
text="Multiple zeros">Multiple zeros</fr:title><fr:taxon>Theorem</fr:taxon><fr:date><fr:year>2025</fr:year><fr:month>1</fr:month><fr:day>23</fr:day></fr:date><fr:authors><fr:author><fr:link
type="local"
href="chrisjpurdy.xml"
addr="chrisjpurdy"
title="Chris Purdy">Chris Purdy</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:p>Given a shape <fr:tex
display="inline"><![CDATA[s : S]]></fr:tex> and function <fr:tex
display="inline"><![CDATA[f : P\ s \to  S]]></fr:tex> that satisfy S3, where <fr:tex
display="inline"><![CDATA[s]]></fr:tex> has at least two positions <fr:tex
display="inline"><![CDATA[p, p' : P\ s]]></fr:tex>, then <fr:tex
display="inline"><![CDATA[T]]></fr:tex> <fr:em>cannot have more than one distinct constant shape</fr:em>.</fr:p>
 
   
   <fr:tree
toc="false"
numbered="true"
show-heading="true"
show-metadata="false"
expanded="true"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>438</fr:anchor><fr:addr
type="machine">#270</fr:addr><fr:route>unstable-270.xml</fr:route><fr:taxon>Proof</fr:taxon><fr:date><fr:year>2025</fr:year><fr:month>1</fr:month><fr:day>23</fr:day></fr:date><fr:authors><fr:author><fr:link
type="local"
href="chrisjpurdy.xml"
addr="chrisjpurdy"
title="Chris Purdy">Chris Purdy</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter>
    Assume <fr:em>two</fr:em> distinct constants <fr:tex
display="inline"><![CDATA[t_0, t_1 : T]]></fr:tex>. We have the equality:
    
  <fr:tex
display="block"><![CDATA[     \begin {align*}              &t_0\\       &= \sigma ^T\ t_0\ (\lambda  \_ . \iota ^T)\\       &= \sigma ^T\ (u_1\ s\ t^p_0)\ (\lambda  y . u_1\ (u_2\ s\ t^p_0\ y)\ (\lambda  z . t^{p'}_1\ (v_1\ y\ z)))\\       &= u_1\ s\ (\lambda  y . \sigma ^T\ (t^p_0\ y)\ (\lambda  \_ . t^{p'}_1\ y))\\       &= u_1\ s\ (\lambda  y . \begin {cases}         \sigma ^T\ t_0\ (\lambda  \_ . \iota ^T) & \text {if } y = p\\         \sigma ^T\ \iota ^T\ (\lambda  \_ . t_1) & \text {if } y = p'\\         \iota ^T & \text {otherwise}       \end {cases})\\       &= u_1\ s\ (\lambda  y . \begin {cases}         t_0 & \text {if } y = p\\         t_1 & \text {if } y = p'\\         \iota ^T & \text {otherwise}       \end {cases})\\          \end {align*}   ]]></fr:tex>

    and using the same steps, we can derive:
    <fr:tex
display="block"><![CDATA[       t_1 = u_1\ s\ (\lambda  y . \begin {cases}         t_0 & \text {if } y = p\\         t_1 & \text {if } y = p'\\         \iota ^T & \text {otherwise}       \end {cases})     ]]></fr:tex>
    Composing these two equalities, we get <fr:tex
display="inline"><![CDATA[t_0 = t_1]]></fr:tex>, which is a contradiction.
  </fr:mainmatter><fr:backmatter /></fr:tree>
 
</fr:mainmatter><fr:backmatter /></fr:tree><fr:p>This gives us a family of no-go theorems for distributive laws between monad containers. This theorem and proof is morally the same as the one in <html:span
xmlns:html="http://www.w3.org/1999/xhtml"
class="link-reference"><fr:link
type="local"
href="zwartmarsden2022.xml"
addr="zwartmarsden2022"
title="No-Go Theorems for Distributive Laws">[zwartmarsden2022]</fr:link></html:span> of the same name, but it applies to a different class of monads (ones isomorphic to the <fr:link
type="local"
href="lsd-0030.xml"
addr="lsd-0030"
title="Monad container extension">extension of a monad container</fr:link>).</fr:p></fr:mainmatter><fr:backmatter /></fr:tree><fr:tree
toc="true"
numbered="false"
show-heading="true"
show-metadata="true"
expanded="false"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>1453</fr:anchor><fr:addr
type="user">not-0009</fr:addr><fr:route>not-0009.xml</fr:route><fr:title
text="Possible extra conditions for monad containers">Possible extra conditions for monad containers</fr:title><fr:date><fr:year>2025</fr:year><fr:month>1</fr:month><fr:day>17</fr:day></fr:date><fr:authors><fr:author><fr:link
type="local"
href="chrisjpurdy.xml"
addr="chrisjpurdy"
title="Chris Purdy">Chris Purdy</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:p>These are mostly inspired by Zwart and Marsden's research into no-go theorems for distributive laws between algebraic theories <html:span
xmlns:html="http://www.w3.org/1999/xhtml"
class="link-reference"><fr:link
type="local"
href="zwartmarsden2022.xml"
addr="zwartmarsden2022"
title="No-Go Theorems for Distributive Laws">[zwartmarsden2022]</fr:link></html:span>.</fr:p><fr:p>I've been roughly translating properties of algebraic theories into the language of <fr:link
type="local"
href="lsd-0002.xml"
addr="lsd-0002"
title="Monad container">monad containers</fr:link> <fr:tex
display="inline"><![CDATA[(S \triangleleft  P, \iota , \sigma , \text {pr})]]></fr:tex>, by considering: 
  <fr:ul><fr:li>Shapes <fr:tex
display="inline"><![CDATA[s : S]]></fr:tex> as "terms"</fr:li>
    <fr:li>Positions <fr:tex
display="inline"><![CDATA[p : P\ s]]></fr:tex> as "free variables in the term <fr:tex
display="inline"><![CDATA[s]]></fr:tex>"</fr:li>
    <fr:li><fr:tex
display="inline"><![CDATA[\iota ]]></fr:tex> as a "generic variable placeholder"</fr:li>
    <fr:li><fr:tex
display="inline"><![CDATA[\sigma ]]></fr:tex> as a "generalised substitution"</fr:li>
    <fr:li><fr:tex
display="inline"><![CDATA[\text {pr}]]></fr:tex> as a "reindexing" of positions after a "substitution"</fr:li></fr:ul>
  This is <fr:em>not</fr:em> meant to be an exact translation; the idea is to get inspiration for properties of monad containers we might want to consider when proving things about <fr:link
type="local"
href="lsd-0008.xml"
addr="lsd-0008"
title="Monad container distributive law">monad container distributive laws</fr:link>.</fr:p><fr:tree
toc="true"
numbered="true"
show-heading="true"
show-metadata="false"
expanded="true"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>455</fr:anchor><fr:addr
type="machine">#254</fr:addr><fr:route>unstable-254.xml</fr:route><fr:title
text="Singleton property">Singleton property</fr:title><fr:date><fr:year>2025</fr:year><fr:month>1</fr:month><fr:day>17</fr:day></fr:date><fr:authors><fr:author><fr:link
type="local"
href="chrisjpurdy.xml"
addr="chrisjpurdy"
title="Chris Purdy">Chris Purdy</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:p><fr:tex
display="inline"><![CDATA[(S \triangleleft  P, \iota , \sigma , \text {pr})]]></fr:tex> satisfies the <fr:em>singleton property</fr:em> if <fr:tex
display="inline"><![CDATA[P\ \iota  \cong  1]]></fr:tex>. All <fr:link
type="local"
href="lsd-0009.xml"
addr="lsd-0009"
title="Cartesian monad container">cartesian monad containers</fr:link> have this property by definition.</fr:p></fr:mainmatter><fr:backmatter /></fr:tree><fr:tree
toc="true"
numbered="true"
show-heading="true"
show-metadata="false"
expanded="true"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>457</fr:anchor><fr:addr
type="machine">#255</fr:addr><fr:route>unstable-255.xml</fr:route><fr:title
text="Disjoint substitution condition">Disjoint substitution condition</fr:title><fr:date><fr:year>2025</fr:year><fr:month>1</fr:month><fr:day>17</fr:day></fr:date><fr:authors><fr:author><fr:link
type="local"
href="chrisjpurdy.xml"
addr="chrisjpurdy"
title="Chris Purdy">Chris Purdy</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:p>A property of algebraic theories that is used implicitly in <html:span
xmlns:html="http://www.w3.org/1999/xhtml"
class="link-reference"><fr:link
type="local"
href="zwartmarsden2022.xml"
addr="zwartmarsden2022"
title="No-Go Theorems for Distributive Laws">[zwartmarsden2022]</fr:link></html:span> is commutativity of disjoint substitutions, i.e. given terms <fr:tex
display="inline"><![CDATA[s, s_0]]></fr:tex> and a substitution <fr:tex
display="inline"><![CDATA[f]]></fr:tex> where for all <fr:tex
display="inline"><![CDATA[y]]></fr:tex>, <fr:tex
display="inline"><![CDATA[x \notin  \text {var}(f(y))]]></fr:tex> we always have that:
    <fr:tex
display="block"><![CDATA[       s[s_0/x][f(y) / y \neq  x] = s[f(y) / y \neq  x][s_0/x]     ]]></fr:tex></fr:p><fr:p>In monad container language: <fr:tex
display="inline"><![CDATA[(S \triangleleft  P, \iota , \sigma , \text {pr})]]></fr:tex> satisfies the <fr:em>"disjoint substitution condition"</fr:em> if for all shapes <fr:tex
display="inline"><![CDATA[s, s_0 : S]]></fr:tex>, positions <fr:tex
display="inline"><![CDATA[p : P\ s]]></fr:tex>, functions <fr:tex
display="inline"><![CDATA[f : P\ s \to  S]]></fr:tex> where <fr:tex
display="inline"><![CDATA[f\ p = \iota ]]></fr:tex>, and functions <fr:tex
display="inline"><![CDATA[g : P\ s \to  S]]></fr:tex> where:
    
  <fr:tex
display="block"><![CDATA[     \begin {align*}              g\ p  &:= s_0\\       g\ p' &:= \iota \ \ \ \ \ \ \ \text {if } p' \neq  p          \end {align*}   ]]></fr:tex>

    then we have:
    <fr:tex
display="block"><![CDATA[       \sigma \ (\sigma \ s\ g)\ (f \circ  \text {pr}_1) = \sigma \ (\sigma \ s\ f)\ (g \circ  \text {pr}_1)     ]]></fr:tex></fr:p><fr:p>The <fr:link
type="local"
href="lsd-0014.xml"
addr="lsd-0014"
title="List monad container">List monad container</fr:link> <fr:tex
display="inline"><![CDATA[\mathbb {N} \triangleleft  \text {Fin}]]></fr:tex> satisfies this, which makes sense since it can also be represented by an algebraic theory. This also holds for <fr:link
type="local"
href="lsd-0016.xml"
addr="lsd-0016"
title="Coproduct monad container">coproduct</fr:link>, <fr:link
type="local"
href="lsd-0007.xml"
addr="lsd-0007"
title="There is only one representable monad container">reader</fr:link> (trivially), <fr:link
type="local"
href="lsd-0012.xml"
addr="lsd-0012"
title="State monad container">state</fr:link>, <fr:link
type="local"
href="lsd-0015.xml"
addr="lsd-0015"
title="Writer monad container">writer</fr:link>, and probably many others!</fr:p><fr:p>EDIT: In fact, this holds for <fr:em>all</fr:em> monad containers, and the proof is quite simple (just use associativity of <fr:tex
display="inline"><![CDATA[\sigma ]]></fr:tex> and "pull the case distinctions through the inner <fr:tex
display="inline"><![CDATA[\sigma ]]></fr:tex>").</fr:p></fr:mainmatter><fr:backmatter /></fr:tree><fr:tree
toc="true"
numbered="true"
show-heading="true"
show-metadata="false"
expanded="true"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>459</fr:anchor><fr:addr
type="machine">#256</fr:addr><fr:route>unstable-256.xml</fr:route><fr:title
text="Constant shape">Constant shape</fr:title><fr:date><fr:year>2025</fr:year><fr:month>1</fr:month><fr:day>17</fr:day></fr:date><fr:authors><fr:author><fr:link
type="local"
href="chrisjpurdy.xml"
addr="chrisjpurdy"
title="Chris Purdy">Chris Purdy</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:p><fr:tex
display="inline"><![CDATA[(S \triangleleft  P, \iota , \sigma , \text {pr})]]></fr:tex> has a <fr:em>constant shape</fr:em> if there exists some <fr:tex
display="inline"><![CDATA[s_0 : S]]></fr:tex> where <fr:tex
display="inline"><![CDATA[P\ s_0 \cong  0]]></fr:tex>.</fr:p><fr:p>Notice that all functions <fr:tex
display="inline"><![CDATA[P\ s_0 \to  S]]></fr:tex> are equal to <fr:tex
display="inline"><![CDATA[\lambda  \_ . \iota ]]></fr:tex>, since <fr:tex
display="inline"><![CDATA[P\ s_0]]></fr:tex> is propositional and pointed (and therefore contractible). As a consequence of this, we have that:
    <fr:tex
display="block"><![CDATA[       \sigma \ s_0\ f = \sigma \ s_0\ (\lambda  \_ . \iota ) = s_0     ]]></fr:tex></fr:p></fr:mainmatter><fr:backmatter /></fr:tree><fr:tree
toc="true"
numbered="true"
show-heading="true"
show-metadata="false"
expanded="true"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>461</fr:anchor><fr:addr
type="machine">#257</fr:addr><fr:route>unstable-257.xml</fr:route><fr:title
text="Absorbtion...? (Zwart and Marsden's S3)">Absorbtion...? (Zwart and Marsden's S3)</fr:title><fr:date><fr:year>2025</fr:year><fr:month>1</fr:month><fr:day>17</fr:day></fr:date><fr:authors><fr:author><fr:link
type="local"
href="chrisjpurdy.xml"
addr="chrisjpurdy"
title="Chris Purdy">Chris Purdy</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:p><fr:tex
display="inline"><![CDATA[(S \triangleleft  P, \iota , \sigma , \text {pr})]]></fr:tex> satisfies absorbtion (<html:mark
xmlns:html="http://www.w3.org/1999/xhtml">TODO: not a good name!</html:mark>) if there exist an <fr:tex
display="inline"><![CDATA[s : S]]></fr:tex>, and <fr:tex
display="inline"><![CDATA[f : P\ s \to  S]]></fr:tex> such that for <fr:em>any</fr:em> <fr:tex
display="inline"><![CDATA[p : P\ s]]></fr:tex> we have:
    <fr:tex
display="block"><![CDATA[       \sigma \ s\ f^{p} = \iota      ]]></fr:tex>
    using the shorthand:
    <fr:tex
display="block"><![CDATA[       f^p := \lambda  p' .        \begin {cases}         \iota  & \text {if } p' = p\\         f\ p' & \text {otherwise}       \end {cases}      ]]></fr:tex></fr:p><fr:p>This holds for <fr:tex
display="inline"><![CDATA[\mathbb {N} \triangleleft  \text {Fin}]]></fr:tex> for example: take <fr:tex
display="inline"><![CDATA[n]]></fr:tex> to be any natural number greater than <fr:tex
display="inline"><![CDATA[0]]></fr:tex>, take <fr:tex
display="inline"><![CDATA[f := \lambda  \_ . 0]]></fr:tex>, and then given some <fr:tex
display="inline"><![CDATA[x : \text {Fin}\ n]]></fr:tex> we have <fr:tex
display="inline"><![CDATA[\sum _{i = 0}^{n} f^x\ i = 1]]></fr:tex>. Notice that this property holds for <fr:em>all</fr:em> <fr:tex
display="inline"><![CDATA[n]]></fr:tex> with non-empty position sets, so <fr:tex
display="inline"><![CDATA[\mathbb {N} \triangleleft  \text {Fin}]]></fr:tex> actually satisfies a stronger condition (analogous to Zwart and Marsden's S4 <html:span
xmlns:html="http://www.w3.org/1999/xhtml"
class="link-reference"><fr:link
type="local"
href="zwartmarsden2022.xml"
addr="zwartmarsden2022"
title="No-Go Theorems for Distributive Laws">[zwartmarsden2022]</fr:link></html:span>).</fr:p><fr:p>This also holds for <fr:link
type="local"
href="lsd-0012.xml"
addr="lsd-0012"
title="State monad container">state</fr:link>, by taking <fr:tex
display="inline"><![CDATA[s = \text {id}]]></fr:tex> and <fr:tex
display="inline"><![CDATA[f = \lambda  \_ . \text {id}]]></fr:tex>.</fr:p></fr:mainmatter><fr:backmatter /></fr:tree></fr:mainmatter><fr:backmatter /></fr:tree><fr:tree
toc="true"
numbered="false"
show-heading="true"
show-metadata="true"
expanded="false"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>1455</fr:anchor><fr:addr
type="user">not-0001</fr:addr><fr:route>not-0001.xml</fr:route><fr:title
text="Methods of obtaining distributive law results">Methods of obtaining distributive law results</fr:title><fr:date><fr:year>2024</fr:year><fr:month>12</fr:month><fr:day>12</fr:day></fr:date><fr:authors><fr:author><fr:link
type="local"
href="chrisjpurdy.xml"
addr="chrisjpurdy"
title="Chris Purdy">Chris Purdy</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:p>I've been reviewing the literature on distributive laws, specifically those papers that Dan Marsden mentioned, and have found some candidates for methods that we could attempt to adapt to finding monad container distributive laws:
  <fr:ul><fr:li>Generalising the "abides" property in <html:span
xmlns:html="http://www.w3.org/1999/xhtml"
class="link-reference"><fr:link
type="local"
href="zwartmarsden2022.xml"
addr="zwartmarsden2022"
title="No-Go Theorems for Distributive Laws">[zwartmarsden2022]</fr:link></html:span> to monad containers - looks like it would be some funky equation on positions in <fr:tex
display="inline"><![CDATA[\sigma ]]></fr:tex> shapes.</fr:li>
    <fr:li>Manes and Mulry I Theorem 4.3.4 mentions something about distributive laws between commutative monads - this might be adaptable.</fr:li>
    <fr:li>"Multiple constants" in <html:span
xmlns:html="http://www.w3.org/1999/xhtml"
class="link-reference"><fr:link
type="local"
href="zwartmarsden2022.xml"
addr="zwartmarsden2022"
title="No-Go Theorems for Distributive Laws">[zwartmarsden2022]</fr:link></html:span> would correspond to multiple shapes having singleton position sets.</fr:li>
    <fr:li>Manes and Mulry use "Kleisli strengths" to show distributive laws, we should see what those are in the case of monad containers.</fr:li></fr:ul></fr:p></fr:mainmatter><fr:backmatter /></fr:tree></fr:mainmatter><fr:backmatter /></fr:tree></fr:backmatter></fr:tree>