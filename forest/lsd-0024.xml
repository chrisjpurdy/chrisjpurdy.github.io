<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="default.xsl"?>
<fr:tree
toc="true"
numbered="true"
show-heading="true"
show-metadata="true"
expanded="true"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>876</fr:anchor><fr:addr
type="user">lsd-0024</fr:addr><fr:route>lsd-0024.xml</fr:route><fr:title
text="Relation between container distributive laws and matching pairs of monoids/Zappa-Szép products">Relation between container distributive laws and matching pairs of monoids/Zappa-Szép products</fr:title><fr:date><fr:year>2024</fr:year><fr:month>12</fr:month><fr:day>11</fr:day></fr:date><fr:authors><fr:author><fr:link
type="local"
href="chrisjpurdy.xml"
addr="chrisjpurdy"
title="Chris Purdy">Chris Purdy</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:p>As mentioned in <html:span
xmlns:html="http://www.w3.org/1999/xhtml"
class="link-reference"><fr:link
type="local"
href="ahmanuustalu2013.xml"
addr="ahmanuustalu2013"
title="Distributive laws of directed containers">[ahmanuustalu2013]</fr:link></html:span>, <fr:link
type="local"
href="lsd-0022.xml"
addr="lsd-0022"
title="Directed container distributive law">directed container distributive laws</fr:link> are generalisations of <fr:em>matching pairs of monoid actions</fr:em>. Further, composition of directed containers via a distributive law is a generalisation of the <fr:link
type="external"
href="https://en.wikipedia.org/wiki/Zappa%E2%80%93Sz%C3%A9p_product">Zappa-Szép product</fr:link> of two monoids. As mentioned in the paper, you can actually recover the definition of a matching pair by looking at distributive laws between representable <fr:link
type="local"
href="lsd-0023.xml"
addr="lsd-0023"
title="Directed container">directed containers</fr:link>.</fr:p><fr:tree
toc="true"
numbered="true"
show-heading="true"
show-metadata="false"
expanded="true"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>273</fr:anchor><fr:addr
type="user">lsd-0025</fr:addr><fr:route>lsd-0025.xml</fr:route><fr:title
text="Directed container distributive law between representables">Directed container distributive law between representables</fr:title><fr:date><fr:year>2024</fr:year><fr:month>12</fr:month><fr:day>11</fr:day></fr:date><fr:authors><fr:author><fr:link
type="local"
href="chrisjpurdy.xml"
addr="chrisjpurdy"
title="Chris Purdy">Chris Purdy</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:p>Let <fr:tex
display="inline"><![CDATA[(1 \triangleleft  \lambda  \_ . A, \downarrow ^A, o^A, \oplus ^A)]]></fr:tex> and <fr:tex
display="inline"><![CDATA[(1 \triangleleft  \lambda  \_ . B, \downarrow ^B, o^B, \oplus ^B)]]></fr:tex> be representable <fr:link
type="local"
href="lsd-0023.xml"
addr="lsd-0023"
title="Directed container">directed containers</fr:link>. By specialising the equations of a <fr:link
type="local"
href="lsd-0022.xml"
addr="lsd-0022"
title="Directed container distributive law">directed container distributive law</fr:link> to these, all equations involving <fr:tex
display="inline"><![CDATA[u_2]]></fr:tex> disappear and we are left with:
  <fr:tex
display="block"><![CDATA[     \begin {align*}       v_1\ b\ o^A &= o^A\\       v_1\ o^B\ a &= a\\       v_1\ b\ (a \oplus ^A a') &= v_1\ b\ a \oplus ^A v_1\ (v_2\ b\ a)\ a'\\       v_1\ (b \oplus ^B b')\ a &= v_1\ b\ (v_1\ b'\ a)\\       v_2\ b\ o^A &= b\\       v_2\ o^B\ a &= o^B\\       v_2\ b\ (a \oplus ^A a') &= v_2\ (v_2\ b\ a)\ a'\\       v_2\ (b \oplus ^B b')\ a &= v_2\ b\ (v_1\ b' a) \oplus ^B v_2\ b'\ a     \end {align*}   ]]></fr:tex>
  which exhibit <fr:tex
display="inline"><![CDATA[v_1]]></fr:tex> and <fr:tex
display="inline"><![CDATA[v_2]]></fr:tex> as a matching pair of monoid maps between the monoids <fr:tex
display="inline"><![CDATA[(A , o^A, \oplus ^A)]]></fr:tex> and <fr:tex
display="inline"><![CDATA[(B, o^B, \oplus ^B)]]></fr:tex>. Hence, directed container distributive laws of this type are in bijection with matching pairs of actions for the relevant monoids.</fr:p></fr:mainmatter><fr:backmatter /></fr:tree><fr:p>As it turns out, <fr:link
type="local"
href="lsd-0008.xml"
addr="lsd-0008"
title="Monad container distributive law">monad container distributive laws</fr:link> are <fr:em>also</fr:em> a generalisation of matching pairs of monoid actions. This is a bit harder to see than in the directed container case, but as before we can recover the data and equations for a matching pair by specialising the distributive law to a particular type of monad container.</fr:p><fr:tree
toc="true"
numbered="true"
show-heading="true"
show-metadata="false"
expanded="true"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>275</fr:anchor><fr:addr
type="user">lsd-0026</fr:addr><fr:route>lsd-0026.xml</fr:route><fr:title
text="Monad container distributive law between writers">Monad container distributive law between writers</fr:title><fr:date><fr:year>2024</fr:year><fr:month>12</fr:month><fr:day>11</fr:day></fr:date><fr:authors><fr:author><fr:link
type="local"
href="chrisjpurdy.xml"
addr="chrisjpurdy"
title="Chris Purdy">Chris Purdy</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:p>Let <fr:tex
display="inline"><![CDATA[(A \triangleleft  \lambda  \_ . 1, \iota ^A, \sigma ^A, \text {pr}^A)]]></fr:tex> and <fr:tex
display="inline"><![CDATA[(B \triangleleft  \lambda  \_ . 1, \iota ^B, \sigma ^B, \text {pr}^B)]]></fr:tex> be <fr:link
type="local"
href="lsd-0002.xml"
addr="lsd-0002"
title="Monad container">monad containers</fr:link>. By specialising the data and equations for a <fr:link
type="local"
href="lsd-0008.xml"
addr="lsd-0008"
title="Monad container distributive law">monad container distributive law</fr:link> to these, <fr:tex
display="inline"><![CDATA[v_1]]></fr:tex> and <fr:tex
display="inline"><![CDATA[v_2]]></fr:tex> become trivial (<fr:tex
display="inline"><![CDATA[\text {pr}^A]]></fr:tex> and <fr:tex
display="inline"><![CDATA[\text {pr}^B]]></fr:tex> are already trivial), and we are left with:
  
  <fr:tex
display="block"><![CDATA[     \begin {align*}            u_1\ \iota ^A\ (\lambda  \_ . b) &= b\\     u_1\ a\ (\lambda  \_ . \iota ^B) &= \iota ^B\\     u_1\ (\sigma ^A\ a\ (\lambda  \_ . a'))\ (\lambda  \_ . b) &= u_1\ a\ (\lambda  \_ . u_1\ a'\ (\lambda  \_ . b))\\     u_1\ a\ (\lambda  \_ . \sigma ^B\ b\ (\lambda  \_ . b')) &= \sigma ^B\ (u_1\ a\ (\lambda  \_ . b))\ (\lambda  \_ . u_1\ (u_2\ a\ (\lambda  \_ . b)\ *)\ (\lambda  \_ . b'))\\      u_2\ \iota ^A\ (\lambda  \_ . b)\ * &= \iota ^A\\     u_2\ a\ (\lambda  \_ . \iota ^B)\ * &= a\\     u_2\ (\sigma ^A\ a\ (\lambda  \_ . a'))\ (\lambda  \_ . b)\ * &= \sigma ^A\ (u_2\ a\ (\lambda  \_ . u_1\ a'\ (\lambda  \_ . b))\ *)\ (\lambda  \_ . u_2\ a'\ (\lambda  \_ . b')\ *)\\     u_2\ a\ (\lambda  \_ . \sigma ^B\ b\ (\lambda  \_ . b'))\ * &= u_2\ (u_2\ a\ (\lambda  \_ . b)\ *)\ (\lambda  \_ . b')\ *        \end {align*}   ]]></fr:tex>

  Bear in mind that, since all position sets are <fr:tex
display="inline"><![CDATA[1]]></fr:tex>, we do not lose generality by assuming constant all of the functions in the equations above. By defining:
  
  <fr:tex
display="block"><![CDATA[     \begin {align*}            \alpha \ a\ b := u_1\ a\ (\lambda  \_ . b)\\     \beta \ a\ b := u_2\ a\ (\lambda  \_ . b)\ *\\     a \otimes ^A a' := \sigma ^A\ a\ (\lambda  \_ . a')\\     b \otimes ^B b' := \sigma ^B\ b\ (\lambda  \_ . b')        \end {align*}   ]]></fr:tex>

  we can rewrite these equations as:
  
  <fr:tex
display="block"><![CDATA[     \begin {align*}            \alpha \ \iota ^A\ b &= b\\     \alpha \ a\ \iota ^B &= \iota ^B\\     \alpha \ (a \otimes ^A a')\ b &= \alpha \ a\ (\alpha \ a'\ b)\\     \alpha \ a\ (b \otimes ^B b') &= (\alpha \ a\ b) \otimes ^B (\alpha \ (\beta \ a\ b)\ b')\\      \beta \ \iota ^A\ b &= \iota ^A\\     \beta \ a\ \iota ^B &= a\\     \beta \ (a \otimes ^A a')\ b &= (\beta \ a\ (\alpha \ a'\ b)) \otimes ^A (\beta \ a'\ b')\\     \beta \ a\ (b \otimes ^B b') &= \beta \ (\beta \ a\ b)\ b'        \end {align*}   ]]></fr:tex>

  These are exactly the equations exhibiting <fr:tex
display="inline"><![CDATA[\alpha ]]></fr:tex> and <fr:tex
display="inline"><![CDATA[\beta ]]></fr:tex> as a matching pair of monoid actions between <fr:tex
display="inline"><![CDATA[(A, \otimes ^A, \iota ^A)]]></fr:tex> and <fr:tex
display="inline"><![CDATA[(B , \otimes ^B, \iota ^B)]]></fr:tex>. Therefore, monad container distributive laws of this type are in bijection with matching pairs of actions for the relevant monoids.</fr:p></fr:mainmatter><fr:backmatter /></fr:tree><fr:p>As shown, both of these types of distributive law are generalisations of matching pairs of monoid actions, each in a slightly different way. For directed containers the generalisation is "in the direction of the shapes", and for monad containers the generalisation is "in the direction of the positions".</fr:p>
  <html:hr
xmlns:html="http://www.w3.org/1999/xhtml" />
<fr:p>Edit (29/01/25): we also get that <fr:link
type="local"
href="lsd-0039.xml"
addr="lsd-0039"
title="Monad-comonad container distributive laws">(monad-comonad) mixed container distributive laws</fr:link> correspond to matching pairs of monoid actions when specialised to a particular pair of containers:</fr:p><fr:tree
toc="true"
numbered="true"
show-heading="true"
show-metadata="false"
expanded="true"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>277</fr:anchor><fr:addr
type="user">lsd-0041</fr:addr><fr:route>lsd-0041.xml</fr:route><fr:title
text="Monad-comonad container distributive law between writer monad and coreader comonad">Monad-comonad container distributive law between writer monad and coreader comonad</fr:title><fr:date><fr:year>2025</fr:year><fr:month>1</fr:month><fr:day>29</fr:day></fr:date><fr:authors><fr:author><fr:link
type="local"
href="chrisjpurdy.xml"
addr="chrisjpurdy"
title="Chris Purdy">Chris Purdy</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:p>Let <fr:tex
display="inline"><![CDATA[(A \triangleleft  \lambda  \_ . 1, \iota ^A, \otimes ^A, \text {pr}^A)]]></fr:tex> be a <fr:link
type="local"
href="lsd-0015.xml"
addr="lsd-0015"
title="Writer monad container">writer monad container</fr:link> and <fr:tex
display="inline"><![CDATA[(1 \triangleleft  \lambda  \_ . B, \downarrow ^B, o^B, \oplus ^B)]]></fr:tex> be a representable <fr:link
type="local"
href="lsd-0023.xml"
addr="lsd-0023"
title="Directed container">directed containers</fr:link>. By specialising the equations of a <fr:link
type="local"
href="lsd-0039.xml"
addr="lsd-0039"
title="Monad-comonad container distributive laws">monad-comonad container distributive law</fr:link> to these, all equations involving <fr:tex
display="inline"><![CDATA[u_1]]></fr:tex> and <fr:tex
display="inline"><![CDATA[v_1]]></fr:tex> disappear and we are left with:
  <fr:tex
display="block"><![CDATA[     \begin {align*}       u_2\ \iota ^A\ (\lambda  \_ . *)\ b &= \iota ^A\\       v_2\ \{\iota ^A\}\ b\ * &= b\\       u_2\ (a \otimes ^A a')\ (\lambda  \_ . *)\ b &= u_2\ a\ b \otimes ^A (u_2\ a'\ (\lambda  \_ . *)\ (v_2\ \{a\}\ b\ *))\\       v_2\ (a \otimes ^A a')\ (\lambda  \_ . *)\ b &= v_2\ a\ (v_2\ a'\ b)\\       u_2\ a\ (\lambda  \_ . *)\ o^B &= a\\       v_2\ \{a\}\ o^B\ * &= o^B\\       u_2\ a\ (\lambda  \_ . *)\ (b \oplus ^B b') &= u_2\ (u_2\ a\ (\lambda  \_ . *)\ b')\ b\\       v_2\ \{a\}\ (b \oplus ^B b')\ * &= (v_2\ \{u_2\ a\ (\lambda  \_ . *)\ b'\}\ b\ *) \oplus ^B (v_2\ \{a\}\ b'\ *)     \end {align*}   ]]></fr:tex>
  which (up to ignoring trivial arguments) exhibit <fr:tex
display="inline"><![CDATA[u_2]]></fr:tex> and <fr:tex
display="inline"><![CDATA[v_2]]></fr:tex> as a matching pair of monoid maps between the monoids <fr:tex
display="inline"><![CDATA[(A , \iota ^A, \otimes ^A)]]></fr:tex> and <fr:tex
display="inline"><![CDATA[(B, o^B, \oplus ^B)]]></fr:tex>.</fr:p><fr:p>It should be possible to use this to define some kind of monoid bimodules (bialgebras), given that monad-comonad distributive laws are used in the literature <html:span
xmlns:html="http://www.w3.org/1999/xhtml"
class="link-reference"><fr:link
type="local"
href="livernetetal2015.xml"
addr="livernetetal2015"
title="Generalised bialgebras and entwined monads and comonads">[livernetetal2015]</fr:link></html:span> to define a "bi-Eilenberg-Moore" category.</fr:p></fr:mainmatter><fr:backmatter /></fr:tree><fr:p>Strangely, <fr:link
type="local"
href="lsd-0040.xml"
addr="lsd-0040"
title="Comonad-monad container distributive laws">comonad-monad container distributive laws</fr:link> seem to break this pattern, and <fr:em>do not</fr:em> give us matching pairs of monoid maps when specialising them to particular containers:</fr:p><fr:tree
toc="true"
numbered="true"
show-heading="true"
show-metadata="false"
expanded="true"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>279</fr:anchor><fr:addr
type="user">lsd-0042</fr:addr><fr:route>lsd-0042.xml</fr:route><fr:title
text="Comonad-monad container distributive law between coreader comonad and writer monad">Comonad-monad container distributive law between coreader comonad and writer monad</fr:title><fr:date><fr:year>2025</fr:year><fr:month>1</fr:month><fr:day>30</fr:day></fr:date><fr:authors><fr:author><fr:link
type="local"
href="chrisjpurdy.xml"
addr="chrisjpurdy"
title="Chris Purdy">Chris Purdy</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:p>Let <fr:tex
display="inline"><![CDATA[(1 \triangleleft  \lambda  \_ . A, \downarrow ^A, o^A, \oplus ^A)]]></fr:tex> be a representable <fr:link
type="local"
href="lsd-0023.xml"
addr="lsd-0023"
title="Directed container">directed containers</fr:link> and <fr:tex
display="inline"><![CDATA[(B \triangleleft  \lambda  \_ . 1, \iota ^B, \otimes ^B, \text {pr}^B)]]></fr:tex> be a <fr:link
type="local"
href="lsd-0015.xml"
addr="lsd-0015"
title="Writer monad container">writer monad container</fr:link>. By specialising <fr:link
type="local"
href="lsd-0040.xml"
addr="lsd-0040"
title="Comonad-monad container distributive laws">comonad-monad container distributive laws</fr:link> to these, <fr:tex
display="inline"><![CDATA[u_2]]></fr:tex> and <fr:tex
display="inline"><![CDATA[v_2]]></fr:tex> trivialise and we are left with:
  
  <fr:tex
display="block"><![CDATA[     \begin {align*}            \alpha \ f\ o^A &= o^A\\     \alpha \ f\ (a \oplus ^A a') &= \alpha \ f\ a \oplus ^A (\alpha \ (\lambda  a''. f\ (\alpha \ f\ a \oplus ^A a''))\ a')\\     \alpha \ (\lambda  \_ . \iota ^B)\ a &= a\\     \alpha \ (\lambda  a' . f\ a' \otimes ^B g\ a')\ a &= \alpha \ f\ (\alpha \ g\ a)        \end {align*}   ]]></fr:tex>

  where we take:
  <fr:tex
display="block"><![CDATA[     \alpha \ f\ a := v_1\ \{*\}\ \{f\}\ *\ a   ]]></fr:tex></fr:p><fr:p>This doesn't seem to correspond to anything that I've heard of, and certainly doesn't look like a matching pair of monoid actions, in particular since the first argument of <fr:tex
display="inline"><![CDATA[\alpha ]]></fr:tex> is a function.</fr:p><fr:p>We should be able to define something that looks like a two sided Kleisli category with this.</fr:p></fr:mainmatter><fr:backmatter /></fr:tree></fr:mainmatter><fr:backmatter><fr:tree
toc="false"
numbered="false"
show-heading="true"
show-metadata="false"
expanded="true"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:title
text="References">References</fr:title><fr:authors /></fr:frontmatter><fr:mainmatter><fr:tree
toc="true"
numbered="false"
show-heading="true"
show-metadata="true"
expanded="false"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>878</fr:anchor><fr:addr
type="user">livernetetal2015</fr:addr><fr:route>livernetetal2015.xml</fr:route><fr:title
text="Generalised bialgebras and entwined monads and comonads">Generalised bialgebras and entwined monads and comonads</fr:title><fr:taxon>Reference</fr:taxon><fr:date><fr:year>2015</fr:year></fr:date><fr:authors><fr:author>Muriel Livernet</fr:author><fr:author>Bachuki Mesablishvili</fr:author><fr:author>Robert Wisbauer</fr:author></fr:authors><fr:meta
name="bibtex"><![CDATA[  @article{
    Livernet_Mesablishvili_Wisbauer_2015, 
    title={Generalised bialgebras and entwined monads and comonads}, 
    volume={219}, 
    ISSN={0022-4049}, 
    DOI={10.1016/j.jpaa.2014.10.013},
    number={8}, 
    journal={Journal of Pure and Applied Algebra}, 
    author={Livernet, Muriel and Mesablishvili, Bachuki and Wisbauer, Robert}, 
    year={2015}, 
    month=aug, 
    pages={3263–3278} 
  }]]></fr:meta></fr:frontmatter><fr:mainmatter /><fr:backmatter /></fr:tree><fr:tree
toc="true"
numbered="false"
show-heading="true"
show-metadata="true"
expanded="false"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>882</fr:anchor><fr:addr
type="user">ahmanuustalu2013</fr:addr><fr:route>ahmanuustalu2013.xml</fr:route><fr:title
text="Distributive laws of directed containers">Distributive laws of directed containers</fr:title><fr:taxon>Reference</fr:taxon><fr:date><fr:year>2013</fr:year></fr:date><fr:authors><fr:author>Danel Ahman</fr:author><fr:author><fr:link
type="local"
href="tarmouustalu.xml"
addr="tarmouustalu"
title="Tarmo Uustalu">Tarmo Uustalu</fr:link></fr:author></fr:authors><fr:meta
name="bibtex"><![CDATA[   @article{
      Ahman_Uustalu_2013, 
      title={Distributive laws of directed containers}, 
      ISSN={1349-8614},
      DOI={10.2201/NiiPi.2013.10.2},
      number={10},
      journal={Progress in Informatics},
      author={Ahman, Danel and Uustalu, Tarmo},
      year={2013}, 
      month=mar, 
      pages={3–18} 
   }]]>
</fr:meta></fr:frontmatter><fr:mainmatter /><fr:backmatter /></fr:tree></fr:mainmatter><fr:backmatter /></fr:tree><fr:tree
toc="false"
numbered="false"
show-heading="true"
show-metadata="false"
expanded="true"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:title
text="Context">Context</fr:title><fr:authors /></fr:frontmatter><fr:mainmatter><fr:tree
toc="true"
numbered="false"
show-heading="true"
show-metadata="true"
expanded="false"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>885</fr:anchor><fr:addr
type="user">dia-0004</fr:addr><fr:route>dia-0004.xml</fr:route><fr:title
text="Diary: Relation between container distributive laws and matching pairs of monoids/Zappa-Szép products">Diary: Relation between container distributive laws and matching pairs of monoids/Zappa-Szép products</fr:title><fr:date><fr:year>2024</fr:year><fr:month>12</fr:month><fr:day>11</fr:day></fr:date><fr:authors><fr:author><fr:link
type="local"
href="chrisjpurdy.xml"
addr="chrisjpurdy"
title="Chris Purdy">Chris Purdy</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:p><fr:link
type="local"
href="dia-0003.xml"
addr="dia-0003"
title="Diary: Monad container algebras">Previous entry</fr:link>, <fr:link
type="local"
href="dia-0005.xml"
addr="dia-0005"
title="Diary: Natural deduction-style unfold rule for -formulae">Next entry</fr:link></fr:p>
  
  <fr:tree
toc="true"
numbered="true"
show-heading="false"
show-metadata="false"
expanded="true"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>600</fr:anchor><fr:addr
type="user">lsd-0024</fr:addr><fr:route>lsd-0024.xml</fr:route><fr:title
text="Relation between container distributive laws and matching pairs of monoids/Zappa-Szép products">Relation between container distributive laws and matching pairs of monoids/Zappa-Szép products</fr:title><fr:date><fr:year>2024</fr:year><fr:month>12</fr:month><fr:day>11</fr:day></fr:date><fr:authors><fr:author><fr:link
type="local"
href="chrisjpurdy.xml"
addr="chrisjpurdy"
title="Chris Purdy">Chris Purdy</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:p>As mentioned in <html:span
xmlns:html="http://www.w3.org/1999/xhtml"
class="link-reference"><fr:link
type="local"
href="ahmanuustalu2013.xml"
addr="ahmanuustalu2013"
title="Distributive laws of directed containers">[ahmanuustalu2013]</fr:link></html:span>, <fr:link
type="local"
href="lsd-0022.xml"
addr="lsd-0022"
title="Directed container distributive law">directed container distributive laws</fr:link> are generalisations of <fr:em>matching pairs of monoid actions</fr:em>. Further, composition of directed containers via a distributive law is a generalisation of the <fr:link
type="external"
href="https://en.wikipedia.org/wiki/Zappa%E2%80%93Sz%C3%A9p_product">Zappa-Szép product</fr:link> of two monoids. As mentioned in the paper, you can actually recover the definition of a matching pair by looking at distributive laws between representable <fr:link
type="local"
href="lsd-0023.xml"
addr="lsd-0023"
title="Directed container">directed containers</fr:link>.</fr:p><fr:tree
toc="true"
numbered="true"
show-heading="true"
show-metadata="false"
expanded="true"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>273</fr:anchor><fr:addr
type="user">lsd-0025</fr:addr><fr:route>lsd-0025.xml</fr:route><fr:title
text="Directed container distributive law between representables">Directed container distributive law between representables</fr:title><fr:date><fr:year>2024</fr:year><fr:month>12</fr:month><fr:day>11</fr:day></fr:date><fr:authors><fr:author><fr:link
type="local"
href="chrisjpurdy.xml"
addr="chrisjpurdy"
title="Chris Purdy">Chris Purdy</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:p>Let <fr:tex
display="inline"><![CDATA[(1 \triangleleft  \lambda  \_ . A, \downarrow ^A, o^A, \oplus ^A)]]></fr:tex> and <fr:tex
display="inline"><![CDATA[(1 \triangleleft  \lambda  \_ . B, \downarrow ^B, o^B, \oplus ^B)]]></fr:tex> be representable <fr:link
type="local"
href="lsd-0023.xml"
addr="lsd-0023"
title="Directed container">directed containers</fr:link>. By specialising the equations of a <fr:link
type="local"
href="lsd-0022.xml"
addr="lsd-0022"
title="Directed container distributive law">directed container distributive law</fr:link> to these, all equations involving <fr:tex
display="inline"><![CDATA[u_2]]></fr:tex> disappear and we are left with:
  <fr:tex
display="block"><![CDATA[     \begin {align*}       v_1\ b\ o^A &= o^A\\       v_1\ o^B\ a &= a\\       v_1\ b\ (a \oplus ^A a') &= v_1\ b\ a \oplus ^A v_1\ (v_2\ b\ a)\ a'\\       v_1\ (b \oplus ^B b')\ a &= v_1\ b\ (v_1\ b'\ a)\\       v_2\ b\ o^A &= b\\       v_2\ o^B\ a &= o^B\\       v_2\ b\ (a \oplus ^A a') &= v_2\ (v_2\ b\ a)\ a'\\       v_2\ (b \oplus ^B b')\ a &= v_2\ b\ (v_1\ b' a) \oplus ^B v_2\ b'\ a     \end {align*}   ]]></fr:tex>
  which exhibit <fr:tex
display="inline"><![CDATA[v_1]]></fr:tex> and <fr:tex
display="inline"><![CDATA[v_2]]></fr:tex> as a matching pair of monoid maps between the monoids <fr:tex
display="inline"><![CDATA[(A , o^A, \oplus ^A)]]></fr:tex> and <fr:tex
display="inline"><![CDATA[(B, o^B, \oplus ^B)]]></fr:tex>. Hence, directed container distributive laws of this type are in bijection with matching pairs of actions for the relevant monoids.</fr:p></fr:mainmatter><fr:backmatter /></fr:tree><fr:p>As it turns out, <fr:link
type="local"
href="lsd-0008.xml"
addr="lsd-0008"
title="Monad container distributive law">monad container distributive laws</fr:link> are <fr:em>also</fr:em> a generalisation of matching pairs of monoid actions. This is a bit harder to see than in the directed container case, but as before we can recover the data and equations for a matching pair by specialising the distributive law to a particular type of monad container.</fr:p><fr:tree
toc="true"
numbered="true"
show-heading="true"
show-metadata="false"
expanded="true"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>275</fr:anchor><fr:addr
type="user">lsd-0026</fr:addr><fr:route>lsd-0026.xml</fr:route><fr:title
text="Monad container distributive law between writers">Monad container distributive law between writers</fr:title><fr:date><fr:year>2024</fr:year><fr:month>12</fr:month><fr:day>11</fr:day></fr:date><fr:authors><fr:author><fr:link
type="local"
href="chrisjpurdy.xml"
addr="chrisjpurdy"
title="Chris Purdy">Chris Purdy</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:p>Let <fr:tex
display="inline"><![CDATA[(A \triangleleft  \lambda  \_ . 1, \iota ^A, \sigma ^A, \text {pr}^A)]]></fr:tex> and <fr:tex
display="inline"><![CDATA[(B \triangleleft  \lambda  \_ . 1, \iota ^B, \sigma ^B, \text {pr}^B)]]></fr:tex> be <fr:link
type="local"
href="lsd-0002.xml"
addr="lsd-0002"
title="Monad container">monad containers</fr:link>. By specialising the data and equations for a <fr:link
type="local"
href="lsd-0008.xml"
addr="lsd-0008"
title="Monad container distributive law">monad container distributive law</fr:link> to these, <fr:tex
display="inline"><![CDATA[v_1]]></fr:tex> and <fr:tex
display="inline"><![CDATA[v_2]]></fr:tex> become trivial (<fr:tex
display="inline"><![CDATA[\text {pr}^A]]></fr:tex> and <fr:tex
display="inline"><![CDATA[\text {pr}^B]]></fr:tex> are already trivial), and we are left with:
  
  <fr:tex
display="block"><![CDATA[     \begin {align*}            u_1\ \iota ^A\ (\lambda  \_ . b) &= b\\     u_1\ a\ (\lambda  \_ . \iota ^B) &= \iota ^B\\     u_1\ (\sigma ^A\ a\ (\lambda  \_ . a'))\ (\lambda  \_ . b) &= u_1\ a\ (\lambda  \_ . u_1\ a'\ (\lambda  \_ . b))\\     u_1\ a\ (\lambda  \_ . \sigma ^B\ b\ (\lambda  \_ . b')) &= \sigma ^B\ (u_1\ a\ (\lambda  \_ . b))\ (\lambda  \_ . u_1\ (u_2\ a\ (\lambda  \_ . b)\ *)\ (\lambda  \_ . b'))\\      u_2\ \iota ^A\ (\lambda  \_ . b)\ * &= \iota ^A\\     u_2\ a\ (\lambda  \_ . \iota ^B)\ * &= a\\     u_2\ (\sigma ^A\ a\ (\lambda  \_ . a'))\ (\lambda  \_ . b)\ * &= \sigma ^A\ (u_2\ a\ (\lambda  \_ . u_1\ a'\ (\lambda  \_ . b))\ *)\ (\lambda  \_ . u_2\ a'\ (\lambda  \_ . b')\ *)\\     u_2\ a\ (\lambda  \_ . \sigma ^B\ b\ (\lambda  \_ . b'))\ * &= u_2\ (u_2\ a\ (\lambda  \_ . b)\ *)\ (\lambda  \_ . b')\ *        \end {align*}   ]]></fr:tex>

  Bear in mind that, since all position sets are <fr:tex
display="inline"><![CDATA[1]]></fr:tex>, we do not lose generality by assuming constant all of the functions in the equations above. By defining:
  
  <fr:tex
display="block"><![CDATA[     \begin {align*}            \alpha \ a\ b := u_1\ a\ (\lambda  \_ . b)\\     \beta \ a\ b := u_2\ a\ (\lambda  \_ . b)\ *\\     a \otimes ^A a' := \sigma ^A\ a\ (\lambda  \_ . a')\\     b \otimes ^B b' := \sigma ^B\ b\ (\lambda  \_ . b')        \end {align*}   ]]></fr:tex>

  we can rewrite these equations as:
  
  <fr:tex
display="block"><![CDATA[     \begin {align*}            \alpha \ \iota ^A\ b &= b\\     \alpha \ a\ \iota ^B &= \iota ^B\\     \alpha \ (a \otimes ^A a')\ b &= \alpha \ a\ (\alpha \ a'\ b)\\     \alpha \ a\ (b \otimes ^B b') &= (\alpha \ a\ b) \otimes ^B (\alpha \ (\beta \ a\ b)\ b')\\      \beta \ \iota ^A\ b &= \iota ^A\\     \beta \ a\ \iota ^B &= a\\     \beta \ (a \otimes ^A a')\ b &= (\beta \ a\ (\alpha \ a'\ b)) \otimes ^A (\beta \ a'\ b')\\     \beta \ a\ (b \otimes ^B b') &= \beta \ (\beta \ a\ b)\ b'        \end {align*}   ]]></fr:tex>

  These are exactly the equations exhibiting <fr:tex
display="inline"><![CDATA[\alpha ]]></fr:tex> and <fr:tex
display="inline"><![CDATA[\beta ]]></fr:tex> as a matching pair of monoid actions between <fr:tex
display="inline"><![CDATA[(A, \otimes ^A, \iota ^A)]]></fr:tex> and <fr:tex
display="inline"><![CDATA[(B , \otimes ^B, \iota ^B)]]></fr:tex>. Therefore, monad container distributive laws of this type are in bijection with matching pairs of actions for the relevant monoids.</fr:p></fr:mainmatter><fr:backmatter /></fr:tree><fr:p>As shown, both of these types of distributive law are generalisations of matching pairs of monoid actions, each in a slightly different way. For directed containers the generalisation is "in the direction of the shapes", and for monad containers the generalisation is "in the direction of the positions".</fr:p>
  <html:hr
xmlns:html="http://www.w3.org/1999/xhtml" />
<fr:p>Edit (29/01/25): we also get that <fr:link
type="local"
href="lsd-0039.xml"
addr="lsd-0039"
title="Monad-comonad container distributive laws">(monad-comonad) mixed container distributive laws</fr:link> correspond to matching pairs of monoid actions when specialised to a particular pair of containers:</fr:p><fr:tree
toc="true"
numbered="true"
show-heading="true"
show-metadata="false"
expanded="true"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>277</fr:anchor><fr:addr
type="user">lsd-0041</fr:addr><fr:route>lsd-0041.xml</fr:route><fr:title
text="Monad-comonad container distributive law between writer monad and coreader comonad">Monad-comonad container distributive law between writer monad and coreader comonad</fr:title><fr:date><fr:year>2025</fr:year><fr:month>1</fr:month><fr:day>29</fr:day></fr:date><fr:authors><fr:author><fr:link
type="local"
href="chrisjpurdy.xml"
addr="chrisjpurdy"
title="Chris Purdy">Chris Purdy</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:p>Let <fr:tex
display="inline"><![CDATA[(A \triangleleft  \lambda  \_ . 1, \iota ^A, \otimes ^A, \text {pr}^A)]]></fr:tex> be a <fr:link
type="local"
href="lsd-0015.xml"
addr="lsd-0015"
title="Writer monad container">writer monad container</fr:link> and <fr:tex
display="inline"><![CDATA[(1 \triangleleft  \lambda  \_ . B, \downarrow ^B, o^B, \oplus ^B)]]></fr:tex> be a representable <fr:link
type="local"
href="lsd-0023.xml"
addr="lsd-0023"
title="Directed container">directed containers</fr:link>. By specialising the equations of a <fr:link
type="local"
href="lsd-0039.xml"
addr="lsd-0039"
title="Monad-comonad container distributive laws">monad-comonad container distributive law</fr:link> to these, all equations involving <fr:tex
display="inline"><![CDATA[u_1]]></fr:tex> and <fr:tex
display="inline"><![CDATA[v_1]]></fr:tex> disappear and we are left with:
  <fr:tex
display="block"><![CDATA[     \begin {align*}       u_2\ \iota ^A\ (\lambda  \_ . *)\ b &= \iota ^A\\       v_2\ \{\iota ^A\}\ b\ * &= b\\       u_2\ (a \otimes ^A a')\ (\lambda  \_ . *)\ b &= u_2\ a\ b \otimes ^A (u_2\ a'\ (\lambda  \_ . *)\ (v_2\ \{a\}\ b\ *))\\       v_2\ (a \otimes ^A a')\ (\lambda  \_ . *)\ b &= v_2\ a\ (v_2\ a'\ b)\\       u_2\ a\ (\lambda  \_ . *)\ o^B &= a\\       v_2\ \{a\}\ o^B\ * &= o^B\\       u_2\ a\ (\lambda  \_ . *)\ (b \oplus ^B b') &= u_2\ (u_2\ a\ (\lambda  \_ . *)\ b')\ b\\       v_2\ \{a\}\ (b \oplus ^B b')\ * &= (v_2\ \{u_2\ a\ (\lambda  \_ . *)\ b'\}\ b\ *) \oplus ^B (v_2\ \{a\}\ b'\ *)     \end {align*}   ]]></fr:tex>
  which (up to ignoring trivial arguments) exhibit <fr:tex
display="inline"><![CDATA[u_2]]></fr:tex> and <fr:tex
display="inline"><![CDATA[v_2]]></fr:tex> as a matching pair of monoid maps between the monoids <fr:tex
display="inline"><![CDATA[(A , \iota ^A, \otimes ^A)]]></fr:tex> and <fr:tex
display="inline"><![CDATA[(B, o^B, \oplus ^B)]]></fr:tex>.</fr:p><fr:p>It should be possible to use this to define some kind of monoid bimodules (bialgebras), given that monad-comonad distributive laws are used in the literature <html:span
xmlns:html="http://www.w3.org/1999/xhtml"
class="link-reference"><fr:link
type="local"
href="livernetetal2015.xml"
addr="livernetetal2015"
title="Generalised bialgebras and entwined monads and comonads">[livernetetal2015]</fr:link></html:span> to define a "bi-Eilenberg-Moore" category.</fr:p></fr:mainmatter><fr:backmatter /></fr:tree><fr:p>Strangely, <fr:link
type="local"
href="lsd-0040.xml"
addr="lsd-0040"
title="Comonad-monad container distributive laws">comonad-monad container distributive laws</fr:link> seem to break this pattern, and <fr:em>do not</fr:em> give us matching pairs of monoid maps when specialising them to particular containers:</fr:p><fr:tree
toc="true"
numbered="true"
show-heading="true"
show-metadata="false"
expanded="true"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>279</fr:anchor><fr:addr
type="user">lsd-0042</fr:addr><fr:route>lsd-0042.xml</fr:route><fr:title
text="Comonad-monad container distributive law between coreader comonad and writer monad">Comonad-monad container distributive law between coreader comonad and writer monad</fr:title><fr:date><fr:year>2025</fr:year><fr:month>1</fr:month><fr:day>30</fr:day></fr:date><fr:authors><fr:author><fr:link
type="local"
href="chrisjpurdy.xml"
addr="chrisjpurdy"
title="Chris Purdy">Chris Purdy</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:p>Let <fr:tex
display="inline"><![CDATA[(1 \triangleleft  \lambda  \_ . A, \downarrow ^A, o^A, \oplus ^A)]]></fr:tex> be a representable <fr:link
type="local"
href="lsd-0023.xml"
addr="lsd-0023"
title="Directed container">directed containers</fr:link> and <fr:tex
display="inline"><![CDATA[(B \triangleleft  \lambda  \_ . 1, \iota ^B, \otimes ^B, \text {pr}^B)]]></fr:tex> be a <fr:link
type="local"
href="lsd-0015.xml"
addr="lsd-0015"
title="Writer monad container">writer monad container</fr:link>. By specialising <fr:link
type="local"
href="lsd-0040.xml"
addr="lsd-0040"
title="Comonad-monad container distributive laws">comonad-monad container distributive laws</fr:link> to these, <fr:tex
display="inline"><![CDATA[u_2]]></fr:tex> and <fr:tex
display="inline"><![CDATA[v_2]]></fr:tex> trivialise and we are left with:
  
  <fr:tex
display="block"><![CDATA[     \begin {align*}            \alpha \ f\ o^A &= o^A\\     \alpha \ f\ (a \oplus ^A a') &= \alpha \ f\ a \oplus ^A (\alpha \ (\lambda  a''. f\ (\alpha \ f\ a \oplus ^A a''))\ a')\\     \alpha \ (\lambda  \_ . \iota ^B)\ a &= a\\     \alpha \ (\lambda  a' . f\ a' \otimes ^B g\ a')\ a &= \alpha \ f\ (\alpha \ g\ a)        \end {align*}   ]]></fr:tex>

  where we take:
  <fr:tex
display="block"><![CDATA[     \alpha \ f\ a := v_1\ \{*\}\ \{f\}\ *\ a   ]]></fr:tex></fr:p><fr:p>This doesn't seem to correspond to anything that I've heard of, and certainly doesn't look like a matching pair of monoid actions, in particular since the first argument of <fr:tex
display="inline"><![CDATA[\alpha ]]></fr:tex> is a function.</fr:p><fr:p>We should be able to define something that looks like a two sided Kleisli category with this.</fr:p></fr:mainmatter><fr:backmatter /></fr:tree></fr:mainmatter><fr:backmatter /></fr:tree>
</fr:mainmatter><fr:backmatter /></fr:tree></fr:mainmatter><fr:backmatter /></fr:tree><fr:tree
toc="false"
numbered="false"
show-heading="true"
show-metadata="false"
expanded="true"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:title
text="Related">Related</fr:title><fr:authors /></fr:frontmatter><fr:mainmatter><fr:tree
toc="true"
numbered="false"
show-heading="true"
show-metadata="true"
expanded="false"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>887</fr:anchor><fr:addr
type="user">lsd-0040</fr:addr><fr:route>lsd-0040.xml</fr:route><fr:title
text="Comonad-monad container distributive laws">Comonad-monad container distributive laws</fr:title><fr:taxon>Definition</fr:taxon><fr:date><fr:year>2025</fr:year><fr:month>1</fr:month><fr:day>28</fr:day></fr:date><fr:authors><fr:author><fr:link
type="local"
href="chrisjpurdy.xml"
addr="chrisjpurdy"
title="Chris Purdy">Chris Purdy</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:p>Given a <fr:link
type="local"
href="lsd-0023.xml"
addr="lsd-0023"
title="Directed container">directed container</fr:link> <fr:tex
display="inline"><![CDATA[(S \triangleleft  P, o, \downarrow , \oplus )]]></fr:tex>, and a <fr:link
type="local"
href="lsd-0002.xml"
addr="lsd-0002"
title="Monad container">monad container</fr:link> <fr:tex
display="inline"><![CDATA[(T \triangleleft  Q, \iota , \sigma , \text {pr})]]></fr:tex> we define a <fr:em>comonad-monad container distributive law</fr:em> as given by the data:
  
  <fr:tex
display="block"><![CDATA[     \begin {align*}            &u_2 : \prod _{s : S} \prod _{f : P\ s \to  T} Q\ (f\ (o\ \{s\})) \to  S \\     &v_1 : \prod _{\{s : S\}} \prod _{\{f : P\ s \to  T\}} \prod _{q : Q\ (f\ (o\ \{s\}))} P\ (u_2\ s\ f\ q) \to  P\ s \\     &v_2 : \prod _{\{s : S\}} \prod _{\{f : P\ s \to  T\}} \prod _{q : Q\ (f\ (o\ \{s\}))} \prod _{p : P\ (u_2\ s\ f\ q)} Q\ (f\ (v_1\ q\ p)) \\        \end {align*}   ]]></fr:tex>

  where the following equalities hold:
  
  <fr:tex
display="block"><![CDATA[     \begin {align*}            u_2\ s\ f\ q \downarrow  p &= u_2\ (s \downarrow  v_1\ q\ p)\ (\lambda  p' . f\ (v_1\ q\ p \oplus  p'))\ (v_2\ q\ p)\\     v_1\ q\ o &= o\\     v_1\ q\ (p \oplus  p') &= v_1\ q\ p \oplus  v_1\ (v_2\ q\ p)\ p'\\     v_2\ q\ o &= q\\     v_2\ q\ (p \oplus  p') &= v_2\ (v_2\ q\ p)\ p'\\     \\     u_2\ s\ (\lambda  \_ . \iota )\ p &= s\\     v\ \{s\}\ \{\lambda  \_ . \iota \} &= \langle  \pi _2 , \pi _1 \rangle \\     u_2\ s\ (\sigma  \circ  \langle  f , g \rangle )\ q &= u_2\ (u_2\ s\ f\ (\text {pr}_1\ q))\ (\lambda  p . g\ (v_1\ q\ p)\ (v_2\ q\ p))\ (\text {pr}_2\ q)\\     v_1\ (\text {pr}_1\ q)\ (v_1\ (\text {pr}_2\ q)\ p) &= v_1\ q\ p\\     v_2\ (\text {pr}_1\ q)\ (v_1\ (\text {pr}_2\ q)\ p) &= \text {pr}_1\ (v_2\ q\ p)\\     v_2\ (\text {pr}_2\ q)\ p &= \text {pr}_2\ (v_2\ q\ p)        \end {align*}   ]]></fr:tex></fr:p><fr:p>Note: the <fr:tex
display="inline"><![CDATA[u_1]]></fr:tex> map doesn't need to be included in the data, because the laws (for directed containers) require that <fr:tex
display="inline"><![CDATA[u_1\ s\ f = f\ (o\ \{s\})]]></fr:tex>.</fr:p></fr:mainmatter><fr:backmatter /></fr:tree><fr:tree
toc="true"
numbered="false"
show-heading="true"
show-metadata="true"
expanded="false"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>889</fr:anchor><fr:addr
type="user">lsd-0039</fr:addr><fr:route>lsd-0039.xml</fr:route><fr:title
text="Monad-comonad container distributive laws">Monad-comonad container distributive laws</fr:title><fr:taxon>Definition</fr:taxon><fr:date><fr:year>2025</fr:year><fr:month>1</fr:month><fr:day>28</fr:day></fr:date><fr:authors><fr:author><fr:link
type="local"
href="chrisjpurdy.xml"
addr="chrisjpurdy"
title="Chris Purdy">Chris Purdy</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:p>Given a <fr:link
type="local"
href="lsd-0002.xml"
addr="lsd-0002"
title="Monad container">monad container</fr:link> <fr:tex
display="inline"><![CDATA[(S \triangleleft  P, \iota , \sigma , \text {pr})]]></fr:tex> and a <fr:link
type="local"
href="lsd-0023.xml"
addr="lsd-0023"
title="Directed container">directed container</fr:link> <fr:tex
display="inline"><![CDATA[(T \triangleleft  Q, o, \downarrow , \oplus )]]></fr:tex>, we define a <fr:em>monad-comonad container distributive law</fr:em> as given by the data:
  
  <fr:tex
display="block"><![CDATA[     \begin {align*}            &u_1 : \prod _{s : S} (P\ s \to  T) \to  T \\     &u_2 : \prod _{s : S} \prod _{f : P\ s \to  T} Q\ (u_1\ s\ f) \to  S \\     &v_1 : \prod _{\{s : S\}} \prod _{\{f : P\ s \to  T\}} \prod _{q : Q\ (u_1\ s\ f)} P\ (u_2\ s\ f\ q) \to  P\ s \\     &v_2 : \prod _{\{s : S\}} \prod _{\{f : P\ s \to  T\}} \prod _{q : Q\ (u_1\ s\ f)} \prod _{p : P\ (u_2\ s\ f\ q)} Q\ (f\ (v_1\ q\ p)) \\        \end {align*}   ]]></fr:tex>

  where the following equalities hold:
  
  <fr:tex
display="block"><![CDATA[     \begin {align*}            u\ \iota \ (\lambda  \_ . t) &= (t , \lambda  \_ . \iota )\\     v\ \{\iota \}\ \{\lambda  \_. t\} &= \langle  \pi _2 , \pi _1 \rangle \\     u_1\ (\sigma \ s\ f)\ (g \circ  \text {pr}) &= u_1\ s\ (u_1 \circ  \langle  f , g \rangle )\\     u_2\ (\sigma \ s\ f)\ (g \circ  \text {pr})\ q &= \sigma \ (u_2\ s\ (u_1 \circ  \langle  f , g \rangle )\ q)\ (\lambda  p . u_2\ (f\ (v_1\ q\ p))\ (g\ (v_1\ q\ p))\ (v_2\ q\ p))\\       \text {pr}_1\ (v_1\ q\ p) &= v_1\ q\ (\text {pr}_1\ p)\\     \text {pr}_2\ (v_1\ q\ p) &= v_1\ (v_2\ q\ (\text {pr}_1\ p))\ (\text {pr}_2\ p)\\     v_2\ q\ p &= v_2\ (v_2\ q\ (\text {pr}_1\ p))\ (\text {pr}_2\ p)\\     \\     u_1\ s\ f \downarrow  q &= u_1\ (u_2\ s\ f\ q)\ (\lambda  p . f\ (v_1\ q\ p) \downarrow  v_2\ q\ p)\\     u_2\ s\ f\ o &= s\\     u_2\ s\ f\ (q \oplus  q') &= u_2\ (u_2\ s\ f\ q)\ (\lambda  p . f\ (v_1\ q\ p) \downarrow  v_2\ q\ p)\ q'\\     v_1\ o\ p &= p\\     v_1\ (q \oplus  q')\ p &= v_1\ q\ (v_1\ q'\ p)\\     v_2\ o\ p &= o\\     v_2\ (q \oplus  q')\ p &= v_2\ q\ (v_1\ q' p) \oplus  v_2\ q'\ p        \end {align*}   ]]></fr:tex></fr:p></fr:mainmatter><fr:backmatter /></fr:tree><fr:tree
toc="true"
numbered="false"
show-heading="true"
show-metadata="true"
expanded="false"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>891</fr:anchor><fr:addr
type="user">lsd-0022</fr:addr><fr:route>lsd-0022.xml</fr:route><fr:title
text="Directed container distributive law">Directed container distributive law</fr:title><fr:taxon>Definition</fr:taxon><fr:date><fr:year>2024</fr:year><fr:month>12</fr:month><fr:day>11</fr:day></fr:date><fr:authors><fr:author><fr:link
type="local"
href="chrisjpurdy.xml"
addr="chrisjpurdy"
title="Chris Purdy">Chris Purdy</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:p>Let <fr:tex
display="inline"><![CDATA[(S \triangleleft  P, \downarrow ^S, o^S, \oplus ^S)]]></fr:tex> and <fr:tex
display="inline"><![CDATA[(T \triangleleft  Q, \downarrow ^T, o^T, \oplus ^T)]]></fr:tex> be <fr:link
type="local"
href="lsd-0023.xml"
addr="lsd-0023"
title="Directed container">directed containers</fr:link>.
  A directed container distributive law <html:span
xmlns:html="http://www.w3.org/1999/xhtml"
class="link-reference"><fr:link
type="local"
href="ahmanuustalu2013.xml"
addr="ahmanuustalu2013"
title="Distributive laws of directed containers">[ahmanuustalu2013]</fr:link></html:span> of <fr:tex
display="inline"><![CDATA[S \triangleleft  P]]></fr:tex> over <fr:tex
display="inline"><![CDATA[T \triangleleft  Q]]></fr:tex> is given by the data:
  <fr:tex
display="block"><![CDATA[     \begin {align*}       &u_2 : \prod _{s : S} \prod _{f : P\ s \to  T} Q\ (f\ o^S) \to  S\\       &v_1 : \prod _{\{s : S\}} \prod _{\{f : P\ s \to  T\}} \prod _{q : Q\ (f\ o^S)} P\ (u_2\ s\ f\ q) \to  P\ s\\       &v_2 : \prod _{\{s : S\}} \prod _{\{f : P\ s \to  T\}} \prod _{q : Q\ (f\ o^S)} \prod _{p : P\ (u_2\ s\ f\ q)} Q\ (f\ (v_1\ q\ p))\\     \end {align*}   ]]></fr:tex>
  where the following equalities hold:
  <fr:tex
display="block"><![CDATA[     \begin {align*}       u_2\ s\ f\ q \downarrow ^S p &= u_2\ (s \downarrow ^S v_1\ q\ p)\ (\lambda  p' . f\ (v_1\ q\ p \oplus ^S p'))\ (v_2\ q\ p)\\       u_2\ s\ f\ o^T &= s\\       u_2\ s\ f\ (q \oplus ^T q') &= u_2\ (u_2\ s\ f\ q)\ (\lambda  p . f\ (v_1\ q\ p) \downarrow ^T v_2\ q\ p)\ q'\\       v_1\ q\ o^S &= o^S\\       v_1\ q\ (p \oplus ^S p') &= v_1\ q\ p \oplus ^S v_1\ (v_2\ q\ p)\ p'\\       v_1\ o^T\ p &= p\\       v_1\ (q \oplus ^T q')\ p &= v_1\ q\ (v_1\ q'\ p)\\       v_2\ q\ o^S &= q\\       v_2\ q\ (p \oplus ^S p') &= v_2\ (v_2\ q\ p)\ p'\\       v_2\ o^T\ p &= o^T\\       v_2\ (q \oplus ^T q')\ p &= v_2\ q\ (v_1\ q' p) \oplus ^T v_2\ q'\ p     \end {align*}   ]]></fr:tex></fr:p><fr:p>Note: the <fr:tex
display="inline"><![CDATA[u_1]]></fr:tex> map doesn't need to be included in the data, because the laws require that <fr:tex
display="inline"><![CDATA[u_1\ s\ f = f\ (o^S\ \{s\})]]></fr:tex>.</fr:p></fr:mainmatter><fr:backmatter /></fr:tree><fr:tree
toc="true"
numbered="false"
show-heading="true"
show-metadata="true"
expanded="false"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>893</fr:anchor><fr:addr
type="user">lsd-0023</fr:addr><fr:route>lsd-0023.xml</fr:route><fr:title
text="Directed container">Directed container</fr:title><fr:taxon>Definition</fr:taxon><fr:date><fr:year>2024</fr:year><fr:month>12</fr:month><fr:day>11</fr:day></fr:date><fr:authors><fr:author><fr:link
type="local"
href="chrisjpurdy.xml"
addr="chrisjpurdy"
title="Chris Purdy">Chris Purdy</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:p>Let <fr:tex
display="inline"><![CDATA[S \triangleleft  P]]></fr:tex> be a container. A directed container <html:span
xmlns:html="http://www.w3.org/1999/xhtml"
class="link-reference"><fr:link
type="local"
href="ahmanchapmanuustalu2012.xml"
addr="ahmanchapmanuustalu2012"
title="When Is a Container a Comonad?">[ahmanchapmanuustalu2012]</fr:link></html:span> on <fr:tex
display="inline"><![CDATA[S \triangleleft  P]]></fr:tex> is given by the following data:
  <fr:tex
display="block"><![CDATA[     \begin {align*}       \downarrow  &: \prod _{s : S} P\ s \to  S\\       o &: \prod _{\{s : S\}} P\ s\\       \oplus  &: \prod _{\{s : S\}} \prod _{p : P\ s} P\ (s \downarrow  p) \to  P\ s     \end {align*}   ]]></fr:tex>
  satisfying two shape equations and three position equations:
  <fr:tex
display="block"><![CDATA[     \begin {align*}       s \downarrow  o &= s\\       s \downarrow  (p \oplus  p') &= (s \downarrow  p) \downarrow  p'\\       p \oplus  o &= p\\       o \oplus  p &= p\\       (p \oplus  p') \oplus  p'' &= p \oplus  (p' \oplus  p'')     \end {align*}   ]]></fr:tex></fr:p></fr:mainmatter><fr:backmatter /></fr:tree><fr:tree
toc="true"
numbered="false"
show-heading="true"
show-metadata="true"
expanded="false"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>895</fr:anchor><fr:addr
type="user">lsd-0008</fr:addr><fr:route>lsd-0008.xml</fr:route><fr:title
text="Monad container distributive law">Monad container distributive law</fr:title><fr:taxon>Definition</fr:taxon><fr:date><fr:year>2024</fr:year><fr:month>12</fr:month><fr:day>2</fr:day></fr:date><fr:authors><fr:author><fr:link
type="local"
href="chrisjpurdy.xml"
addr="chrisjpurdy"
title="Chris Purdy">Chris Purdy</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:p>Let <fr:tex
display="inline"><![CDATA[(S \triangleleft  P, \iota ^S, \sigma ^S, \text {pr}^S)]]></fr:tex> and <fr:tex
display="inline"><![CDATA[(T \triangleleft  Q, \iota ^T, \sigma ^T, \text {pr}^T)]]></fr:tex> be <fr:link
type="local"
href="lsd-0002.xml"
addr="lsd-0002"
title="Monad container">monad containers</fr:link>.
  A distributive law of <fr:tex
display="inline"><![CDATA[S \triangleleft  P]]></fr:tex> over <fr:tex
display="inline"><![CDATA[T \triangleleft  Q]]></fr:tex> is given by the data:
  
  <fr:tex
display="block"><![CDATA[     \begin {align*}            &u_1 : \prod _{s : S} (P\ s \to  T) \to  T \\     &u_2 : \prod _{s : S} \prod _{f : P\ s \to  T} Q\ (u_1\ s\ f) \to  S \\     &v_1 : \prod _{\{s : S\}} \prod _{\{f : P\ s \to  T\}} \prod _{q : Q\ (u_1\ s\ f)} P\ (u_2\ s\ f\ q) \to  P\ s \\     &v_2 : \prod _{\{s : S\}} \prod _{\{f : P\ s \to  T\}} \prod _{q : Q\ (u_1\ s\ f)} \prod _{p : P\ (u_2\ s\ f\ q)} Q\ (f\ (v_1\ q\ p)) \\        \end {align*}   ]]></fr:tex>

  where the following equalities hold:
  
  <fr:tex
display="block"><![CDATA[     \begin {align*}            u\ \iota ^S\ (\lambda  \_ . t) &= (t , \lambda  \_ . \iota ^S)\\     u\ s\ (\lambda  \_. \iota ^T) &= (\iota ^T , \lambda  \_. s)\\     v\ \{\iota ^S\}\ \{\lambda  \_. t\} &= \langle  \pi _2 , \pi _1 \rangle \\     v\ \{s\}\ \{\lambda  \_. \iota ^T\} &= \langle  \pi _2 , \pi _1 \rangle \\     \\      u_1\ (\sigma ^S\ s\ f)\ (g \circ  \text {pr}^S) &= u_1\ s\ (u_1 \circ  \langle  f , g \rangle )\\     u_2\ (\sigma ^S\ s\ f)\ (g \circ  \text {pr}^S)\ q &= \sigma ^S\ (u_2\ s\ (u_1 \circ  \langle  f , g \rangle )\ q)\ (\lambda  p . u_2\ (f\ (v_1\ q\ p))\ (g\ (v_1\ q\ p))\ (v_2\ q\ p))\\       \text {pr}^S_1\ (v_1\ q\ p) &= v_1\ q\ (\text {pr}^S_1\ p)\\     \text {pr}^S_2\ (v_1\ q\ p) &= v_1\ (v_2\ q\ (\text {pr}^S_1\ p))\ (\text {pr}^S_2\ p)\\     v_2\ q\ p &= v_2\ (v_2\ q\ (\text {pr}^S_1\ p))\ (\text {pr}^S_2\ p)\\     \\     u_1\ s\ (\sigma ^T \circ  \langle  f , g \rangle ) &= \sigma ^T\ (u_1\ s\ f)\ (\lambda  q . u_1\ (u_2\ s\ f\ q)\ (\lambda  p . g\ (v_1\ q\ p)\ (v_2\ q\ p)))\\     u_2\ s\ (\sigma ^T \circ  \langle  f , g \rangle )\ q &= u_2\ (u_2\ s\ f\ (\text {pr}^T_1\ q))\ (\lambda  p . g\ (v_1\ q\ p)\ (v_2\ q\ p))\ (\text {pr}^T_2\ q)\\     v_1\ (\text {pr}^T_1\ q)\ (v_1\ (\text {pr}^T_2\ q)\ p) &= v_1\ q\ p\\     v_2\ (\text {pr}^T_1\ q)\ (v_1\ (\text {pr}^T_2\ q)\ p) &= \text {pr}^T_1\ (v_2\ q\ p)\\     v_2\ (\text {pr}^T_2\ q)\ p &= \text {pr}^T_2\ (v_2\ q\ p)        \end {align*}   ]]></fr:tex>

  We use the notation <fr:tex
display="inline"><![CDATA[\langle  f , g \rangle  := \lambda  x . (f\ x , g\ x)]]></fr:tex>, with some implicit use of currying and uncurrying where this shorthand is utilised.
  
  <fr:tex
display="inline"><![CDATA[u]]></fr:tex> is defined as <fr:tex
display="inline"><![CDATA[\langle  u_1 , u_2 \rangle ]]></fr:tex> and <fr:tex
display="inline"><![CDATA[v]]></fr:tex> is defined as <fr:tex
display="inline"><![CDATA[\langle  v_1 , v_2 \rangle ]]></fr:tex>.</fr:p><fr:p>Monad container distributive laws allow you to define a notion of <fr:link
type="local"
href="lsd-0031.xml"
addr="lsd-0031"
title="Monad container composition">composition for monad containers</fr:link>. They are in bijection with <fr:link
type="local"
href="lsd-0034.xml"
addr="lsd-0034"
title="Compatible composition of monad containers">compatible compositions of monad containers</fr:link>.</fr:p></fr:mainmatter><fr:backmatter /></fr:tree></fr:mainmatter><fr:backmatter /></fr:tree></fr:backmatter></fr:tree>