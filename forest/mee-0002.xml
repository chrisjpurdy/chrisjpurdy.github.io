<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="default.xsl"?>
<fr:tree
toc="true"
numbered="true"
show-heading="true"
show-metadata="true"
expanded="true"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>625</fr:anchor><fr:addr
type="user">mee-0002</fr:addr><fr:route>mee-0002.xml</fr:route><fr:title
text="Meeting notes: Stef 11/12/24">Meeting notes: Stef 11/12/24</fr:title><fr:date><fr:year>2024</fr:year><fr:month>12</fr:month><fr:day>11</fr:day></fr:date><fr:authors><fr:author><fr:link
type="local"
href="chrisjpurdy.xml"
addr="chrisjpurdy"
title="Chris Purdy">Chris Purdy</fr:link></fr:author><fr:author><fr:link
type="local"
href="stefaniadamato.xml"
addr="stefaniadamato"
title="Stefania Damato">Stefania Damato</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:p>Today we discussed the reading that we did over the last week. We singled out the fully extended Boom heirarchy (Table 4 in Zwart and Marsdens paper "Don't try this at home") as a good source of potential monad combinations to check for distributive laws between. Stef mentioned that Andras Kovacs' PhD thesis talks about the link between "Generalized algebraic theories" and QIITs.</fr:p><fr:p>To make use of the Boom heirarchy, we are going to put together an Overleaf document describing the algebraic theories for each monad in it, and then check for each whether they can be represented as a monad container.</fr:p><fr:p>Actionables:
  <fr:ul><fr:li>Look into developing no-go theorems by restricting view to constant functions - developing distributive laws for lmf-containers might help in this direction. If we adopt this restriction, we can also consider commutative monad containers.</fr:li>
    <fr:li>At least skim p.83 of Andras' thesis.</fr:li>
    <fr:li>Start writing up ideas on algebraic theories/monad containers corresponding to monads in the Boom heirarchy.</fr:li></fr:ul></fr:p></fr:mainmatter><fr:backmatter /></fr:tree>