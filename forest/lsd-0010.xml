<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="default.xsl"?>
<fr:tree
toc="true"
numbered="true"
show-heading="true"
show-metadata="true"
expanded="true"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>321</fr:anchor><fr:addr
type="user">lsd-0010</fr:addr><fr:route>lsd-0010.xml</fr:route><fr:title
text="Monad container zoo">Monad container zoo</fr:title><fr:date><fr:year>2024</fr:year><fr:month>12</fr:month><fr:day>2</fr:day></fr:date><fr:authors><fr:author><fr:link
type="local"
href="chrisjpurdy.xml"
addr="chrisjpurdy"
title="Chris Purdy">Chris Purdy</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:p>Here's a compilation of <fr:link
type="local"
href="lsd-0002.xml"
addr="lsd-0002"
title="Monad container">monad container</fr:link> examples for reference.</fr:p><fr:p>Properties/classes:
  <fr:ul><fr:li><fr:link
type="local"
href="lsd-0009.xml"
addr="lsd-0009"
title="Cartesian monad container">Cartesian</fr:link></fr:li>
    <fr:li><fr:link
type="local"
href="lsd-0005.xml"
addr="lsd-0005"
title="Idempotent monad containers are almost trivial">Idempotent</fr:link></fr:li>
    <fr:li><fr:link
type="local"
href="lsd-0003.xml"
addr="lsd-0003"
title="Commutative monad containers">Commutative</fr:link></fr:li>
    <fr:li><fr:link
type="local"
href="lsd-0004.xml"
addr="lsd-0004"
title="All affine monad containers are representable">Affine</fr:link></fr:li></fr:ul></fr:p><fr:p>"Specific" monad containers:
  <fr:ul><fr:li><fr:link
type="local"
href="lsd-0007.xml"
addr="lsd-0007"
title="There is only one representable monad container">Representable</fr:link></fr:li>
    <fr:li><fr:link
type="local"
href="lsd-0011.xml"
addr="lsd-0011"
title="Maybe monad container">Maybe</fr:link></fr:li>
    <fr:li><fr:link
type="local"
href="lsd-0015.xml"
addr="lsd-0015"
title="Writer monad container">Writer</fr:link></fr:li>
    <fr:li><fr:link
type="local"
href="lsd-0016.xml"
addr="lsd-0016"
title="Coproduct monad container">Coproduct</fr:link></fr:li>
    <fr:li><fr:link
type="local"
href="lsd-0014.xml"
addr="lsd-0014"
title="List monad container">List</fr:link></fr:li>
    <fr:li><fr:link
type="local"
href="lsd-0012.xml"
addr="lsd-0012"
title="State monad container">State</fr:link></fr:li>
    <fr:li><fr:link
type="local"
href="lsd-0013.xml"
addr="lsd-0013"
title="Reverse State monad container">Reverse State</fr:link> - just a curiosity, only definable in a theory with unrestricted fixed points</fr:li>
    <fr:li><html:mark
xmlns:html="http://www.w3.org/1999/xhtml">TODO: Update</html:mark></fr:li>
    <fr:li><html:mark
xmlns:html="http://www.w3.org/1999/xhtml">TODO: Free</html:mark></fr:li></fr:ul></fr:p></fr:mainmatter><fr:backmatter><fr:tree
toc="false"
numbered="false"
show-heading="true"
show-metadata="false"
expanded="true"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:title
text="Context">Context</fr:title><fr:authors /></fr:frontmatter><fr:mainmatter><fr:tree
toc="true"
numbered="false"
show-heading="true"
show-metadata="true"
expanded="false"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>323</fr:anchor><fr:addr
type="user">lsd-0001</fr:addr><fr:route>lsd-0001.xml</fr:route><fr:title
text="Distributive laws of monad containers">Distributive laws of monad containers</fr:title><fr:date><fr:year>2024</fr:year><fr:month>11</fr:month><fr:day>13</fr:day></fr:date><fr:authors><fr:author><fr:link
type="local"
href="chrisjpurdy.xml"
addr="chrisjpurdy"
title="Chris Purdy">Chris Purdy</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:p>Joint work with <fr:link
type="local"
href="stefaniadamato.xml"
addr="stefaniadamato"
title="Stefania Damato">Stefania Damato</fr:link> on characterising <fr:link
type="local"
href="lsd-0008.xml"
addr="lsd-0008"
title="Monad container distributive law">distributive laws between monad containers</fr:link>. <fr:link
type="local"
href="lsd-0002.xml"
addr="lsd-0002"
title="Monad container">Monad containers</fr:link> were originally characterised by <fr:link
type="local"
href="tarmouustalu.xml"
addr="tarmouustalu"
title="Tarmo Uustalu">Tarmo Uustalu</fr:link> - these are containers with extra structure such that their interpretation as Set functors are monads.</fr:p><fr:p>This characterisation is useful for enumerating possible distributive laws between two monad containers, which may help in developing no-go theorems for distributive laws between a larger class of monads.</fr:p><fr:tree
toc="true"
numbered="true"
show-heading="true"
show-metadata="false"
expanded="true"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>317</fr:anchor><fr:addr
type="user">lsd-0010</fr:addr><fr:route>lsd-0010.xml</fr:route><fr:title
text="Monad container zoo">Monad container zoo</fr:title><fr:date><fr:year>2024</fr:year><fr:month>12</fr:month><fr:day>2</fr:day></fr:date><fr:authors><fr:author><fr:link
type="local"
href="chrisjpurdy.xml"
addr="chrisjpurdy"
title="Chris Purdy">Chris Purdy</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:p>Here's a compilation of <fr:link
type="local"
href="lsd-0002.xml"
addr="lsd-0002"
title="Monad container">monad container</fr:link> examples for reference.</fr:p><fr:p>Properties/classes:
  <fr:ul><fr:li><fr:link
type="local"
href="lsd-0009.xml"
addr="lsd-0009"
title="Cartesian monad container">Cartesian</fr:link></fr:li>
    <fr:li><fr:link
type="local"
href="lsd-0005.xml"
addr="lsd-0005"
title="Idempotent monad containers are almost trivial">Idempotent</fr:link></fr:li>
    <fr:li><fr:link
type="local"
href="lsd-0003.xml"
addr="lsd-0003"
title="Commutative monad containers">Commutative</fr:link></fr:li>
    <fr:li><fr:link
type="local"
href="lsd-0004.xml"
addr="lsd-0004"
title="All affine monad containers are representable">Affine</fr:link></fr:li></fr:ul></fr:p><fr:p>"Specific" monad containers:
  <fr:ul><fr:li><fr:link
type="local"
href="lsd-0007.xml"
addr="lsd-0007"
title="There is only one representable monad container">Representable</fr:link></fr:li>
    <fr:li><fr:link
type="local"
href="lsd-0011.xml"
addr="lsd-0011"
title="Maybe monad container">Maybe</fr:link></fr:li>
    <fr:li><fr:link
type="local"
href="lsd-0015.xml"
addr="lsd-0015"
title="Writer monad container">Writer</fr:link></fr:li>
    <fr:li><fr:link
type="local"
href="lsd-0016.xml"
addr="lsd-0016"
title="Coproduct monad container">Coproduct</fr:link></fr:li>
    <fr:li><fr:link
type="local"
href="lsd-0014.xml"
addr="lsd-0014"
title="List monad container">List</fr:link></fr:li>
    <fr:li><fr:link
type="local"
href="lsd-0012.xml"
addr="lsd-0012"
title="State monad container">State</fr:link></fr:li>
    <fr:li><fr:link
type="local"
href="lsd-0013.xml"
addr="lsd-0013"
title="Reverse State monad container">Reverse State</fr:link> - just a curiosity, only definable in a theory with unrestricted fixed points</fr:li>
    <fr:li><html:mark
xmlns:html="http://www.w3.org/1999/xhtml">TODO: Update</html:mark></fr:li>
    <fr:li><html:mark
xmlns:html="http://www.w3.org/1999/xhtml">TODO: Free</html:mark></fr:li></fr:ul></fr:p></fr:mainmatter><fr:backmatter /></fr:tree></fr:mainmatter><fr:backmatter /></fr:tree></fr:mainmatter><fr:backmatter /></fr:tree><fr:tree
toc="false"
numbered="false"
show-heading="true"
show-metadata="false"
expanded="true"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:title
text="Related">Related</fr:title><fr:authors /></fr:frontmatter><fr:mainmatter><fr:tree
toc="true"
numbered="false"
show-heading="true"
show-metadata="true"
expanded="false"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>325</fr:anchor><fr:addr
type="user">lsd-0016</fr:addr><fr:route>lsd-0016.xml</fr:route><fr:title
text="Coproduct monad container">Coproduct monad container</fr:title><fr:taxon>Definition</fr:taxon><fr:date><fr:year>2024</fr:year><fr:month>12</fr:month><fr:day>4</fr:day></fr:date><fr:authors><fr:author><fr:link
type="local"
href="chrisjpurdy.xml"
addr="chrisjpurdy"
title="Chris Purdy">Chris Purdy</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:p>The Coproduct monad for a set <fr:tex
display="inline"><![CDATA[E]]></fr:tex> is given by the data <fr:tex
display="inline"><![CDATA[1 + E \triangleright  T]]></fr:tex> where
  <fr:tex
display="inline"><![CDATA[T\ (\text {inl}\ *) := 1]]></fr:tex>, <fr:tex
display="inline"><![CDATA[T\ (\text {inr}\ \_) := 0]]></fr:tex> and:
  <fr:tex
display="block"><![CDATA[     \begin {align*}       \iota  &:= \text {inl}\ *\\       \sigma \ (\text {inl}\ *)\ f &:= f\ *\\       \sigma \ (\text {inr}\ e)\ f &:= \text {inr}\ e\\       \text {pr}\ * &:= (* , *)     \end {align*}   ]]></fr:tex>
  This is the unique monad container structure that you can give the container <fr:tex
display="inline"><![CDATA[1 + E \triangleright  T]]></fr:tex> <html:span
xmlns:html="http://www.w3.org/1999/xhtml"
class="link-reference"><fr:link
type="local"
href="uustalu2017.xml"
addr="uustalu2017"
title="Container Combinatorics: Monads and Lax Monoidal Functors">[uustalu2017]</fr:link></html:span>. This also happens to be a cartesian monad container. <fr:tex
display="inline"><![CDATA[\text {pr}]]></fr:tex> is well-defined up to function extensionality by induction on its implicit arguments.</fr:p></fr:mainmatter><fr:backmatter /></fr:tree><fr:tree
toc="true"
numbered="false"
show-heading="true"
show-metadata="true"
expanded="false"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>327</fr:anchor><fr:addr
type="user">lsd-0014</fr:addr><fr:route>lsd-0014.xml</fr:route><fr:title
text="List monad container">List monad container</fr:title><fr:taxon>Definition</fr:taxon><fr:date><fr:year>2024</fr:year><fr:month>12</fr:month><fr:day>4</fr:day></fr:date><fr:authors><fr:author><fr:link
type="local"
href="chrisjpurdy.xml"
addr="chrisjpurdy"
title="Chris Purdy">Chris Purdy</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:p>The List monad container is given by the data <fr:tex
display="inline"><![CDATA[\mathbb {N} \triangleright  \text {Fin}]]></fr:tex> and:
  <fr:tex
display="block"><![CDATA[     \begin {align*}       \iota  &:= 1\\       \sigma \ n\ f &:= \sum _{i = 0}^n f\ i\\        \text {pr}_1\ \{n\}\ \{f\}\ m &:= \text {greatest } i \in  \lbrack  0 .. n \rparen  \text { where } \sum _{j = 0}^i f\ j \leq  m \\       \text {pr}_2\ \{n\}\ \{f\}\ m &:= m - (\sum _{j = 0}^{\text {pr}_1\ \{n\}\ \{f\}\ m} f\ j)     \end {align*}   ]]></fr:tex></fr:p></fr:mainmatter><fr:backmatter /></fr:tree><fr:tree
toc="true"
numbered="false"
show-heading="true"
show-metadata="true"
expanded="false"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>329</fr:anchor><fr:addr
type="user">lsd-0011</fr:addr><fr:route>lsd-0011.xml</fr:route><fr:title
text="Maybe monad container">Maybe monad container</fr:title><fr:taxon>Definition</fr:taxon><fr:date><fr:year>2024</fr:year><fr:month>12</fr:month><fr:day>4</fr:day></fr:date><fr:authors><fr:author><fr:link
type="local"
href="chrisjpurdy.xml"
addr="chrisjpurdy"
title="Chris Purdy">Chris Purdy</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:p>The Maybe monad can be represented as the monad container <fr:tex
display="inline"><![CDATA[2 \triangleright  T]]></fr:tex> where
  <fr:tex
display="inline"><![CDATA[T\ \text {true} := 1]]></fr:tex>, <fr:tex
display="inline"><![CDATA[T\ \text {false} := 0]]></fr:tex> and:
  <fr:tex
display="block"><![CDATA[     \begin {align*}       \iota  &:= \text {true}\\       \sigma \ \text {true}\ f &:= f\ *\\       \sigma \ \text {false}\ f &:= \text {false}\\       \text {pr}\ * &:= (* , *)     \end {align*}   ]]></fr:tex>
  This is a special case of the <fr:link
type="local"
href="lsd-0016.xml"
addr="lsd-0016"
title="Coproduct monad container">Coproduct monad container</fr:link>.</fr:p></fr:mainmatter><fr:backmatter /></fr:tree><fr:tree
toc="true"
numbered="false"
show-heading="true"
show-metadata="true"
expanded="false"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>331</fr:anchor><fr:addr
type="user">lsd-0013</fr:addr><fr:route>lsd-0013.xml</fr:route><fr:title
text="Reverse State monad container">Reverse State monad container</fr:title><fr:taxon>Definition</fr:taxon><fr:date><fr:year>2024</fr:year><fr:month>12</fr:month><fr:day>4</fr:day></fr:date><fr:authors><fr:author><fr:link
type="local"
href="chrisjpurdy.xml"
addr="chrisjpurdy"
title="Chris Purdy">Chris Purdy</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:p>The Reverse State monad for some set of states <fr:tex
display="inline"><![CDATA[S]]></fr:tex> can be represented by the monad container <fr:tex
display="inline"><![CDATA[S \to  S \triangleright  \lambda  \_ . S]]></fr:tex> with the data:
  <fr:tex
display="block"><![CDATA[     \begin {align*}       \iota  &:= \lambda  x . x\\       \sigma \ f\ g &:= \lambda  s . f\ (\pi _2\ (g^\circlearrowright \ s))\\       \text {pr}\ \{f\}\ \{g\}\ s &:= (s , \pi _1\ (g^\circlearrowright \ s))     \end {align*}   ]]></fr:tex>
  Where we use the notation:
  <fr:tex
display="block"><![CDATA[     \begin {align*}       -^\circlearrowright  &: (S \to  S \to  S) \to  S \to  S\\       f^\circlearrowright \ s &:= \text {fix}\ (f' , s'') . (f\ s'', f'\ s)     \end {align*}   ]]></fr:tex>
  This is only definable in a theory with unrestricted fixed points; <fr:tex
display="inline"><![CDATA[f^\circlearrowright ]]></fr:tex> may be undefined.<html:br
xmlns:html="http://www.w3.org/1999/xhtml" />
  <html:mark
xmlns:html="http://www.w3.org/1999/xhtml">TODO: Double check the definition of <fr:tex
display="inline"><![CDATA[\text {pr}]]></fr:tex> (in particular the second projection) and prove the laws - the unit laws hold at least, and associativity looks plausible</html:mark></fr:p><fr:p>It might be possible to change the type of the shapes to some <fr:tex
display="inline"><![CDATA[M]]></fr:tex>-type to allow for this monad container to be definable in MLTT for example.</fr:p><fr:p>A random unorganised thought: since there seems to be some connection between the <fr:link
type="local"
href="lsd-0012.xml"
addr="lsd-0012"
title="State monad container">State monad container</fr:link> and the <fr:tex
display="inline"><![CDATA[S]]></fr:tex>(<fr:tex
display="inline"><![CDATA[K]]></fr:tex>?)<fr:tex
display="inline"><![CDATA[I]]></fr:tex> combinator calculus, maybe <fr:tex
display="inline"><![CDATA[\sigma ]]></fr:tex> here can act as different interpretation of the <fr:tex
display="inline"><![CDATA[S]]></fr:tex> combinator?</fr:p></fr:mainmatter><fr:backmatter /></fr:tree><fr:tree
toc="true"
numbered="false"
show-heading="true"
show-metadata="true"
expanded="false"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>333</fr:anchor><fr:addr
type="user">lsd-0012</fr:addr><fr:route>lsd-0012.xml</fr:route><fr:title
text="State monad container">State monad container</fr:title><fr:taxon>Definition</fr:taxon><fr:date><fr:year>2024</fr:year><fr:month>12</fr:month><fr:day>4</fr:day></fr:date><fr:authors><fr:author><fr:link
type="local"
href="chrisjpurdy.xml"
addr="chrisjpurdy"
title="Chris Purdy">Chris Purdy</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:p>The State functor for some set of states <fr:tex
display="inline"><![CDATA[S]]></fr:tex> can be represented by the container <fr:tex
display="inline"><![CDATA[S \to  S \triangleright  \lambda  \_ . S]]></fr:tex>, which can be extended to a monad container with the data:
  <fr:tex
display="block"><![CDATA[     \begin {align*}       \iota  &:= \lambda  x . x\\       \sigma \ f\ g &:= \lambda  s . g\ s\ (f\ s)\\       \text {pr}\ \{f\}\ \{g\}\ s &:= (s , f\ s)     \end {align*}   ]]></fr:tex>
  It is not cartesian for general <fr:tex
display="inline"><![CDATA[S]]></fr:tex>.</fr:p><fr:p>Interestingly it seems to consist of the combinators <fr:tex
display="inline"><![CDATA[S]]></fr:tex> (a version with flipped arguments) and <fr:tex
display="inline"><![CDATA[I]]></fr:tex>. Is there some deeper connection to combinatory logic here?</fr:p></fr:mainmatter><fr:backmatter /></fr:tree><fr:tree
toc="true"
numbered="false"
show-heading="true"
show-metadata="true"
expanded="false"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>335</fr:anchor><fr:addr
type="user">lsd-0015</fr:addr><fr:route>lsd-0015.xml</fr:route><fr:title
text="Writer monad container">Writer monad container</fr:title><fr:taxon>Definition</fr:taxon><fr:date><fr:year>2024</fr:year><fr:month>12</fr:month><fr:day>4</fr:day></fr:date><fr:authors><fr:author><fr:link
type="local"
href="chrisjpurdy.xml"
addr="chrisjpurdy"
title="Chris Purdy">Chris Purdy</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:p>The Writer monad container for a monoid <fr:tex
display="inline"><![CDATA[(A, \otimes , e)]]></fr:tex> is given by the data <fr:tex
display="inline"><![CDATA[A \triangleright  \lambda  \_ . 1]]></fr:tex> and:
  <fr:tex
display="block"><![CDATA[     \begin {align*}       \iota  &:= e\\       \sigma \ a\ b\ &:= a \otimes  (b\ *)\\       \text {pr}\ * &:= (*, *)     \end {align*}   ]]></fr:tex></fr:p></fr:mainmatter><fr:backmatter /></fr:tree><fr:tree
toc="true"
numbered="false"
show-heading="true"
show-metadata="true"
expanded="false"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>337</fr:anchor><fr:addr
type="user">lsd-0009</fr:addr><fr:route>lsd-0009.xml</fr:route><fr:title
text="Cartesian monad container">Cartesian monad container</fr:title><fr:taxon>Definition</fr:taxon><fr:date><fr:year>2024</fr:year><fr:month>12</fr:month><fr:day>2</fr:day></fr:date><fr:authors><fr:author><fr:link
type="local"
href="chrisjpurdy.xml"
addr="chrisjpurdy"
title="Chris Purdy">Chris Purdy</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:p>Let <fr:tex
display="inline"><![CDATA[(S \triangleright  P, \iota , \sigma , \text {pr})]]></fr:tex> be a <fr:link
type="local"
href="lsd-0002.xml"
addr="lsd-0002"
title="Monad container">monad containers</fr:link>. It is cartesian
  iff <fr:tex
display="inline"><![CDATA[P\ \iota  \cong  1]]></fr:tex> and <fr:tex
display="inline"><![CDATA[\text {pr}]]></fr:tex> is an isomorphism. This is equivalent to saying that the
  extension of the monad container is a cartesian monad (container functors always preserve pullbacks).</fr:p><fr:p>These can also be seen as proper <fr:tex
display="inline"><![CDATA[(1,\Sigma )]]></fr:tex> type universes (Tarski-style).</fr:p></fr:mainmatter><fr:backmatter /></fr:tree><fr:tree
toc="true"
numbered="false"
show-heading="true"
show-metadata="true"
expanded="false"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>339</fr:anchor><fr:addr
type="user">lsd-0005</fr:addr><fr:route>lsd-0005.xml</fr:route><fr:title
text="Idempotent monad containers are almost trivial">Idempotent monad containers are almost trivial</fr:title><fr:taxon>Lemma</fr:taxon><fr:date><fr:year>2024</fr:year><fr:month>11</fr:month><fr:day>29</fr:day></fr:date><fr:authors><fr:author><fr:link
type="local"
href="chrisjpurdy.xml"
addr="chrisjpurdy"
title="Chris Purdy">Chris Purdy</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:p>A monad <fr:tex
display="inline"><![CDATA[T]]></fr:tex> is idempotent when <fr:tex
display="inline"><![CDATA[T \eta  = \eta  T]]></fr:tex>, which for <fr:link
type="local"
href="lsd-0002.xml"
addr="lsd-0002"
title="Monad container">monad containers</fr:link> immediately gives us <fr:tex
display="inline"><![CDATA[\iota  = s]]></fr:tex> for all <fr:tex
display="inline"><![CDATA[s : S]]></fr:tex>, and hence <fr:tex
display="inline"><![CDATA[S]]></fr:tex> is contractible.</fr:p><fr:p>Another equivalent condition for a monad <fr:tex
display="inline"><![CDATA[T]]></fr:tex> to be idempotent is that <fr:tex
display="inline"><![CDATA[\text {Id}]]></fr:tex> is a distributive law <fr:tex
display="inline"><![CDATA[TT \Rightarrow  TT]]></fr:tex>. For <fr:link
type="local"
href="lsd-0008.xml"
addr="lsd-0008"
title="Monad container distributive law">monad container distributive laws</fr:link> this implies futher that all positions are equal, so the set <fr:tex
display="inline"><![CDATA[P\ \iota ]]></fr:tex> is subsingleton.</fr:p></fr:mainmatter><fr:backmatter /></fr:tree><fr:tree
toc="true"
numbered="false"
show-heading="true"
show-metadata="true"
expanded="false"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>341</fr:anchor><fr:addr
type="user">lsd-0007</fr:addr><fr:route>lsd-0007.xml</fr:route><fr:title
text="There is only one representable monad container">There is only one representable monad container</fr:title><fr:taxon>Lemma</fr:taxon><fr:date><fr:year>2024</fr:year><fr:month>11</fr:month><fr:day>29</fr:day></fr:date><fr:authors><fr:author><fr:link
type="local"
href="chrisjpurdy.xml"
addr="chrisjpurdy"
title="Chris Purdy">Chris Purdy</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:p>Given the container <fr:tex
display="inline"><![CDATA[1 \triangleright  \lambda  \_ . A]]></fr:tex>, we look at the required data for a <fr:link
type="local"
href="lsd-0002.xml"
addr="lsd-0002"
title="Monad container">monad container</fr:link>. <fr:tex
display="inline"><![CDATA[\iota ]]></fr:tex> and <fr:tex
display="inline"><![CDATA[\sigma \ a\ b]]></fr:tex> are trival (both are elements of <fr:tex
display="inline"><![CDATA[1]]></fr:tex>). The equations for <fr:tex
display="inline"><![CDATA[\text {pr}]]></fr:tex> force it to be defined as the diagonal map:
  <fr:tex
display="block"><![CDATA[     \text {pr}\ a := (a , a)   ]]></fr:tex></fr:p></fr:mainmatter><fr:backmatter /></fr:tree><fr:tree
toc="true"
numbered="false"
show-heading="true"
show-metadata="true"
expanded="false"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>343</fr:anchor><fr:addr
type="user">lsd-0004</fr:addr><fr:route>lsd-0004.xml</fr:route><fr:title
text="All affine monad containers are representable">All affine monad containers are representable</fr:title><fr:taxon>Lemma</fr:taxon><fr:date><fr:year>2024</fr:year><fr:month>11</fr:month><fr:day>28</fr:day></fr:date><fr:authors><fr:author><fr:link
type="local"
href="chrisjpurdy.xml"
addr="chrisjpurdy"
title="Chris Purdy">Chris Purdy</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:p>Let <fr:tex
display="inline"><![CDATA[(S \triangleright  P, \iota , \sigma , \text {pr})]]></fr:tex> be a <fr:link
type="local"
href="lsd-0003.xml"
addr="lsd-0003"
title="Commutative monad containers">commutative monad container</fr:link>. By taking the categorical definition of affine monads and specialising it to monad container extensions, we get for all <fr:tex
display="inline"><![CDATA[a, b : S]]></fr:tex> the equation:
  <fr:tex
display="block"><![CDATA[     \sigma \ a\ (\lambda  \_ . b) = a   ]]></fr:tex>
  Since we have a point <fr:tex
display="inline"><![CDATA[\iota  : S]]></fr:tex>, we can conclude that <fr:tex
display="inline"><![CDATA[S]]></fr:tex> is contractible. Hence we have that <fr:tex
display="inline"><![CDATA[S \triangleright  P]]></fr:tex> is <fr:tex
display="inline"><![CDATA[1 \triangleright  \lambda  \_ . P\ \iota ]]></fr:tex>.</fr:p></fr:mainmatter><fr:backmatter /></fr:tree><fr:tree
toc="true"
numbered="false"
show-heading="true"
show-metadata="true"
expanded="false"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>345</fr:anchor><fr:addr
type="user">lsd-0003</fr:addr><fr:route>lsd-0003.xml</fr:route><fr:title
text="Commutative monad containers">Commutative monad containers</fr:title><fr:taxon>Definition</fr:taxon><fr:date><fr:year>2024</fr:year><fr:month>11</fr:month><fr:day>28</fr:day></fr:date><fr:authors><fr:author><fr:link
type="local"
href="chrisjpurdy.xml"
addr="chrisjpurdy"
title="Chris Purdy">Chris Purdy</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:p>Let <fr:tex
display="inline"><![CDATA[(S \triangleright  P, \iota , \sigma , \text {pr})]]></fr:tex> be a <fr:link
type="local"
href="lsd-0002.xml"
addr="lsd-0002"
title="Monad container">monad container</fr:link>. We call the monad container
  commutative when the following laws hold:
  <fr:tex
display="block"><![CDATA[     \begin {align*}       \sigma \ a\ (\lambda  \_ . b) &= \sigma \ b\ (\lambda  \_ . a)\\       \text {pr}_1\ p &= \text {pr}_2\ p\\       \text {pr}_2\ p &= \text {pr}_1\ p     \end {align*}   ]]></fr:tex>
  The laws for <fr:tex
display="inline"><![CDATA[\text {pr}]]></fr:tex> hold given the first law. Commutative monad containers interpret exactly
  the commutative monads (w.r.t. cartesian product) for container functors.</fr:p></fr:mainmatter><fr:backmatter /></fr:tree><fr:tree
toc="true"
numbered="false"
show-heading="true"
show-metadata="true"
expanded="false"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>347</fr:anchor><fr:addr
type="user">lsd-0002</fr:addr><fr:route>lsd-0002.xml</fr:route><fr:title
text="Monad container">Monad container</fr:title><fr:taxon>Definition</fr:taxon><fr:date><fr:year>2024</fr:year><fr:month>11</fr:month><fr:day>28</fr:day></fr:date><fr:authors><fr:author><fr:link
type="local"
href="chrisjpurdy.xml"
addr="chrisjpurdy"
title="Chris Purdy">Chris Purdy</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:p>Let <fr:tex
display="inline"><![CDATA[S \triangleright  P]]></fr:tex> be a container. A monad container (or mnd-container) <html:span
xmlns:html="http://www.w3.org/1999/xhtml"
class="link-reference"><fr:link
type="local"
href="uustalu2017.xml"
addr="uustalu2017"
title="Container Combinatorics: Monads and Lax Monoidal Functors">[uustalu2017]</fr:link></html:span> on <fr:tex
display="inline"><![CDATA[S \triangleright  P]]></fr:tex> is
  given by the following data:
  <fr:tex
display="block"><![CDATA[     \begin {align*}       \iota  &: S\\       \sigma  &: \prod _{s : S} (P\ s \to  S) \to  S\\       \text {pr} &: \prod _{\{s : S\}} \prod _{\{f : P\ s \to  S\}} P\ (\sigma \ s\ f) \to  \sum _{p : P\ s} P\ (f\ p)     \end {align*}   ]]></fr:tex>
  For which the following laws hold:
  <fr:tex
display="block"><![CDATA[     \begin {align*}       \sigma \ \iota \ (\lambda  \_ . a ) &= a\\       \sigma \ a\ (\lambda  \_ . \iota  ) &= a\\       \sigma \ (\sigma \ a\ f)\ (\lambda  p . g\ (\text {pr}_1\ p)\ (\text {pr}_2\ p)) &= \sigma \ a\ (\lambda  p . \sigma \ (f\ p)\ (g\ p))\\       \text {pr}_1\ (\text {pr}_1\ p) &= \text {pr}_1\ p\\       \text {pr}_1\ (\text {pr}_2\ p) &= \text {pr}_2\ (\text {pr}_1\ p)\\       \text {pr}_2\ p &= \text {pr}_2\ (\text {pr}_2\ p)     \end {align*}   ]]></fr:tex>
  We abbreviate <fr:tex
display="inline"><![CDATA[\pi _1 \circ  \text {pr}]]></fr:tex> as <fr:tex
display="inline"><![CDATA[\text {pr}_1]]></fr:tex> and <fr:tex
display="inline"><![CDATA[\pi _2 \circ  \text {pr}]]></fr:tex> as <fr:tex
display="inline"><![CDATA[\text {pr}_2]]></fr:tex>. The last three laws
  hold up to the "associativity" law for <fr:tex
display="inline"><![CDATA[\sigma ]]></fr:tex>.</fr:p></fr:mainmatter><fr:backmatter /></fr:tree></fr:mainmatter><fr:backmatter /></fr:tree></fr:backmatter></fr:tree>