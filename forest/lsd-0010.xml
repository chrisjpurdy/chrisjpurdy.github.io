<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="default.xsl"?>
<fr:tree
toc="true"
numbered="true"
show-heading="true"
show-metadata="true"
expanded="true"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>662</fr:anchor><fr:addr
type="user">lsd-0010</fr:addr><fr:route>lsd-0010.xml</fr:route><fr:title
text="Monad container zoo">Monad container zoo</fr:title><fr:date><fr:year>2024</fr:year><fr:month>12</fr:month><fr:day>2</fr:day></fr:date><fr:authors><fr:author><fr:link
type="local"
href="chrisjpurdy.xml"
addr="chrisjpurdy"
title="Chris Purdy">Chris Purdy</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:p>Here's a compilation of <fr:link
type="local"
href="lsd-0002.xml"
addr="lsd-0002"
title="Monad container">monad container</fr:link> and <fr:link
type="local"
href="lsd-0008.xml"
addr="lsd-0008"
title="Monad container distributive law">monad container distributive law</fr:link> examples for reference.</fr:p><fr:p>Properties/classes of monad containers:
  <fr:ul><fr:li><fr:link
type="local"
href="lsd-0009.xml"
addr="lsd-0009"
title="Cartesian monad container">Cartesian</fr:link></fr:li>
    <fr:li><fr:link
type="local"
href="lsd-0021.xml"
addr="lsd-0021"
title="Finitary container">Finitary</fr:link></fr:li>
    <fr:li><fr:link
type="local"
href="lsd-0005.xml"
addr="lsd-0005"
title="Idempotent monad containers are almost trivial">Idempotent</fr:link></fr:li>
    <fr:li><fr:link
type="local"
href="lsd-0003.xml"
addr="lsd-0003"
title="Commutative monad containers">Commutative</fr:link></fr:li>
    <fr:li><fr:link
type="local"
href="lsd-0004.xml"
addr="lsd-0004"
title="All affine monad containers are representable">Affine</fr:link></fr:li></fr:ul></fr:p><fr:p>"Specific" monad containers:
  <fr:ul><fr:li><fr:link
type="local"
href="lsd-0007.xml"
addr="lsd-0007"
title="There is only one representable monad container">Representable</fr:link></fr:li>
    <fr:li><fr:link
type="local"
href="lsd-0011.xml"
addr="lsd-0011"
title="Maybe monad container">Maybe</fr:link></fr:li>
    <fr:li><fr:link
type="local"
href="lsd-0015.xml"
addr="lsd-0015"
title="Writer monad container">Writer</fr:link></fr:li>
    <fr:li><fr:link
type="local"
href="lsd-0016.xml"
addr="lsd-0016"
title="Coproduct monad container">Coproduct</fr:link></fr:li>
    <fr:li><fr:link
type="local"
href="lsd-0014.xml"
addr="lsd-0014"
title="List monad container">List</fr:link></fr:li>
    <fr:li><fr:link
type="local"
href="lsd-0012.xml"
addr="lsd-0012"
title="State monad container">State</fr:link></fr:li>
    <fr:li><fr:link
type="local"
href="lsd-0013.xml"
addr="lsd-0013"
title="Reverse State monad container">Reverse State</fr:link> - just a curiosity, only definable in a theory with unrestricted fixed points</fr:li>
    <fr:li><html:mark
xmlns:html="http://www.w3.org/1999/xhtml">TODO: Update</html:mark></fr:li>
    <fr:li><html:mark
xmlns:html="http://www.w3.org/1999/xhtml">TODO: Free</html:mark></fr:li></fr:ul></fr:p><fr:p>Distributive laws:
  <fr:ul><fr:li><fr:link
type="local"
href="lsd-0017.xml"
addr="lsd-0017"
title="Representable monad container distribution on the right">Any monad container over a representable one</fr:link></fr:li>
    <fr:li><fr:link
type="local"
href="lsd-0018.xml"
addr="lsd-0018"
title="Coproduct monad container distribution on the left">Coproduct over any monad container</fr:link></fr:li>
    <fr:li><fr:link
type="local"
href="lsd-0026.xml"
addr="lsd-0026"
title="Monad container distributive law between writers">Writer over writer</fr:link></fr:li></fr:ul></fr:p></fr:mainmatter><fr:backmatter><fr:tree
toc="false"
numbered="false"
show-heading="true"
show-metadata="false"
expanded="true"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:title
text="Backlinks">Backlinks</fr:title><fr:authors /></fr:frontmatter><fr:mainmatter><fr:tree
toc="true"
numbered="false"
show-heading="true"
show-metadata="true"
expanded="false"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>664</fr:anchor><fr:addr
type="user">index</fr:addr><fr:route>index.xml</fr:route><fr:title
text="Chris Purdy">Chris Purdy</fr:title><fr:authors /><fr:meta
name="comments">true</fr:meta></fr:frontmatter><fr:mainmatter><fr:p>I am a PhD student at Royal Holloway, University of London researching programming language semantics via cyclic proof theory, type theory, and category theory.</fr:p><fr:p><fr:link
type="external"
href="https://chrisjpurdy.github.io/">Back to my Github pages</fr:link></fr:p>
  <fr:tree
toc="true"
numbered="true"
show-heading="true"
show-metadata="false"
expanded="true"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>304</fr:anchor><fr:addr
type="user">mhe-0001</fr:addr><fr:route>mhe-0001.xml</fr:route><fr:title
text="HOL^{ex}"><fr:tex
display="inline"><![CDATA[\mu ]]></fr:tex>HOL<fr:tex
display="inline"><![CDATA[^{ex}]]></fr:tex></fr:title><fr:date><fr:year>2024</fr:year><fr:month>11</fr:month><fr:day>13</fr:day></fr:date><fr:authors><fr:author><fr:link
type="local"
href="chrisjpurdy.xml"
addr="chrisjpurdy"
title="Chris Purdy">Chris Purdy</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:p><fr:link
type="local"
href="mhe-0003.xml"
addr="mhe-0003"
title="HOL^{ex} encyclopedia"><fr:tex
display="inline"><![CDATA[\mu ]]></fr:tex>HOL<fr:tex
display="inline"><![CDATA[^{ex}]]></fr:tex></fr:link> is a logic and cyclic proof system that I've been developing for part of my PhD project with my supervisor <fr:link
type="local"
href="reubensrowe.xml"
addr="reubensrowe"
title="Reuben Rowe">Reuben Rowe</fr:link>.</fr:p><fr:p>The goal is to develop a proof system for higher-order logic with fixed-point operators, that allows for induction and coinduction by adding fixed-point "unfolding" rules, and allowing proofs to be cyclic.</fr:p></fr:mainmatter><fr:backmatter /></fr:tree>
  <fr:tree
toc="true"
numbered="true"
show-heading="true"
show-metadata="false"
expanded="true"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>306</fr:anchor><fr:addr
type="user">lsd-0001</fr:addr><fr:route>lsd-0001.xml</fr:route><fr:title
text="Distributive laws of monad containers">Distributive laws of monad containers</fr:title><fr:date><fr:year>2024</fr:year><fr:month>11</fr:month><fr:day>13</fr:day></fr:date><fr:authors><fr:author><fr:link
type="local"
href="chrisjpurdy.xml"
addr="chrisjpurdy"
title="Chris Purdy">Chris Purdy</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:p>Joint work with <fr:link
type="local"
href="stefaniadamato.xml"
addr="stefaniadamato"
title="Stefania Damato">Stefania Damato</fr:link> on characterising <fr:link
type="local"
href="lsd-0008.xml"
addr="lsd-0008"
title="Monad container distributive law">distributive laws between monad containers</fr:link>. <fr:link
type="local"
href="lsd-0002.xml"
addr="lsd-0002"
title="Monad container">Monad containers</fr:link> were originally characterised by <fr:link
type="local"
href="tarmouustalu.xml"
addr="tarmouustalu"
title="Tarmo Uustalu">Tarmo Uustalu</fr:link> - these are containers with extra structure such that their <fr:link
type="local"
href="lsd-0030.xml"
addr="lsd-0030"
title="Monad container extension">interpretation</fr:link> as <fr:tex
display="inline"><![CDATA[\mathbf {Set}]]></fr:tex> functors are monads.</fr:p><fr:p>This characterisation is useful for enumerating possible distributive laws between two monad containers, which may help in developing no-go theorems for distributive laws between a larger class of monads.</fr:p><fr:p>By combining the work of Ahman and Uustalu on <fr:link
type="local"
href="lsd-0022.xml"
addr="lsd-0022"
title="Directed container distributive law">distributive laws for directed containers</fr:link> and our work, it is also easy enough to characterise mixed distributive laws.</fr:p></fr:mainmatter><fr:backmatter /></fr:tree>
<fr:tree
toc="true"
numbered="true"
show-heading="true"
show-metadata="false"
expanded="true"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>308</fr:anchor><fr:addr
type="machine">#244</fr:addr><fr:route>unstable-244.xml</fr:route><fr:title
text="Quick links">Quick links</fr:title><fr:authors /></fr:frontmatter><fr:mainmatter><fr:p><fr:ul><fr:li><fr:link
type="local"
href="lsd-0010.xml"
addr="lsd-0010"
title="Monad container zoo">Monad container zoo</fr:link></fr:li>
      <fr:li><fr:link
type="local"
href="dia-0001.xml"
addr="dia-0001"
title="Research diary">Research diary</fr:link></fr:li>
      <fr:li><fr:link
type="local"
href="mee-0000.xml"
addr="mee-0000"
title="Meeting notes">Meeting notes</fr:link></fr:li>
      <fr:li><fr:link
type="local"
href="not-0000.xml"
addr="not-0000"
title="Research notes">Research notes</fr:link></fr:li></fr:ul></fr:p></fr:mainmatter><fr:backmatter /></fr:tree><fr:tree
toc="true"
numbered="true"
show-heading="true"
show-metadata="false"
expanded="true"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>309</fr:anchor><fr:addr
type="user">abt-0001</fr:addr><fr:route>abt-0001.xml</fr:route><fr:title
text="About this website">About this website</fr:title><fr:date><fr:year>2024</fr:year><fr:month>11</fr:month><fr:day>13</fr:day></fr:date><fr:authors /></fr:frontmatter><fr:mainmatter><fr:p>This website uses the <fr:link
type="external"
href="https://sr.ht/~jonsterling/forester/">Forester</fr:link> tool developed by
  <fr:link
type="local"
href="jonmsterling.xml"
addr="jonmsterling"
title="Jon Sterling">Jon Sterling</fr:link>. See Jon's website for tutorials/information about the tool.</fr:p><fr:p>It is a fantastic way to organise notes and I've been enjoying it a lot! There is even a <fr:link
type="external"
href="https://marketplace.visualstudio.com/items?itemName=TreborHuang.vscode-forester">VSCode plugin</fr:link>.</fr:p></fr:mainmatter><fr:backmatter /></fr:tree></fr:mainmatter><fr:backmatter /></fr:tree></fr:mainmatter><fr:backmatter /></fr:tree><fr:tree
toc="false"
numbered="false"
show-heading="true"
show-metadata="false"
expanded="true"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:title
text="Related">Related</fr:title><fr:authors /></fr:frontmatter><fr:mainmatter><fr:tree
toc="true"
numbered="false"
show-heading="true"
show-metadata="true"
expanded="false"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>665</fr:anchor><fr:addr
type="user">lsd-0026</fr:addr><fr:route>lsd-0026.xml</fr:route><fr:title
text="Monad container distributive law between writers">Monad container distributive law between writers</fr:title><fr:date><fr:year>2024</fr:year><fr:month>12</fr:month><fr:day>11</fr:day></fr:date><fr:authors><fr:author><fr:link
type="local"
href="chrisjpurdy.xml"
addr="chrisjpurdy"
title="Chris Purdy">Chris Purdy</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:p>Let <fr:tex
display="inline"><![CDATA[(A \triangleright  \lambda  \_ . 1, \iota ^A, \sigma ^A, \text {pr}^A)]]></fr:tex> and <fr:tex
display="inline"><![CDATA[(B \triangleright  \lambda  \_ . 1, \iota ^B, \sigma ^B, \text {pr}^B)]]></fr:tex> be <fr:link
type="local"
href="lsd-0002.xml"
addr="lsd-0002"
title="Monad container">monad containers</fr:link>. By specialising the data and equations for a <fr:link
type="local"
href="lsd-0008.xml"
addr="lsd-0008"
title="Monad container distributive law">monad container distributive law</fr:link> to these, <fr:tex
display="inline"><![CDATA[v_1]]></fr:tex> and <fr:tex
display="inline"><![CDATA[v_2]]></fr:tex> become trivial (<fr:tex
display="inline"><![CDATA[\text {pr}^A]]></fr:tex> and <fr:tex
display="inline"><![CDATA[\text {pr}^B]]></fr:tex> are already trivial), and we are left with:
  
  <fr:tex
display="block"><![CDATA[     \begin {align*}            u_1\ \iota ^A\ (\lambda  \_ . b) &= b\\     u_1\ a\ (\lambda  \_ . \iota ^B) &= \iota ^B\\     u_1\ (\sigma ^A\ a\ (\lambda  \_ . a'))\ (\lambda  \_ . b) &= u_1\ a\ (\lambda  \_ . u_1\ a'\ (\lambda  \_ . b))\\     u_1\ a\ (\lambda  \_ . \sigma ^B\ b\ (\lambda  \_ . b')) &= \sigma ^B\ (u_1\ a\ (\lambda  \_ . b))\ (\lambda  \_ . u_1\ (u_2\ a\ (\lambda  \_ . b)\ *)\ (\lambda  \_ . b'))\\      u_2\ \iota ^A\ (\lambda  \_ . b)\ * &= \iota ^A\\     u_2\ a\ (\lambda  \_ . \iota ^B)\ * &= a\\     u_2\ (\sigma ^A\ a\ (\lambda  \_ . a'))\ (\lambda  \_ . b)\ * &= \sigma ^A\ (u_2\ a\ (\lambda  \_ . u_1\ a'\ (\lambda  \_ . b))\ *)\ (\lambda  \_ . u_2\ a'\ (\lambda  \_ . b')\ *)\\     u_2\ a\ (\lambda  \_ . \sigma ^B\ b\ (\lambda  \_ . b'))\ * &= u_2\ (u_2\ a\ (\lambda  \_ . b)\ *)\ (\lambda  \_ . b')\ *        \end {align*}   ]]></fr:tex>

  Bear in mind that, since all position sets are <fr:tex
display="inline"><![CDATA[1]]></fr:tex>, we do not lose generality by assuming constant all of the functions in the equations above. By defining:
  
  <fr:tex
display="block"><![CDATA[     \begin {align*}            \alpha \ a\ b := u_1\ a\ (\lambda  \_ . b)\\     \beta \ a\ b := u_2\ a\ (\lambda  \_ . b)\ *\\     a \otimes ^A a' := \sigma ^A\ a\ (\lambda  \_ . a')\\     b \otimes ^B b' := \sigma ^B\ b\ (\lambda  \_ . b')        \end {align*}   ]]></fr:tex>

  we can rewrite these equations as:
  
  <fr:tex
display="block"><![CDATA[     \begin {align*}            \alpha \ \iota ^A\ b &= b\\     \alpha \ a\ \iota ^B &= \iota ^B\\     \alpha \ (a \otimes ^A a')\ b &= \alpha \ a\ (\alpha \ a'\ b)\\     \alpha \ a\ (b \otimes ^B b') &= (\alpha \ a\ b) \otimes ^B (\alpha \ (\beta \ a\ b)\ b')\\      \beta \ \iota ^A\ b &= \iota ^A\\     \beta \ a\ \iota ^B &= a\\     \beta \ (a \otimes ^A a')\ b &= (\beta \ a\ (\alpha \ a'\ b)) \otimes ^A (\beta \ a'\ b')\\     \beta \ a\ (b \otimes ^B b') &= \beta \ (\beta \ a\ b)\ b'        \end {align*}   ]]></fr:tex>

  These are exactly the equations exhibiting <fr:tex
display="inline"><![CDATA[\alpha ]]></fr:tex> and <fr:tex
display="inline"><![CDATA[\beta ]]></fr:tex> as a matching pair of monoid actions between <fr:tex
display="inline"><![CDATA[(A, \otimes ^A, \iota ^A)]]></fr:tex> and <fr:tex
display="inline"><![CDATA[(B , \otimes ^B, \iota ^B)]]></fr:tex>. Therefore, monad container distributive laws of this type are in bijection with matching pairs of actions for the relevant monoids.</fr:p></fr:mainmatter><fr:backmatter /></fr:tree><fr:tree
toc="true"
numbered="false"
show-heading="true"
show-metadata="true"
expanded="false"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>667</fr:anchor><fr:addr
type="user">lsd-0018</fr:addr><fr:route>lsd-0018.xml</fr:route><fr:title
text="Coproduct monad container distribution on the left">Coproduct monad container distribution on the left</fr:title><fr:taxon>Lemma</fr:taxon><fr:date><fr:year>2024</fr:year><fr:month>12</fr:month><fr:day>10</fr:day></fr:date><fr:authors><fr:author><fr:link
type="local"
href="chrisjpurdy.xml"
addr="chrisjpurdy"
title="Chris Purdy">Chris Purdy</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:p>The coproduct monad container <fr:tex
display="inline"><![CDATA[1 + E \triangleright  T]]></fr:tex> <fr:link
type="local"
href="lsd-0008.xml"
addr="lsd-0008"
title="Monad container distributive law">distributes</fr:link> over any monad container <fr:tex
display="inline"><![CDATA[S \triangleright  P]]></fr:tex> in exactly one way.
  
 
   
   <fr:tree
toc="false"
numbered="true"
show-heading="true"
show-metadata="false"
expanded="true"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>448</fr:anchor><fr:addr
type="machine">#247</fr:addr><fr:route>unstable-247.xml</fr:route><fr:taxon>Proof</fr:taxon><fr:date><fr:year>2024</fr:year><fr:month>12</fr:month><fr:day>10</fr:day></fr:date><fr:authors><fr:author><fr:link
type="local"
href="chrisjpurdy.xml"
addr="chrisjpurdy"
title="Chris Purdy">Chris Purdy</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter>
    We have given the first 4 equations for a monad container distributive law and the isomorphisms
    <fr:tex
display="inline"><![CDATA[T\ (\text {inl}\ *) \to  S \cong  S]]></fr:tex> and <fr:tex
display="inline"><![CDATA[T\ (\text {inr}\ e) \to  S \cong  1]]></fr:tex> that:
    <fr:tex
display="block"><![CDATA[       \begin {align*}         &u\ (\text {inl}\ *)\ (\lambda  \_ . s) = (s , \lambda  \_ . \text {inl}\ *)\\          &u\ (\text {inr}\ e)\ f = u\ (\text {inr}\ e)\ (\lambda  \_ . \iota ^S) = (\iota ^S , \lambda  \_ . \text {inr}\ e)\\         &v\ \{\text {inl}\ *\}\ \{\lambda  \_ . s\}\ (p , *) = (* , p)       \end {align*}     ]]></fr:tex>
    These constraints entirely define <fr:tex
display="inline"><![CDATA[u]]></fr:tex>, and therefore <fr:tex
display="inline"><![CDATA[v]]></fr:tex> also. Since the other distributive law equalities hold, <fr:tex
display="inline"><![CDATA[u]]></fr:tex> and <fr:tex
display="inline"><![CDATA[v]]></fr:tex> specify the unique distributive law <fr:tex
display="inline"><![CDATA[(1 + E \triangleright  T) \circ  (S \triangleright  P) \Rightarrow  (S \triangleright  P) \circ  (1 + E \triangleright  T)]]></fr:tex>.
  </fr:mainmatter><fr:backmatter /></fr:tree></fr:p></fr:mainmatter><fr:backmatter /></fr:tree><fr:tree
toc="true"
numbered="false"
show-heading="true"
show-metadata="true"
expanded="false"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>669</fr:anchor><fr:addr
type="user">lsd-0021</fr:addr><fr:route>lsd-0021.xml</fr:route><fr:title
text="Finitary container">Finitary container</fr:title><fr:taxon>Definition</fr:taxon><fr:date><fr:year>2024</fr:year><fr:month>12</fr:month><fr:day>9</fr:day></fr:date><fr:authors><fr:author><fr:link
type="local"
href="chrisjpurdy.xml"
addr="chrisjpurdy"
title="Chris Purdy">Chris Purdy</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:p>A container <fr:tex
display="inline"><![CDATA[S \triangleright  P]]></fr:tex> is finitary when its extension functor is finitary (preserves filtered colimits). A monad container is finitary when the underlying container is.
  <fr:tree
toc="true"
numbered="true"
show-heading="true"
show-metadata="false"
expanded="true"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>460</fr:anchor><fr:addr
type="machine">#246</fr:addr><fr:route>unstable-246.xml</fr:route><fr:taxon>Proposition</fr:taxon><fr:date><fr:year>2024</fr:year><fr:month>12</fr:month><fr:day>9</fr:day></fr:date><fr:authors><fr:author><fr:link
type="local"
href="chrisjpurdy.xml"
addr="chrisjpurdy"
title="Chris Purdy">Chris Purdy</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:p>A container is finitary if and only if for all <fr:tex
display="inline"><![CDATA[s : S]]></fr:tex>, the set <fr:tex
display="inline"><![CDATA[P\ s]]></fr:tex> is isomorphic to some finite cardinal. 
      <html:mark
xmlns:html="http://www.w3.org/1999/xhtml">TODO: reference Kock here</html:mark></fr:p></fr:mainmatter><fr:backmatter /></fr:tree></fr:p></fr:mainmatter><fr:backmatter /></fr:tree><fr:tree
toc="true"
numbered="false"
show-heading="true"
show-metadata="true"
expanded="false"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>671</fr:anchor><fr:addr
type="user">lsd-0017</fr:addr><fr:route>lsd-0017.xml</fr:route><fr:title
text="Representable monad container distribution on the right">Representable monad container distribution on the right</fr:title><fr:taxon>Lemma</fr:taxon><fr:date><fr:year>2024</fr:year><fr:month>12</fr:month><fr:day>5</fr:day></fr:date><fr:authors><fr:author><fr:link
type="local"
href="chrisjpurdy.xml"
addr="chrisjpurdy"
title="Chris Purdy">Chris Purdy</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:p>Any monad container <fr:tex
display="inline"><![CDATA[S \triangleright  P]]></fr:tex> distributes over a representable monad container <fr:tex
display="inline"><![CDATA[1 \triangleright  \lambda  \_ . A]]></fr:tex> in exactly one way.
  
 
   
   <fr:tree
toc="false"
numbered="true"
show-heading="true"
show-metadata="false"
expanded="true"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>508</fr:anchor><fr:addr
type="machine">#248</fr:addr><fr:route>unstable-248.xml</fr:route><fr:taxon>Proof</fr:taxon><fr:date><fr:year>2024</fr:year><fr:month>12</fr:month><fr:day>5</fr:day></fr:date><fr:authors><fr:author><fr:link
type="local"
href="chrisjpurdy.xml"
addr="chrisjpurdy"
title="Chris Purdy">Chris Purdy</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter>
    By considering the data for a <fr:link
type="local"
href="lsd-0008.xml"
addr="lsd-0008"
title="Monad container distributive law">monad container distributive law</fr:link>, we get by the first four equalities, and for all <fr:tex
display="inline"><![CDATA[s : S]]></fr:tex> the isomorphism <fr:tex
display="inline"><![CDATA[P\ s \to  1 \cong  1]]></fr:tex>, that:
    <fr:tex
display="block"><![CDATA[       \begin {align*}         u\ s\ \_ &:= (* , \lambda  \_ . s)\\         v\ p\ a &:= (a , p)       \end {align*}     ]]></fr:tex>
    <fr:tex
display="inline"><![CDATA[u]]></fr:tex> and <fr:tex
display="inline"><![CDATA[v]]></fr:tex> are entirely specified by the "unit" equalities, and the rest of the equalities hold. Hence this is the unique monad distributive law of <fr:tex
display="inline"><![CDATA[S \triangleright  P]]></fr:tex> over <fr:tex
display="inline"><![CDATA[1 \triangleright  \lambda  \_ . A]]></fr:tex>.
  </fr:mainmatter><fr:backmatter /></fr:tree></fr:p></fr:mainmatter><fr:backmatter /></fr:tree><fr:tree
toc="true"
numbered="false"
show-heading="true"
show-metadata="true"
expanded="false"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>673</fr:anchor><fr:addr
type="user">lsd-0016</fr:addr><fr:route>lsd-0016.xml</fr:route><fr:title
text="Coproduct monad container">Coproduct monad container</fr:title><fr:taxon>Definition</fr:taxon><fr:date><fr:year>2024</fr:year><fr:month>12</fr:month><fr:day>4</fr:day></fr:date><fr:authors><fr:author><fr:link
type="local"
href="chrisjpurdy.xml"
addr="chrisjpurdy"
title="Chris Purdy">Chris Purdy</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:p>The Coproduct <fr:link
type="local"
href="lsd-0002.xml"
addr="lsd-0002"
title="Monad container">monad container</fr:link> for a set <fr:tex
display="inline"><![CDATA[E]]></fr:tex> is given by the data <fr:tex
display="inline"><![CDATA[1 + E \triangleright  T]]></fr:tex> where
  <fr:tex
display="inline"><![CDATA[T\ (\text {inl}\ *) := 1]]></fr:tex>, <fr:tex
display="inline"><![CDATA[T\ (\text {inr}\ \_) := 0]]></fr:tex> and:
  <fr:tex
display="block"><![CDATA[     \begin {align*}       \iota  &:= \text {inl}\ *\\       \sigma \ (\text {inl}\ *)\ f &:= f\ *\\       \sigma \ (\text {inr}\ e)\ f &:= \text {inr}\ e\\       \text {pr}\ * &:= (* , *)     \end {align*}   ]]></fr:tex>
  This is the unique monad container structure that you can give the container <fr:tex
display="inline"><![CDATA[1 + E \triangleright  T]]></fr:tex> <html:span
xmlns:html="http://www.w3.org/1999/xhtml"
class="link-reference"><fr:link
type="local"
href="uustalu2017.xml"
addr="uustalu2017"
title="Container Combinatorics: Monads and Lax Monoidal Functors">[uustalu2017]</fr:link></html:span>. This also happens to be a cartesian monad container. <fr:tex
display="inline"><![CDATA[\text {pr}]]></fr:tex> is well-defined up to function extensionality by induction on its implicit arguments.</fr:p></fr:mainmatter><fr:backmatter /></fr:tree><fr:tree
toc="true"
numbered="false"
show-heading="true"
show-metadata="true"
expanded="false"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>675</fr:anchor><fr:addr
type="user">lsd-0014</fr:addr><fr:route>lsd-0014.xml</fr:route><fr:title
text="List monad container">List monad container</fr:title><fr:taxon>Definition</fr:taxon><fr:date><fr:year>2024</fr:year><fr:month>12</fr:month><fr:day>4</fr:day></fr:date><fr:authors><fr:author><fr:link
type="local"
href="chrisjpurdy.xml"
addr="chrisjpurdy"
title="Chris Purdy">Chris Purdy</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:p>The List <fr:link
type="local"
href="lsd-0002.xml"
addr="lsd-0002"
title="Monad container">monad container</fr:link> is given by the data <fr:tex
display="inline"><![CDATA[\mathbb {N} \triangleright  \text {Fin}]]></fr:tex> and:
  <fr:tex
display="block"><![CDATA[     \begin {align*}       \iota  &:= 1\\       \sigma \ n\ f &:= \sum _{i = 0}^n f\ i\\        \text {pr}_1\ \{n\}\ \{f\}\ m &:= \text {greatest } i \in  \lbrack  0 .. n \rparen  \text { where } \sum _{j = 0}^i f\ j \leq  m \\       \text {pr}_2\ \{n\}\ \{f\}\ m &:= m - (\sum _{j = 0}^{\text {pr}_1\ \{n\}\ \{f\}\ m} f\ j)     \end {align*}   ]]></fr:tex></fr:p></fr:mainmatter><fr:backmatter /></fr:tree><fr:tree
toc="true"
numbered="false"
show-heading="true"
show-metadata="true"
expanded="false"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>677</fr:anchor><fr:addr
type="user">lsd-0011</fr:addr><fr:route>lsd-0011.xml</fr:route><fr:title
text="Maybe monad container">Maybe monad container</fr:title><fr:taxon>Definition</fr:taxon><fr:date><fr:year>2024</fr:year><fr:month>12</fr:month><fr:day>4</fr:day></fr:date><fr:authors><fr:author><fr:link
type="local"
href="chrisjpurdy.xml"
addr="chrisjpurdy"
title="Chris Purdy">Chris Purdy</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:p>The Maybe monad can be represented as the <fr:link
type="local"
href="lsd-0002.xml"
addr="lsd-0002"
title="Monad container">monad container</fr:link> <fr:tex
display="inline"><![CDATA[2 \triangleright  T]]></fr:tex> where
  <fr:tex
display="inline"><![CDATA[T\ \text {true} := 1]]></fr:tex>, <fr:tex
display="inline"><![CDATA[T\ \text {false} := 0]]></fr:tex> and:
  <fr:tex
display="block"><![CDATA[     \begin {align*}       \iota  &:= \text {true}\\       \sigma \ \text {true}\ f &:= f\ *\\       \sigma \ \text {false}\ f &:= \text {false}\\       \text {pr}\ * &:= (* , *)     \end {align*}   ]]></fr:tex>
  This is a special case of the <fr:link
type="local"
href="lsd-0016.xml"
addr="lsd-0016"
title="Coproduct monad container">Coproduct monad container</fr:link>.</fr:p></fr:mainmatter><fr:backmatter /></fr:tree><fr:tree
toc="true"
numbered="false"
show-heading="true"
show-metadata="true"
expanded="false"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>679</fr:anchor><fr:addr
type="user">lsd-0013</fr:addr><fr:route>lsd-0013.xml</fr:route><fr:title
text="Reverse State monad container">Reverse State monad container</fr:title><fr:taxon>Definition</fr:taxon><fr:date><fr:year>2024</fr:year><fr:month>12</fr:month><fr:day>4</fr:day></fr:date><fr:authors><fr:author><fr:link
type="local"
href="chrisjpurdy.xml"
addr="chrisjpurdy"
title="Chris Purdy">Chris Purdy</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:p>The Reverse State monad for some set of states <fr:tex
display="inline"><![CDATA[S]]></fr:tex> can be represented by the <fr:link
type="local"
href="lsd-0002.xml"
addr="lsd-0002"
title="Monad container">monad container</fr:link> <fr:tex
display="inline"><![CDATA[S \to  S \triangleright  \lambda  \_ . S]]></fr:tex> with the data:
  <fr:tex
display="block"><![CDATA[     \begin {align*}       \iota  &:= \lambda  x . x\\       \sigma \ f\ g &:= \lambda  s . f\ (\pi _2\ (g^\circlearrowright \ s))\\       \text {pr}\ \{f\}\ \{g\}\ s &:= (\pi _2\ (g^\circlearrowright \ s) , s)     \end {align*}   ]]></fr:tex>
  Where we use the notation:
  <fr:tex
display="block"><![CDATA[     \begin {align*}       -^\circlearrowright  &: (S \to  S \to  S) \to  S \to  (S \to  S) \times  S\\       f^\circlearrowright \ s &:= \text {fix}\ (f' , s'') . (f\ s'', f'\ s)     \end {align*}   ]]></fr:tex>
  This is only definable in a theory with unrestricted fixed points; <fr:tex
display="inline"><![CDATA[f^\circlearrowright ]]></fr:tex> may be undefined.<html:br
xmlns:html="http://www.w3.org/1999/xhtml" />
  <html:mark
xmlns:html="http://www.w3.org/1999/xhtml">TODO: Double check the definition of <fr:tex
display="inline"><![CDATA[\text {pr}]]></fr:tex> and prove the laws - the unit laws hold, and associativity seems plausible</html:mark></fr:p><fr:p>It might be possible to change the type of the shapes to some <fr:tex
display="inline"><![CDATA[M]]></fr:tex>-type to allow for this monad container to be definable in MLTT for example.</fr:p><fr:p>A random unorganised thought: since there seems to be some connection between the <fr:link
type="local"
href="lsd-0012.xml"
addr="lsd-0012"
title="State monad container">State monad container</fr:link> and the <fr:tex
display="inline"><![CDATA[S]]></fr:tex>(<fr:tex
display="inline"><![CDATA[K]]></fr:tex>?)<fr:tex
display="inline"><![CDATA[I]]></fr:tex> combinator calculus, maybe <fr:tex
display="inline"><![CDATA[\sigma ]]></fr:tex> here can act as different interpretation of the <fr:tex
display="inline"><![CDATA[S]]></fr:tex> combinator?</fr:p></fr:mainmatter><fr:backmatter /></fr:tree><fr:tree
toc="true"
numbered="false"
show-heading="true"
show-metadata="true"
expanded="false"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>681</fr:anchor><fr:addr
type="user">lsd-0012</fr:addr><fr:route>lsd-0012.xml</fr:route><fr:title
text="State monad container">State monad container</fr:title><fr:taxon>Definition</fr:taxon><fr:date><fr:year>2024</fr:year><fr:month>12</fr:month><fr:day>4</fr:day></fr:date><fr:authors><fr:author><fr:link
type="local"
href="chrisjpurdy.xml"
addr="chrisjpurdy"
title="Chris Purdy">Chris Purdy</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:p>The State functor for some set of states <fr:tex
display="inline"><![CDATA[S]]></fr:tex> can be represented by the container <fr:tex
display="inline"><![CDATA[S \to  S \triangleright  \lambda  \_ . S]]></fr:tex>, which can be extended to a <fr:link
type="local"
href="lsd-0002.xml"
addr="lsd-0002"
title="Monad container">monad container</fr:link> with the data:
  <fr:tex
display="block"><![CDATA[     \begin {align*}       \iota  &:= \lambda  x . x\\       \sigma \ f\ g &:= \lambda  s . g\ s\ (f\ s)\\       \text {pr}\ \{f\}\ \{g\}\ s &:= (s , f\ s)     \end {align*}   ]]></fr:tex>
  It is not cartesian for general <fr:tex
display="inline"><![CDATA[S]]></fr:tex>.</fr:p><fr:p>Interestingly it seems to consist of the combinators <fr:tex
display="inline"><![CDATA[S]]></fr:tex> (a version with flipped arguments) and <fr:tex
display="inline"><![CDATA[I]]></fr:tex>. Is there some deeper connection to combinatory logic here?</fr:p></fr:mainmatter><fr:backmatter /></fr:tree><fr:tree
toc="true"
numbered="false"
show-heading="true"
show-metadata="true"
expanded="false"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>683</fr:anchor><fr:addr
type="user">lsd-0015</fr:addr><fr:route>lsd-0015.xml</fr:route><fr:title
text="Writer monad container">Writer monad container</fr:title><fr:taxon>Definition</fr:taxon><fr:date><fr:year>2024</fr:year><fr:month>12</fr:month><fr:day>4</fr:day></fr:date><fr:authors><fr:author><fr:link
type="local"
href="chrisjpurdy.xml"
addr="chrisjpurdy"
title="Chris Purdy">Chris Purdy</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:p>The Writer <fr:link
type="local"
href="lsd-0002.xml"
addr="lsd-0002"
title="Monad container">monad container</fr:link> for a monoid <fr:tex
display="inline"><![CDATA[(A, \otimes , e)]]></fr:tex> is given by the data <fr:tex
display="inline"><![CDATA[A \triangleright  \lambda  \_ . 1]]></fr:tex> and:
  <fr:tex
display="block"><![CDATA[     \begin {align*}       \iota  &:= e\\       \sigma \ a\ b\ &:= a \otimes  (b\ *)\\       \text {pr}\ * &:= (*, *)     \end {align*}   ]]></fr:tex></fr:p></fr:mainmatter><fr:backmatter /></fr:tree><fr:tree
toc="true"
numbered="false"
show-heading="true"
show-metadata="true"
expanded="false"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>685</fr:anchor><fr:addr
type="user">lsd-0009</fr:addr><fr:route>lsd-0009.xml</fr:route><fr:title
text="Cartesian monad container">Cartesian monad container</fr:title><fr:taxon>Definition</fr:taxon><fr:date><fr:year>2024</fr:year><fr:month>12</fr:month><fr:day>2</fr:day></fr:date><fr:authors><fr:author><fr:link
type="local"
href="chrisjpurdy.xml"
addr="chrisjpurdy"
title="Chris Purdy">Chris Purdy</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:p>Let <fr:tex
display="inline"><![CDATA[(S \triangleright  P, \iota , \sigma , \text {pr})]]></fr:tex> be a <fr:link
type="local"
href="lsd-0002.xml"
addr="lsd-0002"
title="Monad container">monad containers</fr:link>. It is cartesian
  iff <fr:tex
display="inline"><![CDATA[P\ \iota  \cong  1]]></fr:tex> and <fr:tex
display="inline"><![CDATA[\text {pr}]]></fr:tex> is an isomorphism. This is equivalent to saying that the
  extension of the monad container is a cartesian monad (container functors always preserve pullbacks).</fr:p><fr:p>These can also be seen as proper <fr:tex
display="inline"><![CDATA[(1,\Sigma )]]></fr:tex> type universes (Tarski-style).</fr:p></fr:mainmatter><fr:backmatter /></fr:tree><fr:tree
toc="true"
numbered="false"
show-heading="true"
show-metadata="true"
expanded="false"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>687</fr:anchor><fr:addr
type="user">lsd-0008</fr:addr><fr:route>lsd-0008.xml</fr:route><fr:title
text="Monad container distributive law">Monad container distributive law</fr:title><fr:taxon>Definition</fr:taxon><fr:date><fr:year>2024</fr:year><fr:month>12</fr:month><fr:day>2</fr:day></fr:date><fr:authors><fr:author><fr:link
type="local"
href="chrisjpurdy.xml"
addr="chrisjpurdy"
title="Chris Purdy">Chris Purdy</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:p>Let <fr:tex
display="inline"><![CDATA[(S \triangleright  P, \iota ^S, \sigma ^S, \text {pr}^S)]]></fr:tex> and <fr:tex
display="inline"><![CDATA[(T \triangleright  Q, \iota ^T, \sigma ^T, \text {pr}^T)]]></fr:tex> be <fr:link
type="local"
href="lsd-0002.xml"
addr="lsd-0002"
title="Monad container">monad containers</fr:link>.
  A distributive law of <fr:tex
display="inline"><![CDATA[S \triangleright  P]]></fr:tex> over <fr:tex
display="inline"><![CDATA[T \triangleright  Q]]></fr:tex> is given by the data:
  <fr:tex
display="block"><![CDATA[     \begin {align*}       &u_1 : \prod _{s : S} (P\ s \to  T) \to  T \\       &u_2 : \prod _{s : S} \prod _{f : P\ s \to  T} Q\ (u_1\ s\ f) \to  S \\       &v_1 : \prod _{\{s : S\}} \prod _{\{f : P\ s \to  T\}} \prod _{q : Q\ (u_1\ s\ f)} P\ (u_2\ s\ f\ q) \to  P\ s \\       &v_2 : \prod _{\{s : S\}} \prod _{\{f : P\ s \to  T\}} \prod _{q : Q\ (u_1\ s\ f)} \prod _{p : P\ (u_2\ s\ f\ q)} Q\ (f\ (v_1\ q\ p)) \\     \end {align*}   ]]></fr:tex>
  where the following equalities hold:
  <fr:tex
display="block"><![CDATA[     \begin {align*}       u\ \iota ^S\ (\lambda  \_ . t) &= (t , \lambda  \_ . \iota ^S)\\       u\ s\ (\lambda  \_. \iota ^T) &= (\iota ^T , \lambda  \_. s)\\       v\ \{\iota ^S\}\ \{\lambda  \_. t\} &= \langle  \pi _2 , \pi _1 \rangle \\       v\ \{s\}\ \{\lambda  \_. \iota ^T\} &= \langle  \pi _2 , \pi _1 \rangle \\       \\        u_1\ (\sigma ^S\ s\ f)\ (g \circ  \text {pr}^S) &= u_1\ s\ (u_1 \circ  \langle  f , g \rangle )\\       u_2\ (\sigma ^S\ s\ f)\ (g \circ  \text {pr}^S)\ q &= \sigma ^S\ (u_2\ s\ (u_1 \circ  \langle  f , g \rangle )\ q)\ (\lambda  p . u_2\ (f\ (v_1\ q\ p))\ (g\ (v_1\ q\ p))\ (v_2\ q\ p))\\         \text {pr}^S_1\ (v_1\ q\ p) &= v_1\ q\ (\text {pr}^S_1\ p)\\       \text {pr}^S_2\ (v_1\ q\ p) &= v_1\ (v_2\ q\ (\text {pr}^S_1\ p))\ (\text {pr}^S_2\ p)\\       v_2\ q\ p &= v_2\ (v_2\ q\ (\text {pr}^S_1\ p))\ (\text {pr}^S_2\ p)\\       \\       u_1\ s\ (\sigma ^T \circ  \langle  f , g \rangle ) &= \sigma ^T\ (u_1\ s\ f)\ (\lambda  q . u_1\ (u_2\ s\ f\ q)\ (\lambda  p . g\ (v_1\ q\ p)\ (v_2\ q\ p)))\\       u_2\ s\ (\sigma ^T \circ  \langle  f , g \rangle )\ q &= u_2\ (u_2\ s\ f\ (\text {pr}^T_1\ q))\ (\lambda  p . g\ (v_1\ q\ p)\ (v_2\ q\ p))\ (\text {pr}^T_2\ q)\\       v_1\ (\text {pr}^T_1\ q)\ (v_1\ (\text {pr}^T_2\ q)\ p) &= v_1\ q\ p\\       v_2\ (\text {pr}^T_1\ q)\ (v_1\ (\text {pr}^T_2\ q)\ p) &= \text {pr}^T_1\ (v_2\ q\ p)\\       v_2\ (\text {pr}^T_2\ q)\ p &= \text {pr}^T_2\ (v_2\ q\ p)     \end {align*}   ]]></fr:tex>
  We use the notation <fr:tex
display="inline"><![CDATA[\langle  f , g \rangle  := \lambda  x . (f\ x , g\ x)]]></fr:tex>, with some implicit use of currying and uncurrying where this shorthand is utilised.
  
  <fr:tex
display="inline"><![CDATA[u]]></fr:tex> is defined as <fr:tex
display="inline"><![CDATA[\langle  u_1 , u_2 \rangle ]]></fr:tex> and <fr:tex
display="inline"><![CDATA[v]]></fr:tex> is defined as <fr:tex
display="inline"><![CDATA[\langle  v_1 , v_2 \rangle ]]></fr:tex>.</fr:p><fr:p>Monad container distributive laws allow you to define a notion of <fr:link
type="local"
href="lsd-0031.xml"
addr="lsd-0031"
title="Monad container composition via distributive law">composition for monad containers</fr:link>.</fr:p></fr:mainmatter><fr:backmatter /></fr:tree><fr:tree
toc="true"
numbered="false"
show-heading="true"
show-metadata="true"
expanded="false"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>689</fr:anchor><fr:addr
type="user">lsd-0005</fr:addr><fr:route>lsd-0005.xml</fr:route><fr:title
text="Idempotent monad containers are almost trivial">Idempotent monad containers are almost trivial</fr:title><fr:taxon>Lemma</fr:taxon><fr:date><fr:year>2024</fr:year><fr:month>11</fr:month><fr:day>29</fr:day></fr:date><fr:authors><fr:author><fr:link
type="local"
href="chrisjpurdy.xml"
addr="chrisjpurdy"
title="Chris Purdy">Chris Purdy</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:p>A monad <fr:tex
display="inline"><![CDATA[T]]></fr:tex> is idempotent when <fr:tex
display="inline"><![CDATA[T \eta  = \eta  T]]></fr:tex>, which for <fr:link
type="local"
href="lsd-0002.xml"
addr="lsd-0002"
title="Monad container">monad containers</fr:link> immediately gives us <fr:tex
display="inline"><![CDATA[\iota  = s]]></fr:tex> for all <fr:tex
display="inline"><![CDATA[s : S]]></fr:tex>, and hence <fr:tex
display="inline"><![CDATA[S]]></fr:tex> is contractible.</fr:p><fr:p>Another equivalent condition for a monad <fr:tex
display="inline"><![CDATA[T]]></fr:tex> to be idempotent is that <fr:tex
display="inline"><![CDATA[\text {Id}]]></fr:tex> is a distributive law <fr:tex
display="inline"><![CDATA[TT \Rightarrow  TT]]></fr:tex>. For <fr:link
type="local"
href="lsd-0008.xml"
addr="lsd-0008"
title="Monad container distributive law">monad container distributive laws</fr:link> this implies futher that all positions are equal, so the set <fr:tex
display="inline"><![CDATA[P\ \iota ]]></fr:tex> is subsingleton.</fr:p></fr:mainmatter><fr:backmatter /></fr:tree><fr:tree
toc="true"
numbered="false"
show-heading="true"
show-metadata="true"
expanded="false"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>691</fr:anchor><fr:addr
type="user">lsd-0007</fr:addr><fr:route>lsd-0007.xml</fr:route><fr:title
text="There is only one representable monad container">There is only one representable monad container</fr:title><fr:taxon>Lemma</fr:taxon><fr:date><fr:year>2024</fr:year><fr:month>11</fr:month><fr:day>29</fr:day></fr:date><fr:authors><fr:author><fr:link
type="local"
href="chrisjpurdy.xml"
addr="chrisjpurdy"
title="Chris Purdy">Chris Purdy</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:p>Given the container <fr:tex
display="inline"><![CDATA[1 \triangleright  \lambda  \_ . A]]></fr:tex>, we look at the required data for a <fr:link
type="local"
href="lsd-0002.xml"
addr="lsd-0002"
title="Monad container">monad container</fr:link>. <fr:tex
display="inline"><![CDATA[\iota ]]></fr:tex> and <fr:tex
display="inline"><![CDATA[\sigma \ a\ b]]></fr:tex> are trival (both are elements of <fr:tex
display="inline"><![CDATA[1]]></fr:tex>). The equations for <fr:tex
display="inline"><![CDATA[\text {pr}]]></fr:tex> force it to be defined as the diagonal map:
  <fr:tex
display="block"><![CDATA[     \text {pr}\ a := (a , a)   ]]></fr:tex></fr:p></fr:mainmatter><fr:backmatter /></fr:tree><fr:tree
toc="true"
numbered="false"
show-heading="true"
show-metadata="true"
expanded="false"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>693</fr:anchor><fr:addr
type="user">lsd-0004</fr:addr><fr:route>lsd-0004.xml</fr:route><fr:title
text="All affine monad containers are representable">All affine monad containers are representable</fr:title><fr:taxon>Lemma</fr:taxon><fr:date><fr:year>2024</fr:year><fr:month>11</fr:month><fr:day>28</fr:day></fr:date><fr:authors><fr:author><fr:link
type="local"
href="chrisjpurdy.xml"
addr="chrisjpurdy"
title="Chris Purdy">Chris Purdy</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:p>Let <fr:tex
display="inline"><![CDATA[(S \triangleright  P, \iota , \sigma , \text {pr})]]></fr:tex> be a <fr:link
type="local"
href="lsd-0003.xml"
addr="lsd-0003"
title="Commutative monad containers">commutative monad container</fr:link>. By taking the categorical definition of affine monads and specialising it to monad container extensions, we get for all <fr:tex
display="inline"><![CDATA[a, b : S]]></fr:tex> the equation:
  <fr:tex
display="block"><![CDATA[     \sigma \ a\ (\lambda  \_ . b) = a   ]]></fr:tex>
  Since we have a point <fr:tex
display="inline"><![CDATA[\iota  : S]]></fr:tex>, we can conclude that <fr:tex
display="inline"><![CDATA[S]]></fr:tex> is contractible. Hence we have that <fr:tex
display="inline"><![CDATA[S \triangleright  P]]></fr:tex> is <fr:tex
display="inline"><![CDATA[1 \triangleright  \lambda  \_ . P\ \iota ]]></fr:tex>.</fr:p></fr:mainmatter><fr:backmatter /></fr:tree><fr:tree
toc="true"
numbered="false"
show-heading="true"
show-metadata="true"
expanded="false"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>695</fr:anchor><fr:addr
type="user">lsd-0003</fr:addr><fr:route>lsd-0003.xml</fr:route><fr:title
text="Commutative monad containers">Commutative monad containers</fr:title><fr:taxon>Definition</fr:taxon><fr:date><fr:year>2024</fr:year><fr:month>11</fr:month><fr:day>28</fr:day></fr:date><fr:authors><fr:author><fr:link
type="local"
href="chrisjpurdy.xml"
addr="chrisjpurdy"
title="Chris Purdy">Chris Purdy</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:p>Let <fr:tex
display="inline"><![CDATA[(S \triangleright  P, \iota , \sigma , \text {pr})]]></fr:tex> be a <fr:link
type="local"
href="lsd-0002.xml"
addr="lsd-0002"
title="Monad container">monad container</fr:link>. We call the monad container
  commutative when the following laws hold:
  <fr:tex
display="block"><![CDATA[     \begin {align*}       \sigma \ a\ (\lambda  \_ . b) &= \sigma \ b\ (\lambda  \_ . a)\\       \text {pr}_1\ p &= \text {pr}_2\ p\\       \text {pr}_2\ p &= \text {pr}_1\ p \end {align*}   ]]></fr:tex>
  The equations for <fr:tex
display="inline"><![CDATA[\text {pr}]]></fr:tex> holds given the first equation. Commutative monad containers interpret exactly
  the commutative monads (w.r.t. cartesian product) for container functors. <html:span
xmlns:html="http://www.w3.org/1999/xhtml"
class="link-reference"><fr:link
type="local"
href="uustalu2017.xml"
addr="uustalu2017"
title="Container Combinatorics: Monads and Lax Monoidal Functors">[uustalu2017]</fr:link></html:span></fr:p></fr:mainmatter><fr:backmatter /></fr:tree><fr:tree
toc="true"
numbered="false"
show-heading="true"
show-metadata="true"
expanded="false"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>697</fr:anchor><fr:addr
type="user">lsd-0002</fr:addr><fr:route>lsd-0002.xml</fr:route><fr:title
text="Monad container">Monad container</fr:title><fr:taxon>Definition</fr:taxon><fr:date><fr:year>2024</fr:year><fr:month>11</fr:month><fr:day>28</fr:day></fr:date><fr:authors><fr:author><fr:link
type="local"
href="chrisjpurdy.xml"
addr="chrisjpurdy"
title="Chris Purdy">Chris Purdy</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:p>Let <fr:tex
display="inline"><![CDATA[S \triangleright  P]]></fr:tex> be a container. A monad container (or mnd-container) <html:span
xmlns:html="http://www.w3.org/1999/xhtml"
class="link-reference"><fr:link
type="local"
href="uustalu2017.xml"
addr="uustalu2017"
title="Container Combinatorics: Monads and Lax Monoidal Functors">[uustalu2017]</fr:link></html:span> on <fr:tex
display="inline"><![CDATA[S \triangleright  P]]></fr:tex> is given by the following data:
  <fr:tex
display="block"><![CDATA[     \begin {align*}       \iota  &: S\\       \sigma  &: \prod _{s : S} (P\ s \to  S) \to  S\\       \text {pr} &: \prod _{\{s : S\}} \prod _{\{f : P\ s \to  S\}} P\ (\sigma \ s\ f) \to  \sum _{p : P\ s} P\ (f\ p)     \end {align*}   ]]></fr:tex>
  For which the following laws hold:
  <fr:tex
display="block"><![CDATA[     \begin {align*}       \sigma \ a\ (\lambda  \_ . \iota  ) &= a\\       \text {pr}_1\ p &= p\\       \sigma \ \iota \ (\lambda  \_ . a ) &= a\\       \text {pr}_2\ p &= p\\       \sigma \ (\sigma \ a\ f)\ (\lambda  p . g\ (\text {pr}_1\ p)\ (\text {pr}_2\ p)) &= \sigma \ a\ (\lambda  p . \sigma \ (f\ p)\ (g\ p))\\       \text {pr}_1\ (\text {pr}_1\ p) &= \text {pr}_1\ p\\       \text {pr}_1\ (\text {pr}_2\ p) &= \text {pr}_2\ (\text {pr}_1\ p)\\       \text {pr}_2\ p &= \text {pr}_2\ (\text {pr}_2\ p)     \end {align*}   ]]></fr:tex>
  We abbreviate <fr:tex
display="inline"><![CDATA[\pi _1 \circ  \text {pr}]]></fr:tex> as <fr:tex
display="inline"><![CDATA[\text {pr}_1]]></fr:tex> and <fr:tex
display="inline"><![CDATA[\pi _2 \circ  \text {pr}]]></fr:tex> as <fr:tex
display="inline"><![CDATA[\text {pr}_2]]></fr:tex>. Each set of laws for <fr:tex
display="inline"><![CDATA[\text {pr}]]></fr:tex> hold up to the laws for <fr:tex
display="inline"><![CDATA[\sigma ]]></fr:tex> above them.</fr:p></fr:mainmatter><fr:backmatter /></fr:tree></fr:mainmatter><fr:backmatter /></fr:tree></fr:backmatter></fr:tree>