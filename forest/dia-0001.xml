<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="default.xsl"?>
<fr:tree
toc="true"
numbered="true"
show-heading="true"
show-metadata="true"
expanded="true"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>310</fr:anchor><fr:addr
type="user">dia-0001</fr:addr><fr:route>dia-0001.xml</fr:route><fr:title
text="Research diary">Research diary</fr:title><fr:date><fr:year>2024</fr:year><fr:month>11</fr:month><fr:day>13</fr:day></fr:date><fr:authors /></fr:frontmatter><fr:mainmatter><fr:p>I was previously using Obsidian for my research diary, but I found it a little heavyweight for
  what I was using it for: weekly (or fortnightly) notes on what I've been thinking about.</fr:p><fr:p>Being able to "transclude" trees into other ones is one of the reasons I'm using Forester for this. Writing definitions once and then including them as many times as needed seems far better than having to jump between files.</fr:p><fr:p><fr:link
type="local"
href="dia-0002.xml"
addr="dia-0002"
title="Diary: UoN research visit, Nov 2024">Most recent entry</fr:link></fr:p></fr:mainmatter><fr:backmatter><fr:tree
toc="false"
numbered="false"
show-heading="true"
show-metadata="false"
expanded="true"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:title
text="Context">Context</fr:title><fr:authors /></fr:frontmatter><fr:mainmatter><fr:tree
toc="true"
numbered="false"
show-heading="true"
show-metadata="true"
expanded="false"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>311</fr:anchor><fr:addr
type="user">index</fr:addr><fr:route>index.xml</fr:route><fr:title
text="Chris Purdy">Chris Purdy</fr:title><fr:authors /></fr:frontmatter><fr:mainmatter><fr:p>I am a PhD student at Royal Holloway, University of London researching programming language semantics via cyclic proof theory, type theory, and category theory.

  
  <fr:tree
toc="true"
numbered="true"
show-heading="true"
show-metadata="false"
expanded="false"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>293</fr:anchor><fr:addr
type="user">mhe-0001</fr:addr><fr:route>mhe-0001.xml</fr:route><fr:title
text="HOL^{ex}"><fr:tex
display="inline"><![CDATA[\mu ]]></fr:tex>HOL<fr:tex
display="inline"><![CDATA[^{ex}]]></fr:tex></fr:title><fr:date><fr:year>2024</fr:year><fr:month>11</fr:month><fr:day>13</fr:day></fr:date><fr:authors><fr:author><fr:link
type="local"
href="chrisjpurdy.xml"
addr="chrisjpurdy"
title="Chris Purdy">Chris Purdy</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:p><fr:tex
display="inline"><![CDATA[\mu ]]></fr:tex>HOL<fr:tex
display="inline"><![CDATA[^{ex}]]></fr:tex> is a proof system that I've been developing for part of my PhD project with my
  supervisor <fr:link
type="local"
href="reubensrowe.xml"
addr="reubensrowe"
title="Reuben Rowe">Reuben Rowe</fr:link>.</fr:p><fr:p>The goal is to develop a proof system for higher-order logic with fixed-point operators, that allows for induction and coinduction by adding fixed-point "unfolding" rules, and allowing proofs to be cyclic.</fr:p></fr:mainmatter><fr:backmatter /></fr:tree>
  <fr:tree
toc="true"
numbered="true"
show-heading="true"
show-metadata="false"
expanded="false"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>295</fr:anchor><fr:addr
type="user">lsd-0001</fr:addr><fr:route>lsd-0001.xml</fr:route><fr:title
text="Distributive laws of monad containers">Distributive laws of monad containers</fr:title><fr:date><fr:year>2024</fr:year><fr:month>11</fr:month><fr:day>13</fr:day></fr:date><fr:authors><fr:author><fr:link
type="local"
href="chrisjpurdy.xml"
addr="chrisjpurdy"
title="Chris Purdy">Chris Purdy</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:p>Joint work with <fr:link
type="local"
href="stefaniadamato.xml"
addr="stefaniadamato"
title="Stefania Damato">Stefania Damato</fr:link> on characterising distributive laws between
  monad containers. <fr:link
type="local"
href="lsd-0002.xml"
addr="lsd-0002"
title="Monad container">Monad containers</fr:link> were originally characterised by <fr:link
type="local"
href="tarmouustalu.xml"
addr="tarmouustalu"
title="Tarmo Uustalu">Tarmo Uustalu</fr:link> - these are containers with extra structure such that their interpretation as Set functors are monads.</fr:p><fr:p>This characterisation is useful for enumerating all possible distributive laws between two monad containers, which may help in developing no-go theorems for distributive laws between a larger class of monads.</fr:p></fr:mainmatter><fr:backmatter /></fr:tree>
  

  <fr:tree
toc="true"
numbered="true"
show-heading="true"
show-metadata="false"
expanded="true"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>297</fr:anchor><fr:addr
type="user">dia-0001</fr:addr><fr:route>dia-0001.xml</fr:route><fr:title
text="Research diary">Research diary</fr:title><fr:date><fr:year>2024</fr:year><fr:month>11</fr:month><fr:day>13</fr:day></fr:date><fr:authors /></fr:frontmatter><fr:mainmatter><fr:p>I was previously using Obsidian for my research diary, but I found it a little heavyweight for
  what I was using it for: weekly (or fortnightly) notes on what I've been thinking about.</fr:p><fr:p>Being able to "transclude" trees into other ones is one of the reasons I'm using Forester for this. Writing definitions once and then including them as many times as needed seems far better than having to jump between files.</fr:p><fr:p><fr:link
type="local"
href="dia-0002.xml"
addr="dia-0002"
title="Diary: UoN research visit, Nov 2024">Most recent entry</fr:link></fr:p></fr:mainmatter><fr:backmatter /></fr:tree>
  <fr:tree
toc="true"
numbered="true"
show-heading="true"
show-metadata="false"
expanded="true"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>298</fr:anchor><fr:addr
type="user">abt-0001</fr:addr><fr:route>abt-0001.xml</fr:route><fr:title
text="About this website">About this website</fr:title><fr:date><fr:year>2024</fr:year><fr:month>11</fr:month><fr:day>13</fr:day></fr:date><fr:authors /></fr:frontmatter><fr:mainmatter><fr:p>This website uses the <fr:link
type="external"
href="https://sr.ht/~jonsterling/forester/">Forester</fr:link> tool developed by
  <fr:link
type="local"
href="jonmsterling.xml"
addr="jonmsterling"
title="Jon Sterling">Jon Sterling</fr:link>. See Jon's website for tutorials/information about the tool.</fr:p><fr:p>It is a fantastic way to organise notes and I've been enjoying it a lot! There is even a <fr:link
type="external"
href="https://marketplace.visualstudio.com/items?itemName=TreborHuang.vscode-forester">VSCode plugin</fr:link>.</fr:p></fr:mainmatter><fr:backmatter /></fr:tree>

  <fr:link
type="external"
href="https://chrisjpurdy.github.io/">Back to my Github pages</fr:link></fr:p></fr:mainmatter><fr:backmatter /></fr:tree></fr:mainmatter><fr:backmatter /></fr:tree><fr:tree
toc="false"
numbered="false"
show-heading="true"
show-metadata="false"
expanded="true"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:title
text="Backlinks">Backlinks</fr:title><fr:authors /></fr:frontmatter><fr:mainmatter><fr:tree
toc="true"
numbered="false"
show-heading="true"
show-metadata="true"
expanded="false"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>312</fr:anchor><fr:addr
type="user">dia-0002</fr:addr><fr:route>dia-0002.xml</fr:route><fr:title
text="Diary: UoN research visit, Nov 2024">Diary: UoN research visit, Nov 2024</fr:title><fr:date><fr:year>2024</fr:year><fr:month>11</fr:month><fr:day>28</fr:day></fr:date><fr:authors><fr:author><fr:link
type="local"
href="chrisjpurdy.xml"
addr="chrisjpurdy"
title="Chris Purdy">Chris Purdy</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:p><fr:link
type="local"
href="dia-0001.xml"
addr="dia-0001"
title="Research diary">Previous entry</fr:link>, <fr:link
type="external"
href="dia-0003">Next entry</fr:link></fr:p><fr:p>Earlier this week <fr:link
type="local"
href="stefaniadamato.xml"
addr="stefaniadamato"
title="Stefania Damato">Stef</fr:link> and I were working on the monad container distributive law project. We had a very insightful meeting with Dan Marsden who mentioned (among other things) that we should look for applications for our characterisation. Things to try:
  <fr:ol><fr:li>Find characterisations for tighter classes of monad containers (i.e. <fr:link
type="local"
href="lsd-0003.xml"
addr="lsd-0003"
title="Commutative monad containers">commutative</fr:link>, <fr:link
type="local"
href="lsd-0004.xml"
addr="lsd-0004"
title="All affine monad containers are representable">affine</fr:link>, relevant) and see if this simplifies the distributive law. We have already characterised distributive laws for cartesian monad containers for example.</fr:li>
    <fr:li>Prove more than just mere existence of distributive laws - use the characterisation to find exactly how many there are for a given pair of monad containers.</fr:li>
    <fr:li>Over-approximate distributive law requirements to have an easier time with the above. For example, we could consider when the position map <fr:tex
display="inline"><![CDATA[v]]></fr:tex> is just <fr:tex
display="inline"><![CDATA[\langle  \pi _2 , \pi _1 \rangle ]]></fr:tex>, which often seems to be the case in simpler examples.</fr:li>
    <fr:li>Find which algebraic theories correspond to container monads, to tie our work to Maaike Zwart and Dan's work on distributive laws for algebraic theories.</fr:li></fr:ol></fr:p></fr:mainmatter><fr:backmatter /></fr:tree></fr:mainmatter><fr:backmatter /></fr:tree><fr:tree
toc="false"
numbered="false"
show-heading="true"
show-metadata="false"
expanded="true"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:title
text="Related">Related</fr:title><fr:authors /></fr:frontmatter><fr:mainmatter><fr:tree
toc="true"
numbered="false"
show-heading="true"
show-metadata="true"
expanded="false"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>314</fr:anchor><fr:addr
type="user">dia-0002</fr:addr><fr:route>dia-0002.xml</fr:route><fr:title
text="Diary: UoN research visit, Nov 2024">Diary: UoN research visit, Nov 2024</fr:title><fr:date><fr:year>2024</fr:year><fr:month>11</fr:month><fr:day>28</fr:day></fr:date><fr:authors><fr:author><fr:link
type="local"
href="chrisjpurdy.xml"
addr="chrisjpurdy"
title="Chris Purdy">Chris Purdy</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:p><fr:link
type="local"
href="dia-0001.xml"
addr="dia-0001"
title="Research diary">Previous entry</fr:link>, <fr:link
type="external"
href="dia-0003">Next entry</fr:link></fr:p><fr:p>Earlier this week <fr:link
type="local"
href="stefaniadamato.xml"
addr="stefaniadamato"
title="Stefania Damato">Stef</fr:link> and I were working on the monad container distributive law project. We had a very insightful meeting with Dan Marsden who mentioned (among other things) that we should look for applications for our characterisation. Things to try:
  <fr:ol><fr:li>Find characterisations for tighter classes of monad containers (i.e. <fr:link
type="local"
href="lsd-0003.xml"
addr="lsd-0003"
title="Commutative monad containers">commutative</fr:link>, <fr:link
type="local"
href="lsd-0004.xml"
addr="lsd-0004"
title="All affine monad containers are representable">affine</fr:link>, relevant) and see if this simplifies the distributive law. We have already characterised distributive laws for cartesian monad containers for example.</fr:li>
    <fr:li>Prove more than just mere existence of distributive laws - use the characterisation to find exactly how many there are for a given pair of monad containers.</fr:li>
    <fr:li>Over-approximate distributive law requirements to have an easier time with the above. For example, we could consider when the position map <fr:tex
display="inline"><![CDATA[v]]></fr:tex> is just <fr:tex
display="inline"><![CDATA[\langle  \pi _2 , \pi _1 \rangle ]]></fr:tex>, which often seems to be the case in simpler examples.</fr:li>
    <fr:li>Find which algebraic theories correspond to container monads, to tie our work to Maaike Zwart and Dan's work on distributive laws for algebraic theories.</fr:li></fr:ol></fr:p></fr:mainmatter><fr:backmatter /></fr:tree></fr:mainmatter><fr:backmatter /></fr:tree></fr:backmatter></fr:tree>