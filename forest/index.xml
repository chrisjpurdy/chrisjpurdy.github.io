<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="default.xsl"?>
<fr:tree
toc="true"
numbered="true"
show-heading="true"
show-metadata="true"
expanded="true"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>840</fr:anchor><fr:addr
type="user">index</fr:addr><fr:route>index.xml</fr:route><fr:title
text="Chris Purdy">Chris Purdy</fr:title><fr:authors /><fr:meta
name="comments">true</fr:meta></fr:frontmatter><fr:mainmatter><fr:p>I am a PhD student at Royal Holloway, University of London researching programming language semantics via cyclic proof theory, type theory, and category theory.

  
  <fr:tree
toc="true"
numbered="true"
show-heading="true"
show-metadata="false"
expanded="true"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>398</fr:anchor><fr:addr
type="machine">#244</fr:addr><fr:route>unstable-244.xml</fr:route><fr:title
text="Quick links">Quick links</fr:title><fr:authors /></fr:frontmatter><fr:mainmatter><fr:p><fr:ul><fr:li><fr:link
type="local"
href="lsd-0010.xml"
addr="lsd-0010"
title="Monad container zoo">Monad container zoo</fr:link></fr:li>
        <fr:li><fr:link
type="local"
href="dia-0001.xml"
addr="dia-0001"
title="Research diary">Research diary</fr:link></fr:li>
        <fr:li><fr:link
type="local"
href="mee-0000.xml"
addr="mee-0000"
title="Meeting notes">Meeting notes</fr:link></fr:li></fr:ul></fr:p></fr:mainmatter><fr:backmatter /></fr:tree>

  <fr:tree
toc="true"
numbered="true"
show-heading="true"
show-metadata="false"
expanded="true"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>399</fr:anchor><fr:addr
type="user">abt-0001</fr:addr><fr:route>abt-0001.xml</fr:route><fr:title
text="About this website">About this website</fr:title><fr:date><fr:year>2024</fr:year><fr:month>11</fr:month><fr:day>13</fr:day></fr:date><fr:authors /></fr:frontmatter><fr:mainmatter><fr:p>This website uses the <fr:link
type="external"
href="https://sr.ht/~jonsterling/forester/">Forester</fr:link> tool developed by
  <fr:link
type="local"
href="jonmsterling.xml"
addr="jonmsterling"
title="Jon Sterling">Jon Sterling</fr:link>. See Jon's website for tutorials/information about the tool.</fr:p><fr:p>It is a fantastic way to organise notes and I've been enjoying it a lot! There is even a <fr:link
type="external"
href="https://marketplace.visualstudio.com/items?itemName=TreborHuang.vscode-forester">VSCode plugin</fr:link>.</fr:p></fr:mainmatter><fr:backmatter /></fr:tree>

  <fr:link
type="external"
href="https://chrisjpurdy.github.io/">Back to my Github pages</fr:link></fr:p></fr:mainmatter><fr:backmatter><fr:tree
toc="false"
numbered="false"
show-heading="true"
show-metadata="false"
expanded="true"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:title
text="Related">Related</fr:title><fr:authors /></fr:frontmatter><fr:mainmatter><fr:tree
toc="true"
numbered="false"
show-heading="true"
show-metadata="true"
expanded="false"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>841</fr:anchor><fr:addr
type="user">mee-0000</fr:addr><fr:route>mee-0000.xml</fr:route><fr:title
text="Meeting notes">Meeting notes</fr:title><fr:date><fr:year>2024</fr:year><fr:month>12</fr:month><fr:day>5</fr:day></fr:date><fr:authors><fr:author><fr:link
type="local"
href="chrisjpurdy.xml"
addr="chrisjpurdy"
title="Chris Purdy">Chris Purdy</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:p>A repository of notes I've made for meetings with my supervisor, collaborators and others.
  
    
    
    <fr:tree
toc="false"
numbered="true"
show-heading="true"
show-metadata="false"
expanded="false"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>394</fr:anchor><fr:addr
type="user">mee-0001</fr:addr><fr:route>mee-0001.xml</fr:route><fr:title
text="Meeting notes: Stef 05/12/24">Meeting notes: Stef 05/12/24</fr:title><fr:date><fr:year>2024</fr:year><fr:month>12</fr:month><fr:day>5</fr:day></fr:date><fr:authors><fr:author><fr:link
type="local"
href="chrisjpurdy.xml"
addr="chrisjpurdy"
title="Chris Purdy">Chris Purdy</fr:link></fr:author><fr:author>stefaniademato</fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:p>We need to read the current literature on distributive laws in order to tie our work in and work out what results of ours are significant.
  For next week we should read
  <fr:ul><fr:li>No Go Theorems: Directed Containers That Do Not Distribute Over Distribution Monads</fr:li>
    <fr:li>Maaike Zwart's thesis</fr:li>
    <fr:li>Kleisli and Eilenberg-Moore laws/liftings: <fr:link
type="external"
href="https://stringdiagram.com/2022/05/25/monads-laws-and-liftings/">Dan's blog post</fr:link></fr:li></fr:ul></fr:p></fr:mainmatter><fr:backmatter /></fr:tree></fr:p></fr:mainmatter><fr:backmatter /></fr:tree><fr:tree
toc="true"
numbered="false"
show-heading="true"
show-metadata="true"
expanded="false"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>843</fr:anchor><fr:addr
type="user">lsd-0010</fr:addr><fr:route>lsd-0010.xml</fr:route><fr:title
text="Monad container zoo">Monad container zoo</fr:title><fr:date><fr:year>2024</fr:year><fr:month>12</fr:month><fr:day>2</fr:day></fr:date><fr:authors><fr:author><fr:link
type="local"
href="chrisjpurdy.xml"
addr="chrisjpurdy"
title="Chris Purdy">Chris Purdy</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:p>Here's a compilation of <fr:link
type="local"
href="lsd-0002.xml"
addr="lsd-0002"
title="Monad container">monad container</fr:link> and <fr:link
type="local"
href="lsd-0008.xml"
addr="lsd-0008"
title="Monad container distributive law">monad container distributive law</fr:link> examples for reference.</fr:p><fr:p>Properties/classes of monad containers:
  <fr:ul><fr:li><fr:link
type="local"
href="lsd-0009.xml"
addr="lsd-0009"
title="Cartesian monad container">Cartesian</fr:link></fr:li>
    <fr:li><fr:link
type="local"
href="lsd-0021.xml"
addr="lsd-0021"
title="Finitary container">Finitary</fr:link></fr:li>
    <fr:li><fr:link
type="local"
href="lsd-0005.xml"
addr="lsd-0005"
title="Idempotent monad containers are almost trivial">Idempotent</fr:link></fr:li>
    <fr:li><fr:link
type="local"
href="lsd-0003.xml"
addr="lsd-0003"
title="Commutative monad containers">Commutative</fr:link></fr:li>
    <fr:li><fr:link
type="local"
href="lsd-0004.xml"
addr="lsd-0004"
title="All affine monad containers are representable">Affine</fr:link></fr:li></fr:ul></fr:p><fr:p>"Specific" monad containers:
  <fr:ul><fr:li><fr:link
type="local"
href="lsd-0007.xml"
addr="lsd-0007"
title="There is only one representable monad container">Representable</fr:link></fr:li>
    <fr:li><fr:link
type="local"
href="lsd-0011.xml"
addr="lsd-0011"
title="Maybe monad container">Maybe</fr:link></fr:li>
    <fr:li><fr:link
type="local"
href="lsd-0015.xml"
addr="lsd-0015"
title="Writer monad container">Writer</fr:link></fr:li>
    <fr:li><fr:link
type="local"
href="lsd-0016.xml"
addr="lsd-0016"
title="Coproduct monad container">Coproduct</fr:link></fr:li>
    <fr:li><fr:link
type="local"
href="lsd-0014.xml"
addr="lsd-0014"
title="List monad container">List</fr:link></fr:li>
    <fr:li><fr:link
type="local"
href="lsd-0012.xml"
addr="lsd-0012"
title="State monad container">State</fr:link></fr:li>
    <fr:li><fr:link
type="local"
href="lsd-0013.xml"
addr="lsd-0013"
title="Reverse State monad container">Reverse State</fr:link> - just a curiosity, only definable in a theory with unrestricted fixed points</fr:li>
    <fr:li><html:mark
xmlns:html="http://www.w3.org/1999/xhtml">TODO: Update</html:mark></fr:li>
    <fr:li><html:mark
xmlns:html="http://www.w3.org/1999/xhtml">TODO: Free</html:mark></fr:li></fr:ul></fr:p><fr:p>Distributive laws:
  <fr:ul><fr:li><fr:link
type="local"
href="lsd-0017.xml"
addr="lsd-0017"
title="Representable monad container distribution on the right">Any monad container over a representable one</fr:link></fr:li>
    <fr:li><fr:link
type="local"
href="lsd-0018.xml"
addr="lsd-0018"
title="Coproduct monad container distribution on the left">Coproduct over any monad container</fr:link></fr:li>
    <fr:li><fr:link
type="local"
href="lsd-0026.xml"
addr="lsd-0026"
title="Monad container distributive law between writers">Writer over writer</fr:link></fr:li></fr:ul></fr:p></fr:mainmatter><fr:backmatter /></fr:tree><fr:tree
toc="true"
numbered="false"
show-heading="true"
show-metadata="true"
expanded="false"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>845</fr:anchor><fr:addr
type="user">dia-0001</fr:addr><fr:route>dia-0001.xml</fr:route><fr:title
text="Research diary">Research diary</fr:title><fr:date><fr:year>2024</fr:year><fr:month>11</fr:month><fr:day>13</fr:day></fr:date><fr:authors /></fr:frontmatter><fr:mainmatter><fr:p>I was previously using Obsidian for my research diary, but I found it a little heavyweight for
  what I was using it for: weekly (or fortnightly) notes on what I've been thinking about.</fr:p><fr:p>Being able to "transclude" trees into other ones is another reason why I'm using Forester for this. Writing definitions once and then including them as many times as needed seems far better than having to jump inbetween files.</fr:p><fr:p>Most recent entry:
  
  <fr:tree
toc="true"
numbered="true"
show-heading="true"
show-metadata="false"
expanded="false"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>263</fr:anchor><fr:addr
type="user">dia-0004</fr:addr><fr:route>dia-0004.xml</fr:route><fr:title
text="Diary: Relation between container distributive laws and matching pairs of monoids/Zappa-Szép products">Diary: Relation between container distributive laws and matching pairs of monoids/Zappa-Szép products</fr:title><fr:date><fr:year>2024</fr:year><fr:month>12</fr:month><fr:day>11</fr:day></fr:date><fr:authors><fr:author><fr:link
type="local"
href="chrisjpurdy.xml"
addr="chrisjpurdy"
title="Chris Purdy">Chris Purdy</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:p><fr:link
type="local"
href="dia-0003.xml"
addr="dia-0003"
title="Diary: Monad container algebras">Previous entry</fr:link>, <fr:link
type="external"
href="dia-0005">Next entry</fr:link></fr:p>
  
  <fr:tree
toc="true"
numbered="true"
show-heading="false"
show-metadata="false"
expanded="true"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>253</fr:anchor><fr:addr
type="user">lsd-0024</fr:addr><fr:route>lsd-0024.xml</fr:route><fr:title
text="Relation between container distributive laws and matching pairs of monoids/Zappa-Szép products">Relation between container distributive laws and matching pairs of monoids/Zappa-Szép products</fr:title><fr:date><fr:year>2024</fr:year><fr:month>12</fr:month><fr:day>11</fr:day></fr:date><fr:authors><fr:author><fr:link
type="local"
href="chrisjpurdy.xml"
addr="chrisjpurdy"
title="Chris Purdy">Chris Purdy</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:p>As mentioned in <html:span
xmlns:html="http://www.w3.org/1999/xhtml"
class="link-reference"><fr:link
type="local"
href="ahmanuustalu2013.xml"
addr="ahmanuustalu2013"
title="Distributive laws of directed containers">[ahmanuustalu2013]</fr:link></html:span>, <fr:link
type="local"
href="lsd-0022.xml"
addr="lsd-0022"
title="Directed container distributive law">directed container distributive laws</fr:link> are generalisations of <fr:em>matching pairs of monoid actions</fr:em>. Further, composition of directed containers via a distributive law is a generalisation of the <fr:link
type="external"
href="https://en.wikipedia.org/wiki/Zappa%E2%80%93Sz%C3%A9p_product">Zappa-Szép product</fr:link> of two monoids. As mentioned in the paper, you can actually recover the definition of a matching pair by looking at distributive laws between representable <fr:link
type="local"
href="lsd-0023.xml"
addr="lsd-0023"
title="Directed container">directed containers</fr:link>.</fr:p><fr:tree
toc="true"
numbered="true"
show-heading="true"
show-metadata="false"
expanded="true"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>255</fr:anchor><fr:addr
type="user">lsd-0025</fr:addr><fr:route>lsd-0025.xml</fr:route><fr:title
text="Directed container distributive law between representables">Directed container distributive law between representables</fr:title><fr:date><fr:year>2024</fr:year><fr:month>12</fr:month><fr:day>11</fr:day></fr:date><fr:authors><fr:author><fr:link
type="local"
href="chrisjpurdy.xml"
addr="chrisjpurdy"
title="Chris Purdy">Chris Purdy</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:p>Let <fr:tex
display="inline"><![CDATA[(1 \triangleright  \lambda  \_ . A, \downarrow ^A, o^A, \oplus ^A)]]></fr:tex> and <fr:tex
display="inline"><![CDATA[(1 \triangleright  \lambda  \_ . B, \downarrow ^B, o^B, \oplus ^B)]]></fr:tex> be representable <fr:link
type="local"
href="lsd-0023.xml"
addr="lsd-0023"
title="Directed container">directed containers</fr:link>. By specialising the equations of a <fr:link
type="local"
href="lsd-0022.xml"
addr="lsd-0022"
title="Directed container distributive law">directed container distributive law</fr:link> to these, all equations involving <fr:tex
display="inline"><![CDATA[u_2]]></fr:tex> disappear and we are left with:
  <fr:tex
display="block"><![CDATA[     \begin {align*}       v_1\ b\ o^A &= o^A\\       v_1\ o^B\ a &= a\\       v_1\ b\ (a \oplus ^A a') &= v_1\ b\ a \oplus ^A v_1\ (v_2\ b\ a)\ a'\\       v_1\ (b \oplus ^B b')\ a &= v_1\ b\ (v_1\ b'\ a)\\       v_2\ b\ o^A &= b\\       v_2\ o^B\ a &= o^B\\       v_2\ b\ (a \oplus ^A a') &= v_2\ (v_2\ b\ a)\ a'\\       v_2\ (b \oplus ^B b')\ a &= v_2\ b\ (v_1\ b' a) \oplus ^B v_2\ b'\ a     \end {align*}   ]]></fr:tex>
  which exhibit <fr:tex
display="inline"><![CDATA[v_1]]></fr:tex> and <fr:tex
display="inline"><![CDATA[v_2]]></fr:tex> as a matching pair of monoid maps between the monoids <fr:tex
display="inline"><![CDATA[(A , o^A, \oplus ^A)]]></fr:tex> and <fr:tex
display="inline"><![CDATA[(B, o^B, \oplus ^B)]]></fr:tex>. Hence, directed container distributive laws of this type are in bijection with matching pairs of the relevant monoids.</fr:p></fr:mainmatter><fr:backmatter /></fr:tree><fr:p>As it turns out, <fr:link
type="local"
href="lsd-0008.xml"
addr="lsd-0008"
title="Monad container distributive law">monad container distributive laws</fr:link> are <fr:em>also</fr:em> a generalisation of matching pairs of monoid actions. This is a bit harder to see than in the directed container case, but as before we can recover the data and equations for a matching pair by specialising the distributive law to a particular type of monad container.</fr:p><fr:tree
toc="true"
numbered="true"
show-heading="true"
show-metadata="false"
expanded="true"
root="false"
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"><fr:frontmatter><fr:anchor>257</fr:anchor><fr:addr
type="user">lsd-0026</fr:addr><fr:route>lsd-0026.xml</fr:route><fr:title
text="Monad container distributive law between writers">Monad container distributive law between writers</fr:title><fr:date><fr:year>2024</fr:year><fr:month>12</fr:month><fr:day>11</fr:day></fr:date><fr:authors><fr:author><fr:link
type="local"
href="chrisjpurdy.xml"
addr="chrisjpurdy"
title="Chris Purdy">Chris Purdy</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:p>Let <fr:tex
display="inline"><![CDATA[(A \triangleright  \lambda  \_ . 1, \iota ^A, \sigma ^A, \text {pr}^A)]]></fr:tex> and <fr:tex
display="inline"><![CDATA[(B \triangleright  \lambda  \_ . 1, \iota ^B, \sigma ^B, \text {pr}^B)]]></fr:tex> be <fr:link
type="local"
href="lsd-0002.xml"
addr="lsd-0002"
title="Monad container">monad containers</fr:link>. By specialising the data and equations for a <fr:link
type="local"
href="lsd-0008.xml"
addr="lsd-0008"
title="Monad container distributive law">monad container distributive law</fr:link> to these, <fr:tex
display="inline"><![CDATA[v_1]]></fr:tex> and <fr:tex
display="inline"><![CDATA[v_2]]></fr:tex> become trivial (<fr:tex
display="inline"><![CDATA[\text {pr}^A]]></fr:tex> and <fr:tex
display="inline"><![CDATA[\text {pr}^B]]></fr:tex> are already trivial), and we are left with:
  
  <fr:tex
display="block"><![CDATA[     \begin {align*}            u_1\ \iota ^A\ (\lambda  \_ . b) &= b\\     u_1\ a\ (\lambda  \_ . \iota ^B) &= \iota ^B\\     u_1\ (\sigma ^A\ a\ (\lambda  \_ . a'))\ (\lambda  \_ . b) &= u_1\ a\ (\lambda  \_ . u_1\ a'\ (\lambda  \_ . b))\\     u_1\ a\ (\lambda  \_ . \sigma ^B\ b\ (\lambda  \_ . b')) &= \sigma ^B\ (u_1\ a\ (\lambda  \_ . b))\ (\lambda  \_ . u_1\ (u_2\ a\ (\lambda  \_ . b)\ *)\ (\lambda  \_ . b'))\\      u_2\ \iota ^A\ (\lambda  \_ . b)\ * &= \iota ^A\\     u_2\ a\ (\lambda  \_ . \iota ^B)\ * &= a\\     u_2\ (\sigma ^A\ a\ (\lambda  \_ . a'))\ (\lambda  \_ . b)\ * &= \sigma ^A\ (u_2\ a\ (\lambda  \_ . u_1\ a'\ (\lambda  \_ . b))\ *)\ (\lambda  \_ . u_2\ a'\ (\lambda  \_ . b')\ *)\\     u_2\ a\ (\lambda  \_ . \sigma ^B\ b\ (\lambda  \_ . b'))\ * &= u_2\ (u_2\ a\ (\lambda  \_ . b)\ *)\ (\lambda  \_ . b')\ *        \end {align*}   ]]></fr:tex>

  Bear in mind that, since all position sets are <fr:tex
display="inline"><![CDATA[1]]></fr:tex>, we do not lose generality by assuming constant all of the functions in the equations above. By defining:
  
  <fr:tex
display="block"><![CDATA[     \begin {align*}            \alpha \ a\ b := u_1\ a\ (\lambda  \_ . b)\\     \beta \ a\ b := u_2\ a\ (\lambda  \_ . b)\ *\\     a \otimes ^A a' := \sigma ^A\ a\ (\lambda  \_ . a')\\     b \otimes ^B b' := \sigma ^B\ b\ (\lambda  \_ . b')        \end {align*}   ]]></fr:tex>

  we can rewrite these equations as:
  
  <fr:tex
display="block"><![CDATA[     \begin {align*}            \alpha \ \iota ^A\ b &= b\\     \alpha \ a\ \iota ^B &= \iota ^B\\     \alpha \ (a \otimes ^A a')\ b &= \alpha \ a\ (\alpha \ a'\ b)\\     \alpha \ a\ (b \otimes ^B b') &= (\alpha \ a\ b) \otimes ^B (\alpha \ (\beta \ a\ b)\ b')\\      \beta \ \iota ^A\ b &= \iota ^A\\     \beta \ a\ \iota ^B &= a\\     \beta \ (a \otimes ^A a')\ b &= (\beta \ a\ (\alpha \ a'\ b)) \otimes ^A (\beta \ a'\ b')\\     \beta \ a\ (b \otimes ^B b') &= \beta \ (\beta \ a\ b)\ b'        \end {align*}   ]]></fr:tex>

  These are exactly the equations exhibiting <fr:tex
display="inline"><![CDATA[\alpha ]]></fr:tex> and <fr:tex
display="inline"><![CDATA[\beta ]]></fr:tex> as a matching pair of monoid actions between <fr:tex
display="inline"><![CDATA[(A, \otimes ^A, \iota ^A)]]></fr:tex> and <fr:tex
display="inline"><![CDATA[(B , \otimes ^B, \iota ^B)]]></fr:tex>. Therefore, monad container distributive laws of this type are in bijection with matching pairs of the relevant monoids.</fr:p></fr:mainmatter><fr:backmatter /></fr:tree><fr:p>As shown, both of these types of distributive law are generalisations of matching pairs of monoid actions, each in a slightly different way. For directed containers the generalisation is "in the direction of the shapes", and for monad containers the generalisation is "in the direction of the positions".</fr:p></fr:mainmatter><fr:backmatter /></fr:tree>
</fr:mainmatter><fr:backmatter /></fr:tree></fr:p></fr:mainmatter><fr:backmatter /></fr:tree></fr:mainmatter><fr:backmatter /></fr:tree></fr:backmatter></fr:tree>